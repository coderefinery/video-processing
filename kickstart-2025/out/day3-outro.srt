1
00:00:00,000 --> 00:00:00,600
So we have the wrap-up and summary.

2
00:00:00,600 --> 00:00:06,480
So maybe [name], again.

3
00:00:06,480 --> 00:00:08,480
Now you can hear me.

4
00:00:08,480 --> 00:00:12,200
Yeah, I'll switch to the notes.

5
00:00:12,200 --> 00:00:15,560
And so as usual, at the very bottom,

6
00:00:15,560 --> 00:00:18,120
there's the feedback of the day.

7
00:00:18,120 --> 00:00:20,880
And not just the day, I guess, this

8
00:00:20,880 --> 00:00:22,600
should be for the whole course.

9
00:00:27,160 --> 00:00:28,960
Do we have two feedbacks, one for the day

10
00:00:28,960 --> 00:00:30,360
and one for the course?

11
00:00:33,320 --> 00:00:36,120
If someone wants to duplicate it twice, you can.

12
00:00:36,120 --> 00:00:38,720
But usually it's just one.

13
00:00:38,720 --> 00:00:40,920
No, let's go with one.

14
00:00:40,920 --> 00:00:42,720
At least for this part.

15
00:00:42,720 --> 00:00:46,640
But then now for general Q&A. So now's

16
00:00:46,640 --> 00:00:50,840
the time when we can all be here,

17
00:00:50,840 --> 00:00:54,400
and we'll just reflect on the course itself.

18
00:00:57,360 --> 00:00:59,480
Yeah, so who remembers at the beginning

19
00:00:59,480 --> 00:01:03,600
when we said that it was impossible to teach everything

20
00:01:03,600 --> 00:01:11,520
that was needed in a, what's it called, in a 10-hour course?

21
00:01:11,520 --> 00:01:13,560
HPC system?

22
00:01:13,560 --> 00:01:26,200
Yeah, so I still think that's true. I mean, here in this course, we've only had time to give you

23
00:01:26,200 --> 00:01:33,160
a summary, do some examples, and so on. But by no means do we think that this course is the end of

24
00:01:33,160 --> 00:01:41,240
what you need. It's just a starting point. It basically, hopefully, lets you realize what's

25
00:01:41,240 --> 00:01:55,640
possible and have had the initial experience with stuff. And now, you will know when and

26
00:01:55,640 --> 00:02:05,080
how to go read for what comes next. What do the other instructors think? Was it?

27
00:02:05,080 --> 00:02:16,240
Yeah, I think, I don't remember, when was the first time I was doing this course back

28
00:02:16,240 --> 00:02:25,920
in 2016 or something, and the ecosystem has changed dramatically from those times.

29
00:02:25,920 --> 00:02:32,280
Don't be afraid of thinking that, okay, this is a lot of stuff happening, because it's

30
00:02:32,280 --> 00:02:36,700
There's a lot of stuff happening for everybody.

31
00:02:36,700 --> 00:02:43,720
Back then, it was basically like we wouldn't have even, let's say, the GPU day at all basically

32
00:02:43,720 --> 00:02:49,960
because the GPUs weren't being utilized, but not in this sort of a level.

33
00:02:49,960 --> 00:02:58,160
Many of the concepts like AI and whatever, they weren't things that are happening constantly.

34
00:02:58,160 --> 00:03:04,240
a lot of stuff currently happening in the space, like the computational space is getting

35
00:03:05,280 --> 00:03:11,360
very complex. But at the same time, I would say that it's good to differentiate.

36
00:03:13,840 --> 00:03:20,000
If you have certain things that you need and you want, it's good to know that, okay,

37
00:03:20,000 --> 00:03:28,080
I don't need to necessarily know everything about everything. You can focus on learning

38
00:03:28,080 --> 00:03:32,560
those things that you need for your work and then learning the rest later.

39
00:03:42,160 --> 00:03:45,440
Yeah, so some of these questions. The first question is about

40
00:03:45,440 --> 00:03:49,280
COMSOL and how to get started. What would you all think?

41
00:03:51,440 --> 00:03:56,800
Depends on your time limitations. I would suggest coming in on one of the COMSOL focus

42
00:03:56,800 --> 00:04:02,240
days that we have in Garage, because then there are plenty of experts here that have a lot of

43
00:04:02,240 --> 00:04:06,880
knowledge of Comsol and also a lot of detailed knowledge on how Comsol exactly works.

44
00:04:07,680 --> 00:04:14,400
While if you come in on another day, we do have a few people that do know about CompSort,

45
00:04:14,960 --> 00:04:22,000
but you might be unlucky and, well, not get the right person on that day.

46
00:04:22,000 --> 00:04:29,120
But it doesn't hurt to show up any other day, and you're welcome to, but it's just possible that

47
00:04:29,840 --> 00:04:35,120
we might not be able to help you on the spot. And I would say that Comsol is one of

48
00:04:35,120 --> 00:04:40,240
these kinds of programs that once you get it sorted out and it works, it works.

49
00:04:40,240 --> 00:04:45,760
It's the kind of a program that, because it has this, you can submit it straight from

50
00:04:46,720 --> 00:04:50,480
the graphical user interface and then it just runs stuff on the background and you don't need

51
00:04:50,480 --> 00:04:56,400
to think about it. But to get it working, that's the problem. And that's usually like,

52
00:04:57,920 --> 00:05:05,840
yeah, it's a good idea to ask for help because it's not fun doing it by yourself based on

53
00:05:07,920 --> 00:05:16,400
just looking at the manuals. Yeah. And it's the kind of thing that you'll always find people

54
00:05:16,400 --> 00:05:22,640
that know about the cluster itself but might not know all the buttons Comsol. So if you can get

55
00:05:22,640 --> 00:05:26,240
it most of the way there and show us an error message that comes from the cluster,

56
00:05:26,960 --> 00:05:32,480
you can probably get help almost any day. But if it's not that, then no.

57
00:05:35,120 --> 00:05:44,000
Next question is also pretty good. So a custom library which is not written for Triton,

58
00:05:44,000 --> 00:05:46,720
and not available, and the default instructions

59
00:05:46,720 --> 00:05:48,440
don't work on Triton.

60
00:05:48,440 --> 00:05:52,000
So yeah, what would people do there?

61
00:05:56,080 --> 00:06:00,200
I guess, what's the name of the library?

62
00:06:00,200 --> 00:06:02,840
Like, is there a public link or something?

63
00:06:02,840 --> 00:06:04,920
Is it a common library?

64
00:06:04,920 --> 00:06:07,720
So if it's.

65
00:06:07,720 --> 00:06:11,600
So I would say, in general, I would say, yeah,

66
00:06:11,600 --> 00:06:14,920
come to Garage and let us have a look at it together.

67
00:06:17,560 --> 00:06:21,960
I would say it really depends on what kind of library it is.

68
00:06:21,960 --> 00:06:24,480
If this is something that is, for example,

69
00:06:26,280 --> 00:06:29,600
or is a Python library, then you can normally

70
00:06:29,600 --> 00:06:33,960
just do it yourself if you know enough about Python

71
00:06:33,960 --> 00:06:35,800
so that you can just run the code

72
00:06:35,800 --> 00:06:39,160
from a customally installed library.

73
00:06:39,160 --> 00:06:41,880
If you don't, also, come to Garage.

74
00:06:41,880 --> 00:06:44,080
We can try to help you there.

75
00:06:44,080 --> 00:06:47,400
And if there are no really strange things happening,

76
00:06:47,400 --> 00:06:49,160
normally we get the things running.

77
00:06:51,640 --> 00:06:52,960
But yeah.

78
00:06:52,960 --> 00:06:56,080
Yeah, quite often, especially for scientific coding

79
00:06:56,080 --> 00:07:01,080
and scientific programs, for the whole ecosystem,

80
00:07:01,160 --> 00:07:03,320
like the Linux ecosystem and stuff like that,

81
00:07:03,320 --> 00:07:07,280
like the GNU ecosystem and everything related to that,

82
00:07:07,280 --> 00:07:15,320
There's standards that are very engineer focused, but they follow them very well.

83
00:07:15,320 --> 00:07:20,680
So they have, usually if you have a code, you have certain configurations or configure

84
00:07:20,680 --> 00:07:25,800
flags or whatever, and you can spot the pattern and use that.

85
00:07:25,800 --> 00:07:29,880
But the unfortunate thing is that because it's so engineering focused is that I remember

86
00:07:29,880 --> 00:07:39,880
one CMake manual, a tutorial from those people was like 500 pages. So it was insanely long,

87
00:07:39,880 --> 00:07:44,520
like all of the tutorials, but it's very strict and very regimented and everything is where it's

88
00:07:44,520 --> 00:07:51,320
supposed to be. But when it comes to scientific programs, nobody has time to read those 500 pages.

89
00:07:51,320 --> 00:07:56,680
So you might end up that the scientific program, it doesn't follow those standards completely.

90
00:07:56,680 --> 00:08:01,480
So it becomes kind of like a translation problem where you have like, okay, this is what the

91
00:08:02,840 --> 00:08:10,360
creators of the program intended to be done, but they use different names for the flags or

92
00:08:10,360 --> 00:08:15,240
whatever. And now suddenly you need to do this kind of translation. Okay, what did they, like

93
00:08:15,240 --> 00:08:21,560
this XY problem kind of situation, what did they want to do and what things that the installation

94
00:08:21,560 --> 00:08:28,840
thing need and it becomes this kind of guessing game. You need to go through the source usually

95
00:08:28,840 --> 00:08:36,840
and check what it actually tries to do. And sometimes getting outside feedback on this,

96
00:08:36,840 --> 00:08:44,520
it can be really helpful. Like somebody else who has done enough of the pattern recognition

97
00:08:44,520 --> 00:08:52,120
to see that, okay, like, hey, they're probably trying to do this kind of thing and they mean

98
00:08:52,120 --> 00:08:58,920
these and these things. And sometimes that can happen with many libraries.

99
00:08:58,920 --> 00:09:04,440
Or even just knowing where in the error message you actually have to look for what the actual

100
00:09:04,440 --> 00:09:11,600
error message is, because you get like three pages of outputs. And if you don't, or if

101
00:09:11,600 --> 00:09:18,560
haven't done this before. Okay, this is so much stuff. I don't even know where to look

102
00:09:18,560 --> 00:09:25,580
for things. And there's a thousand different warnings, errors and stuff. And yeah, we kind

103
00:09:25,580 --> 00:09:32,520
of have seen these things and we know which things are important and need to be considered

104
00:09:32,520 --> 00:09:37,320
and which ones are, yeah, this is just standard output that it always prints.

105
00:09:37,320 --> 00:09:45,160
But I would also say that I wouldn't discourage you to try checking out the pattern recognition

106
00:09:45,160 --> 00:09:46,160
yourself.

107
00:09:46,160 --> 00:09:50,960
But the problem, the important thing to realize is that the problem often necessarily isn't

108
00:09:50,960 --> 00:09:51,960
in you.

109
00:09:51,960 --> 00:09:57,680
It might be that somebody misheard something five years ago and now it's in the code.

110
00:09:57,680 --> 00:10:04,760
Now it's like this game of telephone that happens with programs and sometimes somebody

111
00:10:04,760 --> 00:10:08,580
doesn't follow a standard or something, and then it gets baked into the code and everybody

112
00:10:08,580 --> 00:10:12,640
uses the code already, and now it's like a standard in the code, but you need to know

113
00:10:12,640 --> 00:10:13,640
about it.

114
00:10:13,640 --> 00:10:19,840
And it's like hidden in a readme five pages deep, and it's not necessarily your fault

115
00:10:19,840 --> 00:10:23,600
that you didn't recognize the pattern, or you didn't know about this, or you didn't

116
00:10:23,600 --> 00:10:24,880
know about the thing.

117
00:10:24,880 --> 00:10:33,180
But what you can try, like at least I do, is that if I see something, I'll usually go

118
00:10:33,180 --> 00:10:38,060
back to the source and check, like, okay, how is this supposed to be written?

119
00:10:38,060 --> 00:10:44,480
Like, let's say, like, how are they expected these flags to be given?

120
00:10:44,480 --> 00:10:48,780
And why aren't they given like they are and what flags they want to give them and that

121
00:10:48,780 --> 00:10:49,780
sort of stuff.

122
00:10:49,780 --> 00:10:56,740
But it becomes this kind of like, it's very hard to say, how do you recognize these things?

123
00:10:56,740 --> 00:11:01,380
Like what [name] said about the error messages, it's very hard to say how you spot the right

124
00:11:01,380 --> 00:11:04,460
line in the error message.

125
00:11:04,460 --> 00:11:11,180
It only comes through time, but it's not the problem that you're wrong because you didn't

126
00:11:11,180 --> 00:11:12,180
understand it.

127
00:11:12,180 --> 00:11:17,820
The message always can be bad, like the error message can always be bad, but you just plow

128
00:11:17,820 --> 00:11:18,820
through it.

129
00:11:18,820 --> 00:11:22,940
At a certain point, you just know to look for a certain place after you encountered

130
00:11:22,940 --> 00:11:25,420
it more and more times.

131
00:11:25,420 --> 00:11:28,540
It's like, unfortunately, it's sometimes like that.

132
00:11:28,540 --> 00:11:31,340
But so I would encourage everybody

133
00:11:31,340 --> 00:11:33,220
to just also try it out.

134
00:11:33,220 --> 00:11:38,980
Like, just try reading it and try googling as well.

135
00:11:38,980 --> 00:11:41,100
Because after a certain time, you

136
00:11:41,100 --> 00:11:45,340
get accustomed to seeing those patterns.

137
00:11:45,340 --> 00:11:49,180
And just where you mentioned this

138
00:11:49,180 --> 00:11:51,420
has become standard in the code, or there is

139
00:11:51,420 --> 00:11:56,060
something that is happening.

140
00:11:56,060 --> 00:11:59,320
It might also be good if this is a project that

141
00:11:59,320 --> 00:12:03,420
is hosted on GitHub to just look for something

142
00:12:03,420 --> 00:12:05,980
similar or something where you think this could

143
00:12:05,980 --> 00:12:09,340
be related in the issues.

144
00:12:09,340 --> 00:12:12,540
Because often enough, there is an issue from five years back

145
00:12:12,540 --> 00:12:16,780
that, why the heck is this the default?

146
00:12:16,780 --> 00:12:21,020
This is completely unintuitive and not documented anywhere.

147
00:12:21,020 --> 00:12:24,540
And could this place be changed?

148
00:12:24,540 --> 00:12:26,640
And yeah, it just never was.

149
00:12:31,420 --> 00:12:33,300
Yeah, and I have a personal example for that

150
00:12:33,300 --> 00:12:34,800
just from a Microsoft library.

151
00:12:38,460 --> 00:12:39,300
Yeah.

152
00:12:40,900 --> 00:12:43,060
And my comment on this question,

153
00:12:43,060 --> 00:12:45,420
when I see there's an install.py file,

154
00:12:45,420 --> 00:12:50,120
that's not the standard name of a package project thing.

155
00:12:50,120 --> 00:12:53,400
So if it was setup.py or pyproject.toml,

156
00:12:53,400 --> 00:12:55,520
I'd think, OK, most likely, I can

157
00:12:55,520 --> 00:12:57,960
make a virtual environment or content environment

158
00:12:57,960 --> 00:12:59,000
and run a command.

159
00:12:59,000 --> 00:13:02,760
And it will install it and mostly do all the stuff

160
00:13:02,760 --> 00:13:03,400
automatically.

161
00:13:03,400 --> 00:13:05,360
I might need to tune some, but not.

162
00:13:05,360 --> 00:13:07,520
But install.py makes me think someone

163
00:13:07,520 --> 00:13:10,460
has written a custom script that tries to install it.

164
00:13:10,460 --> 00:13:12,160
Who knows where it installs?

165
00:13:12,160 --> 00:13:14,960
And if I need to do it myself, it's

166
00:13:14,960 --> 00:13:16,720
probably going to be a lot of manual work

167
00:13:16,720 --> 00:13:19,280
in figuring out how they did it.

168
00:13:19,280 --> 00:13:24,720
Of course, if you're using this, there's nothing you can do now, but this is a lesson for the

169
00:13:24,720 --> 00:13:31,440
future. When you're releasing something, it's worth taking a little bit of time to understand

170
00:13:31,440 --> 00:13:37,360
how the project, how Python stuff is supposed to be packaged, and so on, and then do that if you

171
00:13:37,360 --> 00:13:42,960
want people to use it. We actually have other courses in the Python for Scientific Computing

172
00:13:42,960 --> 00:13:48,480
course that's usually in the autumns. There's a session where we very briefly talk about the

173
00:13:48,480 --> 00:13:59,040
packaging standards and it's not that hard. And I want to add on that, also to consider

174
00:13:59,040 --> 00:14:05,840
what should be happening in an installation script in Python and what should not. Like

175
00:14:05,840 --> 00:14:15,680
things where Python assumes that underlying system libraries are installed. So your installation

176
00:14:15,680 --> 00:14:20,960
script should not try to install system libraries, because that is always operating system dependent

177
00:14:20,960 --> 00:14:28,640
and Python says, no, I don't want to do this. This is something that the user has to take care of

178
00:14:28,640 --> 00:14:35,440
in a different way. Conda, for example, does a lot of wrapping around that and adds

179
00:14:35,440 --> 00:14:43,280
some things that are system libraries in the environments, but don't try to do this in a

180
00:14:43,280 --> 00:14:51,160
the custom installation script, you will just most likely make it extremely complicated

181
00:14:51,160 --> 00:14:54,040
for someone else to actually install it.

182
00:14:54,040 --> 00:14:55,040
Yeah.

183
00:14:55,040 --> 00:14:56,040
Yeah.

184
00:14:56,040 --> 00:14:57,040
Yeah.

185
00:14:57,040 --> 00:15:04,200
But like, like, again, like, yeah, I will quickly mention that the, like, again, like,

186
00:15:04,200 --> 00:15:09,520
but it's often, like, also high burden, like, to, like, think that, okay, this needs to

187
00:15:09,520 --> 00:15:17,440
be perfect and whatever first time. If you want to do something and you want to publish it,

188
00:15:17,440 --> 00:15:25,600
don't worry if it's bad the first time. It's the continuous process of improvement that matters

189
00:15:25,600 --> 00:15:34,480
more. I have published code that is really bad, and I have made repos that I still look back and

190
00:15:34,480 --> 00:15:40,080
think that these are bad, but they were bad because I didn't know better at that time.

191
00:15:41,360 --> 00:15:47,120
You will go through the process and that will happen for everybody. Everybody will publish

192
00:15:47,120 --> 00:15:52,800
code that is not using the standards. It's missing something that you realize later that,

193
00:15:52,800 --> 00:15:59,520
hey, I should have used this and that. Don't put too high of a burden on yourself.

194
00:15:59,520 --> 00:16:03,760
But in the next iteration, know that, OK, maybe I

195
00:16:03,760 --> 00:16:05,840
shouldn't use the previous one.

196
00:16:05,840 --> 00:16:09,800
Maybe I should try improving it in the next iteration.

197
00:16:12,440 --> 00:16:13,920
Yeah.

198
00:16:13,920 --> 00:16:15,680
Yeah, I sort of say something similar.

199
00:16:15,680 --> 00:16:20,000
So you don't have to be perfect, because perfect is always

200
00:16:20,000 --> 00:16:21,040
too far away.

201
00:16:21,040 --> 00:16:22,760
Just try to do a little bit better

202
00:16:22,760 --> 00:16:24,400
each time you do something.

203
00:16:24,400 --> 00:16:29,200
And then once you, like, if you do something often,

204
00:16:29,200 --> 00:16:34,200
you'll get better at it and reach the level you need.

205
00:16:34,200 --> 00:16:38,800
So what, I mean, OK, so for the feedback parts here,

206
00:16:38,800 --> 00:16:42,040
it looks pretty similar to other days.

207
00:16:47,120 --> 00:16:51,000
Yeah, so what should we recommend people do next?

208
00:16:51,000 --> 00:16:54,160
So what we covered was in the schedule.

209
00:16:54,160 --> 00:16:57,600
There's a lot more written material to review.

210
00:16:59,200 --> 00:17:15,040
Yeah, like at least I would recommend just trying out whatever you are planning on working

211
00:17:15,040 --> 00:17:16,040
on.

212
00:17:16,040 --> 00:17:21,800
Like it's like if you have a bunch of cookbooks in your bookshelf, but you never go to the

213
00:17:21,800 --> 00:17:25,600
kitchen, you will never learn how to do like cook food.

214
00:17:25,600 --> 00:17:32,300
Like you really need to go to the place and start cooking and tasting the food for yourself.

215
00:17:32,300 --> 00:17:35,960
And then of course, use the cookbooks as this kind of like reference point that, okay, it

216
00:17:35,960 --> 00:17:40,860
should look like this, but why does it, why my food doesn't look like this?

217
00:17:40,860 --> 00:17:46,640
And then you're like, you can do the improvement procedure, but like, I would highly recommend

218
00:17:46,640 --> 00:17:51,320
that you pick a program or a thing that you want to do in the cluster.

219
00:17:51,320 --> 00:17:58,760
And first, let's say you have a program that you run currently on your laptop, and let's

220
00:17:58,760 --> 00:18:03,960
say it heats up your laptop and you can't have it in your lab anymore, it's too hot

221
00:18:03,960 --> 00:18:06,680
because it's constantly running some program.

222
00:18:06,680 --> 00:18:11,680
Can you move that to the cluster and what does it require from you to do that?

223
00:18:11,680 --> 00:18:16,640
And try out, would it be possible that it heats up the computer in a machine room somewhere

224
00:18:16,640 --> 00:18:20,720
so that your computer isn't overheating?

225
00:18:20,720 --> 00:18:25,520
So try some program, move it into the cluster,

226
00:18:25,520 --> 00:18:28,680
and get accustomed to the workflow

227
00:18:28,680 --> 00:18:33,800
that you basically put something running somewhere else,

228
00:18:33,800 --> 00:18:36,440
and you don't have to worry about it anymore.

229
00:18:39,800 --> 00:18:44,040
Yeah, that's a good way to do it.

230
00:18:44,040 --> 00:18:49,480
What courses would you recommend people to follow up next with?

231
00:18:50,720 --> 00:19:07,160
Well, on the autumn, we have the Python for Scientific Computing coming up again, like

232
00:19:07,160 --> 00:19:08,160
that's our course.

233
00:19:08,160 --> 00:19:11,800
And there's also the Code Refinery course coming at some point.

234
00:19:11,800 --> 00:19:15,200
They are good ones, of course.

235
00:19:15,200 --> 00:19:21,280
I think Code Refinery is mid-September now.

236
00:19:21,280 --> 00:19:26,360
So I guess you'll get links to this in your email

237
00:19:26,360 --> 00:19:29,080
if you've registered.

238
00:19:29,080 --> 00:19:31,200
And Code Refinery and Python for SciComp

239
00:19:31,200 --> 00:19:33,520
are a lot of these same kind of instructors

240
00:19:33,520 --> 00:19:35,640
and the same teaching style, where

241
00:19:35,640 --> 00:19:38,520
it's live stream with the notes to ask stuff

242
00:19:38,520 --> 00:19:43,040
and lots of exercises and so on.

243
00:19:43,040 --> 00:19:48,640
Yeah, the focus is more on the workflows and how to use Git and that sort of stuff.

244
00:19:50,720 --> 00:19:52,880
Improving your productivity, basically.

245
00:19:54,080 --> 00:19:54,580
Yeah.

246
00:19:56,640 --> 00:19:58,880
Should we discuss any feedback?

247
00:20:03,920 --> 00:20:04,420
Yeah.

248
00:20:05,920 --> 00:20:08,480
I think the feedback is good and honest.

249
00:20:08,480 --> 00:20:16,080
And it's always complicated with this course, and especially with the time frame, how to

250
00:20:17,840 --> 00:20:20,000
get everything into that.

251
00:20:23,040 --> 00:20:30,080
Yeah. And there's this thing we struggle with for every course. So if you make it

252
00:20:30,080 --> 00:20:38,960
advanced enough to be useful, then it excludes most of the people that could benefit from it,

253
00:20:38,960 --> 00:20:45,760
and is basically saying, do all these other more basic courses before you can get to what you need.

254
00:20:45,760 --> 00:20:51,760
But with today's academics and so on, like the academic system and the time pressures people

255
00:20:51,760 --> 00:20:59,520
have, people just don't have time to do a ton of prerequisite courses before they start getting

256
00:20:59,520 --> 00:21:07,840
stuff done. And that's why we emphasize the big courses that sort of set the basic level,

257
00:21:07,840 --> 00:21:14,880
ways for people to study what they need themselves, and then also our help so we can

258
00:21:14,880 --> 00:21:22,880
help you with the specific parts that you need help for. And, you know, sort of like one-on-one

259
00:21:22,880 --> 00:21:30,000
working together. So time's up. Are there any final things to say? So I propose

