1
00:00:00,000 --> 00:00:02,000
CodeRefinery.org

2
00:00:30,000 --> 00:00:32,060
you

3
00:01:00,000 --> 00:01:02,060
you

4
00:01:30,000 --> 00:01:32,060
you

5
00:02:00,000 --> 00:02:02,060
you

6
00:02:30,000 --> 00:02:32,060
you

7
00:03:00,000 --> 00:03:02,060
you

8
00:03:30,000 --> 00:03:32,060
you

9
00:04:00,000 --> 00:04:02,060
you

10
00:04:30,000 --> 00:04:32,060
you

11
00:05:00,000 --> 00:05:02,060
you

12
00:05:30,000 --> 00:05:32,060
you

13
00:06:00,000 --> 00:06:02,060
you

14
00:06:30,000 --> 00:06:32,060
you

15
00:07:00,000 --> 00:07:02,060
you

16
00:07:30,000 --> 00:07:32,060
you

17
00:08:00,000 --> 00:08:02,060
you

18
00:08:30,000 --> 00:08:32,060
you

19
00:09:00,000 --> 00:09:02,060
you

20
00:09:30,000 --> 00:09:32,060
you

21
00:10:00,000 --> 00:10:02,060
you

22
00:10:30,000 --> 00:10:32,060
you

23
00:11:00,000 --> 00:11:01,000
Hello.

24
00:11:01,000 --> 00:11:02,000
Hello, hello.

25
00:11:02,000 --> 00:11:03,000
Anyone can.

26
00:11:03,000 --> 00:11:04,000
Hello, hello.

27
00:11:04,000 --> 00:11:05,000
Anyone out there hear us?

28
00:11:05,000 --> 00:11:06,000
Yeah, the stream seems to work.

29
00:11:06,000 --> 00:11:07,000
Okay.

30
00:11:07,000 --> 00:11:08,000
At least I see us there.

31
00:11:08,000 --> 00:11:09,000
Can also hear us over there.

32
00:11:09,000 --> 00:11:10,000
Yeah.

33
00:11:10,000 --> 00:11:11,000
Yeah.

34
00:11:11,000 --> 00:11:12,000
Yeah.

35
00:11:12,000 --> 00:11:13,000
Yeah.

36
00:11:13,000 --> 00:11:14,000
Yeah.

37
00:11:14,000 --> 00:11:15,000
Yeah.

38
00:11:15,000 --> 00:11:16,000
Yeah.

39
00:11:16,000 --> 00:11:17,000
Yeah.

40
00:11:17,000 --> 00:11:18,000
Yeah.

41
00:11:18,000 --> 00:11:19,000
Yeah.

42
00:11:19,000 --> 00:11:20,000
Yeah.

43
00:11:20,000 --> 00:11:21,000
Yeah.

44
00:11:21,000 --> 00:11:22,000
Yeah.

45
00:11:22,000 --> 00:11:23,000
Yeah.

46
00:11:23,000 --> 00:11:24,000
Yeah.

47
00:11:24,000 --> 00:11:25,000
Yeah.

48
00:11:25,000 --> 00:11:26,000
Yeah.

49
00:11:26,000 --> 00:11:28,880
can also hear us over there.

50
00:11:28,880 --> 00:11:30,560
Yeah.

51
00:11:30,560 --> 00:11:33,080
So we're starting off.

52
00:11:33,080 --> 00:11:34,560
Oh, should we do a sound check?

53
00:11:34,560 --> 00:11:36,920
On the stream, does my sound sound

54
00:11:36,920 --> 00:11:38,360
the same as other people's sound?

55
00:11:41,680 --> 00:11:42,680
That's the real question.

56
00:11:42,680 --> 00:11:46,240
Hopefully, require other people to talk as well.

57
00:11:46,240 --> 00:11:47,720
Correct.

58
00:11:47,720 --> 00:11:49,120
Probably does, yes.

59
00:11:49,120 --> 00:11:50,240
Should we count?

60
00:11:50,240 --> 00:11:54,080
I can start with one and mention the next person,

61
00:11:54,080 --> 00:11:55,720
which is [name].

62
00:11:55,720 --> 00:11:59,640
two or one one

63
00:12:02,200 --> 00:12:06,040
one and one i guess zero

64
00:12:09,480 --> 00:12:13,720
did we say was saying can you try your microphone i couldn't hear

65
00:12:15,400 --> 00:12:21,720
okay is it good yeah it's fine to me everything everyone sounds balanced

66
00:12:21,720 --> 00:12:28,520
All right, so, oh, who's talking now?

67
00:12:30,520 --> 00:12:36,760
Well, yeah, welcome. So we're here just chatting a bit before we get started to encourage everyone

68
00:12:36,760 --> 00:12:45,480
to join nice and early. Those of you who are registered should have a link to this document.

69
00:12:45,480 --> 00:12:53,720
the URL comes from note.coderefinery.org, but it's what we call the notes. So if you take this

70
00:12:53,720 --> 00:13:02,040
and you switch to edit mode, which you can find from up here in the desktop view,

71
00:13:03,240 --> 00:13:13,240
you'll you click the little pencil icon and then you can scroll down and you see questions and

72
00:13:13,240 --> 00:13:20,200
stuff here. So basically instead of people raising hands or using the Twitch chat, what we do,

73
00:13:21,320 --> 00:13:28,200
you can switch this to edit mode and then ask whatever you want whenever you want. So the basic

74
00:13:28,200 --> 00:13:34,200
rules or way it works, always be writing at the bottom because that's the place we'll be looking.

75
00:13:34,200 --> 00:13:38,440
We'll always put whatever section we're on, whatever links there should be, whatever you

76
00:13:38,440 --> 00:13:42,840
you should do towards the bottom.

77
00:13:42,840 --> 00:13:45,680
Usually answers are in bullet points like this.

78
00:13:45,680 --> 00:13:51,200
So yeah.

79
00:13:51,200 --> 00:13:56,840
And when you're not actively editing for a while,

80
00:13:56,840 --> 00:13:58,580
if you switch back to view mode, we

81
00:13:58,580 --> 00:14:01,680
think that will save a little bit of the performance

82
00:14:01,680 --> 00:14:05,320
of this for other people.

83
00:14:05,320 --> 00:14:13,000
And let's see what people are answering. So for icebreakers, we've got

84
00:14:15,080 --> 00:14:21,320
Where are you and what's the weather? Okay, actually we're not all in Helsinki now.

85
00:14:22,600 --> 00:14:26,760
We're in Helsinki, Espoo and Kirkkonummi in Finland.

86
00:14:29,480 --> 00:14:35,080
Maybe we should introduce ourselves. So I'm [name]. I work at Aalto University

87
00:14:35,080 --> 00:14:40,200
in what officials would call the Science IT team, what

88
00:14:40,200 --> 00:14:42,600
we call Aalto Scientific Computing.

89
00:14:42,600 --> 00:14:46,040
Basically, we do the high-performance computing

90
00:14:46,040 --> 00:14:46,920
cluster.

91
00:14:46,920 --> 00:14:49,760
We do teaching like this where you are now.

92
00:14:49,760 --> 00:14:52,560
And we help you with your work.

93
00:14:52,560 --> 00:14:55,120
And everyone else here is also in the team.

94
00:14:55,120 --> 00:14:56,760
So next on my screen is [name].

95
00:15:01,640 --> 00:15:03,360
Yeah, for some reason, the shortcut

96
00:15:03,360 --> 00:15:07,200
unmute didn't work, I don't know. I'm [name]. I'm also working at the

97
00:15:07,200 --> 00:15:12,240
Aalto Scientific computing team. I'm a research software

98
00:15:12,240 --> 00:15:16,160
engineer, which is hard to define, I would say.

99
00:15:16,160 --> 00:15:19,280
But yeah, I work with researchers and help

100
00:15:19,280 --> 00:15:24,720
them to optimize their code and to focus their research, I would say, and

101
00:15:24,720 --> 00:15:29,280
dedicate the computational tasks to us.

102
00:15:29,280 --> 00:15:38,960
[name]'s next on my screen. Hi, my name is [name]. I'm one of the instructors in this

103
00:15:38,960 --> 00:15:46,080
course and I work also on the other side of the computing. Recently I switched from

104
00:15:47,200 --> 00:15:52,480
the High Performance Computing part to the research software engineering part, so now I'm a research

105
00:15:52,480 --> 00:15:59,200
software engineer here in the team. I do similar work as [name] and I think many others here.

106
00:15:59,280 --> 00:16:04,280
Yeah. Next on my screen is [name].

107
00:16:04,280 --> 00:16:10,280
Hi, I'm [name]. I'm also a research software engineer with Aalto Scientific Computing.

108
00:16:10,280 --> 00:16:17,280
I'll be hopefully helping people with getting connected to the clusters a little bit later.

109
00:16:17,280 --> 00:16:22,280
And yeah, that's mainly about me at the moment.

110
00:16:22,280 --> 00:16:25,280
Great. [name].

111
00:16:25,280 --> 00:16:34,280
Yeah, hi, I'm [name]. I'm also an RSE with the people at Aalto. I try to help, mostly

112
00:16:34,280 --> 00:16:41,800
I try to help researchers do their research with whatever problems they have in terms

113
00:16:41,800 --> 00:16:49,120
of computing. And yeah, I'll try to help [name] with the connecting today.

114
00:16:49,120 --> 00:16:52,280
Yeah. And [name].

115
00:16:52,280 --> 00:16:59,780
Hello, I believe you got some emails from me, a few tens of emails from me, you will

116
00:16:59,780 --> 00:17:00,780
receive more.

117
00:17:00,780 --> 00:17:05,460
You know, you can always unsubscribe, I'm a big fan of data protection, so you know

118
00:17:05,460 --> 00:17:12,060
GDPR is, I truly believe in GDPR, so feel free to unsubscribe if you want to, but in

119
00:17:12,060 --> 00:17:17,980
general here I'm coordinating the training with the same team at Aalto University and

120
00:17:17,980 --> 00:17:20,860
I'm also very happy that we have Helsinki University

121
00:17:20,860 --> 00:17:23,100
and Oulu University joining with us.

122
00:17:23,100 --> 00:17:26,220
So it's a really nice distributed experience.

123
00:17:28,620 --> 00:17:29,820
Okay, great.

124
00:17:29,820 --> 00:17:32,460
So the first question I'll ask everyone here

125
00:17:32,460 --> 00:17:34,820
and you've sort of gotten to it a bit.

126
00:17:34,820 --> 00:17:37,040
What is a research software engineer?

127
00:17:37,960 --> 00:17:40,620
And in one sentence, what do people need to know?

128
00:17:43,060 --> 00:17:46,060
I know what I would say, but what do y'all say?

129
00:17:46,060 --> 00:17:50,260
I would say someone who helps researchers concentrate

130
00:17:50,260 --> 00:17:51,940
on the research and not care so much

131
00:17:51,940 --> 00:17:56,900
about the computation problems.

132
00:17:56,900 --> 00:17:57,860
Yeah.

133
00:17:57,860 --> 00:17:59,980
Exactly what I want someone to say.

134
00:17:59,980 --> 00:18:02,280
So the one thing to remember is we're

135
00:18:02,280 --> 00:18:03,940
going to say a lot of stuff here.

136
00:18:03,940 --> 00:18:06,460
And how many hours is the course?

137
00:18:06,460 --> 00:18:08,700
10 hours over three days?

138
00:18:08,700 --> 00:18:13,940
There's no way we can teach enough to do everything.

139
00:18:13,940 --> 00:18:16,820
Some people may know more about Linux and computing.

140
00:18:16,820 --> 00:18:18,420
Some people may know less,

141
00:18:18,420 --> 00:18:20,500
but when you have problems after this,

142
00:18:20,500 --> 00:18:22,660
if you're at Aalto University,

143
00:18:22,660 --> 00:18:25,020
then come to us, come to our team,

144
00:18:25,020 --> 00:18:27,220
come to our daily garage,

145
00:18:27,220 --> 00:18:28,940
which by the way, I should update to say

146
00:18:28,940 --> 00:18:31,000
that it's busy today.

147
00:18:31,000 --> 00:18:32,300
Maybe someone can do that.

148
00:18:34,340 --> 00:18:37,780
And we can help with all of the computing problems.

149
00:18:37,780 --> 00:18:39,480
So you can focus on what you need.

150
00:18:40,620 --> 00:18:42,580
It can be giving you some little hints.

151
00:18:42,580 --> 00:18:49,700
it can be doing some bigger project for you if you're not in a computing field at all.

152
00:18:51,860 --> 00:18:54,660
Maybe that's the most important thing to take from this whole course.

153
00:18:55,860 --> 00:19:03,380
And also throughout the course we will have contributors and friends from Finland and

154
00:19:03,380 --> 00:19:09,540
beyond and we'll talk about other collaborators we do lots of our courses with. So you might

155
00:19:09,540 --> 00:19:16,180
have noticed that we are in the Code Refinery channel here in Twitch being streamed, so we'll

156
00:19:16,180 --> 00:19:22,420
be talking about the Code Refinery project as well. If you're not in Aalto, there's plenty of

157
00:19:22,420 --> 00:19:27,380
other resources, some other supporting infrastructure for computational stuff,

158
00:19:28,020 --> 00:19:33,220
so we'll be talking about that later throughout the course. Yes.

159
00:19:33,220 --> 00:19:39,340
I guess anything interesting from the icebreakers

160
00:19:39,340 --> 00:19:40,180
before we start.

161
00:19:40,180 --> 00:19:41,100
It's about time.

162
00:19:43,980 --> 00:19:48,580
Let's see, at least the Helsinki people have sunny weather.

163
00:19:48,580 --> 00:19:51,620
That's good.

164
00:19:51,620 --> 00:19:54,900
Olu's not so lucky.

165
00:19:54,900 --> 00:19:55,740
Should we just start?

166
00:19:55,740 --> 00:20:00,500
I guess we can talk about these computing things later.

167
00:20:00,500 --> 00:20:06,340
But I do see there's a quite big diversity of how

168
00:20:06,340 --> 00:20:07,820
people do computing.

169
00:20:07,820 --> 00:20:10,220
And that really is one of the hardest things

170
00:20:10,220 --> 00:20:11,300
about teaching this course.

171
00:20:11,300 --> 00:20:14,140
We could say, here's what you can do.

172
00:20:14,140 --> 00:20:16,980
But people start in so many different ways

173
00:20:16,980 --> 00:20:18,260
from so many different places.

174
00:20:18,260 --> 00:20:19,680
And there's so many different ways

175
00:20:19,680 --> 00:20:23,380
to do things these days that it's hard to cover all of them.

176
00:20:23,380 --> 00:20:33,180
And favorite animal, that's a good variety there.

177
00:20:33,180 --> 00:20:37,420
By the way, you can put a plus one symbol next to something

178
00:20:37,420 --> 00:20:40,180
if you agree with it.

179
00:20:40,180 --> 00:20:45,780
That's a common way to upvote questions that are relevant.

180
00:20:48,460 --> 00:20:50,260
And with that being said, I guess

181
00:20:50,260 --> 00:20:55,960
it's time for the intro, which I believe is [name] talking.

182
00:20:55,960 --> 00:20:56,460
Yes.

183
00:20:59,420 --> 00:21:00,660
All right.

184
00:21:00,660 --> 00:21:03,020
Your screen shared.

185
00:21:03,020 --> 00:21:06,500
If you could share the intro page, actually.

186
00:21:06,500 --> 00:21:13,060
Or someone else who is going to share later.

187
00:21:13,060 --> 00:21:15,060
Let's see.

188
00:21:15,060 --> 00:21:19,100
I need to get this set up.

189
00:21:19,100 --> 00:21:26,940
Hey it worked so I shrink this down some so here we are this is the

190
00:21:29,500 --> 00:21:36,620
my cursor is some random place on my screen so this is the course page if you scroll down

191
00:21:36,620 --> 00:21:41,900
there's the schedule and this is the way you can figure out where we are and we're starting with

192
00:21:41,900 --> 00:21:52,780
the intro. So, welcome to Introduction to Scientific Computing and HPC. Very briefly,

193
00:21:52,780 --> 00:21:58,460
what is this course about? Well, it's structured over three days and we kind of gradually build

194
00:21:58,460 --> 00:22:06,780
on the skills, on the basic skills that are needed for basically scaling up your computations. So,

195
00:22:06,780 --> 00:22:10,620
in Finland, and also for those of you who are not in Finland, most likely you

196
00:22:10,620 --> 00:22:15,580
have access to an high-performance computing cluster, which basically means lots and lots

197
00:22:15,580 --> 00:22:25,580
of servers connected by a very fast network so that they can run lots of computations.

198
00:22:25,580 --> 00:22:31,020
And it might well be that you don't need thousands of servers connected in parallel,

199
00:22:31,020 --> 00:22:36,620
but what is useful is that you can just request one for yourself, do your work in a secure way,

200
00:22:36,620 --> 00:22:41,500
and then happily, you know, continue with publishing paper and things like that.

201
00:22:41,500 --> 00:22:47,860
So who is attending this workshop, this course? Well, there's multiple people

202
00:22:47,860 --> 00:22:53,020
from multiple universities. We are very happy that today with us, beyond Aalto

203
00:22:53,020 --> 00:22:58,020
University, there's also Helsinki University and Oulu University, but in general we

204
00:22:58,020 --> 00:23:03,700
span across borders. We have people from all over the Nordics, Europe and even

205
00:23:03,700 --> 00:23:11,020
beyond so the practicalities this is not your typical kind of zoom workshop or

206
00:23:11,020 --> 00:23:16,140
zoom course where we are all in the in the same zoom here we use this type of

207
00:23:16,140 --> 00:23:20,580
live stream strategy which you can understand that it's very useful because

208
00:23:20,580 --> 00:23:27,300
this is like a TV studio and we're like all watching the TV together and by

209
00:23:27,300 --> 00:23:32,500
doing this we can make sure that we can provide immediately high quality

210
00:23:32,500 --> 00:23:38,920
recordings of all the training that we have today and more broadly you will later see

211
00:23:38,920 --> 00:23:45,500
that everything is to be stored in our YouTube channel so that you can re-watch something

212
00:23:45,500 --> 00:23:50,100
that we're going to mention in these days but also sometimes we don't cover things that

213
00:23:50,100 --> 00:23:55,540
we have already covered well in the past and so there's more videos that we will refer

214
00:23:55,540 --> 00:23:56,820
to.

215
00:23:56,820 --> 00:24:04,500
The communication with the instructors happens through this type of asynchronous chat and

216
00:24:04,500 --> 00:24:09,400
you can understand already that this is much better than something like the Zoom chat which

217
00:24:09,400 --> 00:24:14,960
makes it impossible to communicate with this type of shared document that we are all editing.

218
00:24:14,960 --> 00:24:18,900
Right now there's 105 people editing it in parallel.

219
00:24:18,900 --> 00:24:24,960
You can basically ask questions and then maybe some of you could answer or one of the helpers

220
00:24:24,960 --> 00:24:30,980
can answer and so on. At the end this document basically forms a nice diary of the whole

221
00:24:30,980 --> 00:24:39,200
day which will then archive and you can later go back to it and check it. As you might have

222
00:24:39,200 --> 00:24:45,960
already tested this once you open the link that you have received in your registration

223
00:24:45,960 --> 00:24:53,800
email there's a pencil at the top, the screenshot there is showing that. By clicking on the

224
00:24:53,800 --> 00:24:58,160
pencil basically you enter the edit mode and then you're able to add the text

225
00:24:58,160 --> 00:25:04,120
where you need to add it. The share document is powerful but of course if

226
00:25:04,120 --> 00:25:08,200
there's hundreds of people editing in parallel it can be you know challenging

227
00:25:08,200 --> 00:25:12,440
even to just type so if you're if you know that you don't need to write

228
00:25:12,440 --> 00:25:18,520
anything you can switch back to the view mode by clicking that eye icon so that

229
00:25:18,520 --> 00:25:24,600
you know the load of the service is is smaller and other people can write freely

230
00:25:25,600 --> 00:25:32,600
Right. So where do we focus or where to focus because you can understand that there's different windows and

231
00:25:33,960 --> 00:25:39,660
In general focus on the on the streaming on the twitch TV window

232
00:25:40,720 --> 00:25:43,220
We provide this type of vertical

233
00:25:43,220 --> 00:25:47,700
layout so that, as you can see in the picture there,

234
00:25:47,700 --> 00:25:50,620
you can kind of keep the Twitch window

235
00:25:50,620 --> 00:25:54,540
on one side of your laptop screen, for example,

236
00:25:54,540 --> 00:25:56,940
and then you can keep, let's say,

237
00:25:56,940 --> 00:26:00,540
this notes document in another browser window

238
00:26:00,540 --> 00:26:01,820
or your terminal.

239
00:26:01,820 --> 00:26:03,140
We would use a lot the terminal

240
00:26:03,140 --> 00:26:05,700
to connect to the remote cluster.

241
00:26:05,700 --> 00:26:07,460
Of course, if you have multiple screens,

242
00:26:07,460 --> 00:26:09,060
then you don't have these issues,

243
00:26:09,060 --> 00:26:10,940
but we are thinking for those of you

244
00:26:10,940 --> 00:26:12,140
who are working with a laptop

245
00:26:12,140 --> 00:26:18,420
so that they have enough desktop space to arrange all the windows together.

246
00:26:18,420 --> 00:26:22,500
Maybe one thing that I did not mention when it comes to Twitch.tv streaming,

247
00:26:22,500 --> 00:26:27,700
it is important that you set the bandwidth to basically source,

248
00:26:27,700 --> 00:26:32,580
which means the same bandwidth of the original broadcasting stream.

249
00:26:32,580 --> 00:26:36,900
Otherwise, Twitch will do some sort of compression,

250
00:26:36,900 --> 00:26:39,460
and so things will start to get blurry.

251
00:26:39,460 --> 00:26:41,980
but if you make it so that the bandwidth

252
00:26:41,980 --> 00:26:43,700
is basically the maximum available,

253
00:26:43,700 --> 00:26:45,700
you will see the stream.

254
00:26:46,860 --> 00:26:50,940
All right, anything else that we are missing?

255
00:26:52,220 --> 00:26:54,980
Yeah, maybe on the learning styles

256
00:26:54,980 --> 00:26:56,900
that there's many learning styles.

257
00:26:56,900 --> 00:26:59,940
I think in general, we've been running this

258
00:26:59,940 --> 00:27:03,300
kind of new way of online teaching for a few years.

259
00:27:03,300 --> 00:27:06,140
We really like the fact that it can happen

260
00:27:06,140 --> 00:27:08,140
at everybody's, at anyone's pace.

261
00:27:08,140 --> 00:27:10,700
Those who want to learn live with us,

262
00:27:10,700 --> 00:27:12,300
they can watch right now.

263
00:27:12,300 --> 00:27:14,420
Some others might learn later.

264
00:27:14,420 --> 00:27:18,020
And when we chat with our previous course participants,

265
00:27:18,020 --> 00:27:21,440
some people find this also useful months after,

266
00:27:21,440 --> 00:27:23,640
so they can go back to the stream,

267
00:27:23,640 --> 00:27:28,100
watching the videos, checking the notes document.

268
00:27:28,100 --> 00:27:29,760
In general, to conclude,

269
00:27:29,760 --> 00:27:32,500
when it comes to the community and to good rules,

270
00:27:32,500 --> 00:27:35,340
let's just try to be respectful.

271
00:27:35,340 --> 00:27:37,260
At Aalto, we have our code of conduct

272
00:27:37,260 --> 00:27:43,260
any universities we have a good code of conduct. If you see some inappropriate

273
00:27:43,260 --> 00:27:49,820
behavior just let us know and we can do the best to kind of you know compensate

274
00:27:49,820 --> 00:27:57,660
for that or make sure that it doesn't happen. There's few things that could go

275
00:27:57,660 --> 00:28:03,300
wrong but usually they don't get wrong. In general if you feel that there's too

276
00:28:03,300 --> 00:28:07,700
much information coming in too short time it's totally normal especially if

277
00:28:07,700 --> 00:28:12,020
it's the first time that you work with this type of HPC systems but this is why

278
00:28:12,020 --> 00:28:16,040
it's it's it's great to have everything recorded and you can later you know

279
00:28:16,040 --> 00:28:22,280
rewatch at your own pace if the notes are too fast to follow don't worry you

280
00:28:22,280 --> 00:28:26,300
don't need to follow the notes you don't need to you know we basically will

281
00:28:26,300 --> 00:28:32,300
highlight some important notes on the on the stream and then again later you can

282
00:28:32,300 --> 00:28:36,180
always go back to the notes and have a look.

283
00:28:36,180 --> 00:28:41,220
I already mentioned this that sometimes if there's too many people editing at the same

284
00:28:41,220 --> 00:28:48,820
time the notes document might feel slow so please switch to the view mode and we won't

285
00:28:48,820 --> 00:28:54,900
have time to cover everything so some of the materials that are linked in our main page

286
00:28:54,900 --> 00:29:01,380
course page are actually videos from previous rounds of this course or there's other videos

287
00:29:01,380 --> 00:29:08,260
for example this kitchen metaphor to HPC, in general we encourage you to, you know,

288
00:29:08,260 --> 00:29:14,340
explore all the materials we have and what we will show here in these 10 hours together is kind of,

289
00:29:14,340 --> 00:29:24,660
you know, a small or a large subset of all the materials. What else? Well, we try not to deviate

290
00:29:24,660 --> 00:29:32,020
from the schedule but you know things happen and when it comes to possible technical issues

291
00:29:32,020 --> 00:29:37,140
it has happened only once that the whole internet collapsed during the streaming hopefully

292
00:29:37,860 --> 00:29:44,660
the internet will be up again but eventually if something goes wrong just wait a little bit and

293
00:29:44,660 --> 00:29:49,140
the stream might come back or then you will receive another email from me saying that

294
00:29:49,140 --> 00:29:55,620
I don't know, we could have a plan B. All right, well I guess maybe the most

295
00:29:55,620 --> 00:29:59,860
important thing is to mention that the cat, [name]'s cat, will visit the stream.

296
00:30:00,420 --> 00:30:03,780
I think it's too early now. Is the cat still sleeping, [name]?

297
00:30:04,980 --> 00:30:08,820
Yeah, it's in the room but sleeping. It's usually later in the afternoon,

298
00:30:08,820 --> 00:30:10,980
so motivation to stay to the end.

299
00:30:11,860 --> 00:30:18,580
Exactly. All right, well, final notes. Everything is recorded. Credits I think

300
00:30:18,580 --> 00:30:22,340
already wrote in the notes that for this course specifically we don't give credits

301
00:30:23,300 --> 00:30:30,020
and at the very bottom there's a link to our mailing list and for those of you who have ticked

302
00:30:30,020 --> 00:30:34,420
in the registration that you would like to hear about future courses you will be added to this

303
00:30:34,420 --> 00:30:41,300
mailing list and now it's exactly 10 past 10 so I'm happy to pass the ball back to [name]

304
00:30:41,300 --> 00:30:48,300
And [name].

305
00:30:48,300 --> 00:30:50,300
Hello.

306
00:30:50,300 --> 00:31:05,300
So, if we look through the notes, you see some people have already asked questions here. So, yeah, um, do, do keep using it.

307
00:31:05,300 --> 00:31:12,300
So now, if someone can add a link to the slides I'm about to share while I get that set up.

308
00:31:24,300 --> 00:31:28,300
I have many different computers in this room.

309
00:31:28,300 --> 00:31:36,660
All making tons of heat.

310
00:31:36,660 --> 00:31:40,340
OK, here we are.

311
00:31:40,340 --> 00:31:46,020
So we're talking about parallel computing in the kitchen.

312
00:31:46,020 --> 00:31:48,140
So this is sort of a metaphor we've

313
00:31:48,140 --> 00:31:53,580
been developing to make, oh, you need to see me.

314
00:31:53,580 --> 00:32:04,840
Yeah, this is a metaphor we've been developing, because oftentimes people will come to our

315
00:32:04,840 --> 00:32:10,660
courses and expect to start using the cluster and think, ah, well, this is a supercomputer,

316
00:32:10,660 --> 00:32:19,280
so everything must be super fast. Well, actually, it doesn't quite work that way. It's a bit

317
00:32:19,280 --> 00:32:28,000
more subtle than that. So after many years of working here, we've sort of found a way to explain

318
00:32:28,000 --> 00:32:35,840
it using a kitchen. And if you look at the video playlist that's here, you see one of us basically

319
00:32:35,840 --> 00:32:42,080
going to the kitchen and pointing to different things and explaining how this is a computer.

320
00:32:42,880 --> 00:32:46,400
But we don't have time to watch all that. Hopefully you could watch before or will

321
00:32:46,400 --> 00:32:51,160
a watch later, but let's just summarize it a little bit.

322
00:32:51,160 --> 00:32:54,320
So first off, what is a computer?

323
00:32:54,320 --> 00:32:56,160
What do all the parts do?

324
00:32:56,160 --> 00:32:57,800
This is why we're here right now,

325
00:32:57,800 --> 00:32:59,960
to explain what these are.

326
00:32:59,960 --> 00:33:10,200
So on the left side is a blade server from a server computer.

327
00:33:10,200 --> 00:33:13,000
This is probably part of the old Triton.

328
00:33:13,000 --> 00:33:17,720
And on the left side is a desktop computer

329
00:33:17,720 --> 00:33:20,440
that has what looks like four GPUs in there.

330
00:33:20,440 --> 00:33:23,080
So how do these compare?

331
00:33:23,080 --> 00:33:27,280
They're actually more similar than you think.

332
00:33:27,280 --> 00:33:30,240
So in this metaphor, what are the different parts

333
00:33:30,240 --> 00:33:32,800
of a computer?

334
00:33:32,800 --> 00:33:39,000
So first off, there's the, well, in the metaphor,

335
00:33:39,000 --> 00:33:42,960
I take the stoves to be the different computer cores.

336
00:33:42,960 --> 00:33:45,960
So the stove is where you actually do the computing

337
00:33:45,960 --> 00:33:47,520
and you cook stuff.

338
00:33:47,520 --> 00:33:50,720
The processor has multiple cores inside of it.

339
00:33:50,720 --> 00:33:54,600
So these days, four is a pretty typical number

340
00:33:54,600 --> 00:33:58,040
for processors for cores in a processor

341
00:33:58,040 --> 00:34:01,640
of a general purpose computer.

342
00:34:01,640 --> 00:34:04,920
The people doing the cooking are the processes.

343
00:34:04,920 --> 00:34:06,960
So basically, you need some code that's

344
00:34:06,960 --> 00:34:11,920
running to actually use the processors and do things.

345
00:34:11,920 --> 00:34:15,920
The memory is the counter space, so basically where

346
00:34:15,920 --> 00:34:20,200
you can leave all the stuff lying around

347
00:34:20,200 --> 00:34:22,840
and things that happen.

348
00:34:22,840 --> 00:34:25,960
The food you're cooking is the data.

349
00:34:25,960 --> 00:34:28,200
And you have to do things like move the data

350
00:34:28,200 --> 00:34:30,400
from the refrigerator first to the counter,

351
00:34:30,400 --> 00:34:35,440
and then prepare it, and then copy it into the pot

352
00:34:35,440 --> 00:34:39,520
on the stove to do the actual cooking.

353
00:34:39,520 --> 00:34:43,360
recipes, or programs, and so on.

354
00:34:43,360 --> 00:34:45,240
So this is the main point here.

355
00:34:45,240 --> 00:34:50,120
So is a cluster faster than your own computer?

356
00:34:50,120 --> 00:34:52,840
So here I have, on the left side,

357
00:34:52,840 --> 00:34:58,320
a about 1.8 kilowatt induction countertop cooker.

358
00:34:58,320 --> 00:35:02,040
And on the right side, my stove.

359
00:35:02,040 --> 00:35:07,200
So does the stove let you cook something like pasta

360
00:35:07,200 --> 00:35:12,320
faster than this induction cooker?

361
00:35:12,320 --> 00:35:14,840
And the answer is probably not.

362
00:35:14,840 --> 00:35:19,880
Their power output is really quite comparable.

363
00:35:19,880 --> 00:35:25,460
So it might be a little bit faster, but really not much.

364
00:35:25,460 --> 00:35:26,800
So why do people use the stove?

365
00:35:26,800 --> 00:35:28,160
Can even be slower, I would say.

366
00:35:28,160 --> 00:35:29,200
Yeah.

367
00:35:29,200 --> 00:35:30,200
Yeah.

368
00:35:30,200 --> 00:35:31,680
So why do people use the stove?

369
00:35:31,680 --> 00:35:35,820
So actually, recently, a few months ago,

370
00:35:35,820 --> 00:35:39,180
I had a friend that their stove broke.

371
00:35:39,180 --> 00:35:43,340
So they borrowed this induction cooker and were they happy?

372
00:35:43,340 --> 00:35:44,460
So they were not happy

373
00:35:44,460 --> 00:35:47,180
because they could only cook one thing at once.

374
00:35:47,180 --> 00:35:50,080
And that's the main thing here.

375
00:35:50,080 --> 00:35:53,940
The supercomputer lets you do a relatively normal thing

376
00:35:53,940 --> 00:35:56,640
but many things at the same time.

377
00:35:58,300 --> 00:36:03,300
So imagine a factory kitchen that has

378
00:36:05,820 --> 00:36:09,300
you know, hundreds or like 10,000 different stove

379
00:36:09,300 --> 00:36:10,760
or burners in it,

380
00:36:11,900 --> 00:36:14,060
then you can start cooking a lot of stuff.

381
00:36:15,380 --> 00:36:18,340
So what else?

382
00:36:19,380 --> 00:36:21,760
So it's really important when you're doing your cooking

383
00:36:21,760 --> 00:36:24,120
to understand the memory hierarchy.

384
00:36:25,540 --> 00:36:27,900
So if the data are ingredients,

385
00:36:27,900 --> 00:36:31,140
there's different tiers of storage places you can put that.

386
00:36:31,140 --> 00:36:34,340
For example, stuff can start in the fridge.

387
00:36:34,340 --> 00:36:35,620
And if when you're cooking,

388
00:36:35,620 --> 00:36:41,940
have to go to the fridge to take every single thing you work on, that's pretty slow. But if

389
00:36:41,940 --> 00:36:47,300
you take it out of the fridge and put it on your counter close to the stove, then you can do your

390
00:36:47,300 --> 00:36:59,060
preparations and stuff a lot faster. And managing this sort of data flow is one of the big things

391
00:36:59,060 --> 00:37:03,620
on the cluster. Also on your own computer, but it's sort of too small to really notice.

392
00:37:05,620 --> 00:37:16,620
It's also very often that on your own computer you do have a comparatively fast hard disk which a lot of the compute nodes in a cluster just don't have.

393
00:37:16,620 --> 00:37:29,620
So there is no local disk that it can quickly access and that essentially means that you need to go to something slower on Tendency or keep it in memory.

394
00:37:29,620 --> 00:37:35,220
there are some machines that have local disks but even there you if you want to use it you need to

395
00:37:35,220 --> 00:37:45,060
first move this move your data over from the fridge to the local disk kind of yeah

396
00:37:47,220 --> 00:37:53,220
let's see is there anything else to talk about maybe i won't go over this um you can read it

397
00:37:53,220 --> 00:38:01,860
yourself. But the main point is that it's not that much slower to take something from your fridge

398
00:38:01,860 --> 00:38:08,980
as it is from the countertop. But on a computer, the processor cache and main memory is many orders

399
00:38:08,980 --> 00:38:16,900
of magnitude slower. The difference there is orders of magnitude. So you really have to start

400
00:38:16,900 --> 00:38:22,580
worrying about this. Imagine if every time you needed to get something out of the fridge, it took

401
00:38:22,580 --> 00:38:26,860
took you several hours to go grab it.

402
00:38:26,860 --> 00:38:29,540
That would really change the way you do the cooking,

403
00:38:29,540 --> 00:38:33,260
and you need to do much more planning there.

404
00:38:33,260 --> 00:38:36,060
This is one of my favorite pictures.

405
00:38:36,060 --> 00:38:40,660
So what happens when you don't have enough CPU or memory?

406
00:38:40,660 --> 00:38:42,980
If you don't have enough processor,

407
00:38:42,980 --> 00:38:45,100
then stuff is just slower.

408
00:38:45,100 --> 00:38:46,660
You cook it a little bit slower.

409
00:38:46,660 --> 00:38:50,380
But once you don't have enough memory, you can't do anything,

410
00:38:50,380 --> 00:38:52,180
and stuff becomes really slow.

411
00:38:52,180 --> 00:38:54,820
And that's why when you get a better kitchen,

412
00:38:54,820 --> 00:38:57,380
it's not really more burners you get.

413
00:38:57,380 --> 00:38:59,220
It's more counter space.

414
00:38:59,220 --> 00:39:02,900
And this is something I wish more people would realize,

415
00:39:02,900 --> 00:39:05,020
not mentioning anyone or anything.

416
00:39:05,020 --> 00:39:09,820
But yes, so I think let's stop here.

417
00:39:09,820 --> 00:39:15,820
Maybe we discuss a little bit before we go to the next part.

418
00:39:22,180 --> 00:39:28,180
There. So any questions or comments?

419
00:39:28,180 --> 00:39:34,180
Nothing in the slides yet.

420
00:39:34,180 --> 00:39:38,180
Or yeah, in the documents yet.

421
00:39:38,180 --> 00:39:42,180
One comment that I give is that

422
00:39:42,180 --> 00:39:46,180
you might really experience

423
00:39:46,180 --> 00:39:50,180
the situation that something runs in a certain time on your local

424
00:39:50,180 --> 00:40:00,740
local machine, and it's actually running slower on the cluster, on a single CPU, if it's single

425
00:40:00,740 --> 00:40:11,140
CPU. So, most desktop machines are actually pretty fast nowadays, if they are not purely

426
00:40:11,140 --> 00:40:23,220
office machines. That's a good point, yes. It's just something I want to mention, to lower

427
00:40:23,220 --> 00:40:33,860
expectations as to what the cluster can do again. You can do more things at the same time,

428
00:40:33,860 --> 00:40:42,580
you can run the same computation a lot of times at the same time compared to your own desktop.

429
00:40:43,300 --> 00:40:51,300
But the computation itself will not be faster. Yeah and that's something I think if you go

430
00:40:51,300 --> 00:40:55,940
deeper into the slides you eventually get this and at least I cover it in the videos.

431
00:40:56,820 --> 00:41:02,660
So when you start to use a cluster you're not a cook anymore. You're not someone that's making

432
00:41:02,660 --> 00:41:09,540
one dish in one kitchen. Instead, you're becoming the manager of all the chefs.

433
00:41:09,540 --> 00:41:16,100
You have to take your problem, divide it into something that 10 or 100 or 1,000 people can do

434
00:41:16,100 --> 00:41:21,620
at the same time. You make the script to divide up all the data or all the problems so that all

435
00:41:21,620 --> 00:41:27,140
these different cooks are working separately and then recombine things together. And that's why

436
00:41:27,140 --> 00:41:31,220
why the cluster seems so difficult and interesting.

437
00:41:31,220 --> 00:41:33,420
And if you don't need to divide stuff up

438
00:41:33,420 --> 00:41:36,540
among lots of people to do it more quickly,

439
00:41:36,540 --> 00:41:38,660
then a lot of what we're talking about

440
00:41:38,660 --> 00:41:41,540
isn't that important overall.

441
00:41:41,540 --> 00:41:45,900
It just sort of, you know, it's OK.

442
00:41:45,900 --> 00:41:50,860
But when you do, the cluster saves a lot of time.

443
00:41:50,860 --> 00:41:52,700
And one more comment I want to give,

444
00:41:52,700 --> 00:41:55,580
because that's also mentioned now in the notes here.

445
00:41:55,580 --> 00:42:04,100
But it commonly takes quite a bit of effort to go or to make

446
00:42:04,100 --> 00:42:09,620
your code actually use multiple CPUs if the libraries you're

447
00:42:09,620 --> 00:42:14,100
using do not, under the hood, already do that.

448
00:42:14,100 --> 00:42:17,620
So it's also often a question of,

449
00:42:17,620 --> 00:42:22,060
is it really worth it spending the time to make something

450
00:42:22,060 --> 00:42:29,580
work in parallel when you could potentially just run it

451
00:42:29,580 --> 00:42:33,100
multiple times for smaller problems.

452
00:42:33,100 --> 00:42:39,580
So how you divide things can be important as

453
00:42:39,580 --> 00:42:42,980
to getting quick and useful results

454
00:42:42,980 --> 00:42:47,980
and how much time to invest into certain parts of the code.

455
00:42:47,980 --> 00:42:50,540
And on a general principle, if you

456
00:42:50,540 --> 00:42:58,460
can divide your problem into smaller parts it's way preferable to trying to actually parallelize

457
00:42:58,460 --> 00:43:05,900
in code. So rather run the same thing or the almost same thing 50 times than try to implement

458
00:43:05,900 --> 00:43:19,820
that this is now using 50 CPUs. Yeah there's a question about what's a GPU and I just really

459
00:43:19,820 --> 00:43:25,020
like this picture I got, not because I eat chickens.

460
00:43:25,020 --> 00:43:32,060
But so the CPU, the processor, can do basically,

461
00:43:32,060 --> 00:43:34,380
and you can cook anything on the stove.

462
00:43:34,380 --> 00:43:38,260
But a GPU is a very specialized cooking appliance.

463
00:43:38,260 --> 00:43:42,820
So with this appliance, you can cook one thing.

464
00:43:42,820 --> 00:43:47,100
You can do some things in parallel, in high parallel.

465
00:43:47,100 --> 00:43:48,540
And very fast.

466
00:43:48,540 --> 00:43:53,340
So this, I think, you could cook maybe 20 chickens at the same time on here.

467
00:43:53,340 --> 00:43:59,180
But how much pasta can you make with this chicken cooking device?

468
00:43:59,180 --> 00:44:02,780
And the answer is basically nothing. It's not designed for it.

469
00:44:02,780 --> 00:44:09,900
So if your problem, like the GPU lets you do something in parallel a lot and very fast,

470
00:44:10,620 --> 00:44:16,700
but only certain types of problems can be adapted to the thing that the GPU is made for.

471
00:44:16,700 --> 00:44:18,740
And if you haven't adapted the code

472
00:44:18,740 --> 00:44:21,380
and put it in the right modes and all that kind of stuff,

473
00:44:21,380 --> 00:44:27,340
the GPU will just be wasted.

474
00:44:27,340 --> 00:44:30,580
OK, well, I think we should go on.

475
00:44:30,580 --> 00:44:31,540
Yeah, it's time to go.

476
00:44:35,780 --> 00:44:40,460
And go towards connecting to a cluster.

477
00:44:40,460 --> 00:44:40,960
Yes.

478
00:44:40,960 --> 00:44:42,380
Yeah.

479
00:44:42,380 --> 00:44:51,340
So what's next is [name] and [name] will talk about how you connect. So they'll talk now

480
00:44:51,340 --> 00:44:55,820
for a little bit. They'll give demos. You'll have some time to try it yourself. Then there'll be a

481
00:44:55,820 --> 00:45:01,420
break for another presentation and a lunch break. If you can't get connected right during this time,

482
00:45:01,420 --> 00:45:07,340
you have a few hours before we get to the next demos. And if in the end you don't have a

483
00:45:07,340 --> 00:45:09,140
have a cluster or can't do it, it's OK.

484
00:45:09,140 --> 00:45:12,180
You can do the rest of the stuff as demos.

485
00:45:12,180 --> 00:45:20,180
So now I switch to the screen of whoever is sharing.

486
00:45:20,180 --> 00:45:21,540
And I'll see you later.

487
00:45:21,540 --> 00:45:23,660
Bye.

488
00:45:23,660 --> 00:45:27,780
OK, so now about connecting to a cluster.

489
00:45:27,780 --> 00:45:30,820
Essentially, there are many, many different ways

490
00:45:30,820 --> 00:45:34,260
how you connect, how you can connect.

491
00:45:34,260 --> 00:45:40,580
and it also depends a bit on what cluster you're trying to connect to, what things are being

492
00:45:40,580 --> 00:45:48,420
offered. We are mainly focusing here on the options that we give at Aalto, so with Triton,

493
00:45:48,420 --> 00:45:57,780
but most of them are also applicable for other HPC systems. The traditional way to connect

494
00:45:57,780 --> 00:46:06,660
to a cluster is essentially SSH. You have a command line tool, be that Windows command

495
00:46:06,660 --> 00:46:15,340
line, Windows PowerShell, the WSL, Windows Subsystem for Linux on a Windows machine or

496
00:46:15,340 --> 00:46:25,540
on any terminal on a Linux or Mac machine, and using the SSH command, which is just secure

497
00:46:25,540 --> 00:46:29,540
a shell which lets you connect to a cluster.

498
00:46:30,220 --> 00:46:32,980
Maybe we can just show that quickly.

499
00:46:32,980 --> 00:46:34,420
Yep.

500
00:46:37,780 --> 00:46:42,540
I've opened a Windows command prompt.

501
00:46:42,540 --> 00:46:44,780
Let me see, you should be able to see it.

502
00:46:44,780 --> 00:46:49,580
So it's SSH and there will be.

503
00:46:49,580 --> 00:46:56,580
Your username?

504
00:46:56,580 --> 00:47:02,260
triton.aalto.fi, in the case of Triton.

505
00:47:02,260 --> 00:47:08,220
In the case of Triton or in the case of Aalto, you need to be connected to the virtual private

506
00:47:08,220 --> 00:47:17,060
network or have SSH keys set up, but for this demo, [name], it's connected to the VPN?

507
00:47:17,060 --> 00:47:18,540
Yep.

508
00:47:18,540 --> 00:47:21,160
And then, where am I here now?

509
00:47:21,160 --> 00:47:22,160
It says Login4.

510
00:47:22,160 --> 00:47:25,720
Where is this on the cluster?

511
00:47:25,720 --> 00:47:33,040
So essentially, what you get to when you connect to a cluster is not one of the compute machines.

512
00:47:33,040 --> 00:47:38,920
It's normally a login node, which is kind of a control node where you submit jobs, where

513
00:47:38,920 --> 00:47:44,580
you send jobs to the cluster, which will be discussed about later.

514
00:47:44,580 --> 00:47:50,580
important thing to know about this is that this logger node is not a place

515
00:47:50,580 --> 00:47:57,500
where you should actually run computations because on most systems

516
00:47:57,500 --> 00:48:04,180
your resources that you can use on the logger node are restricted and if they

517
00:48:04,180 --> 00:48:09,100
are in use you might really get problems actually connecting again to the cluster

518
00:48:09,100 --> 00:48:17,180
because if the let's say 10 gigabytes of memory or so that you are allocated and

519
00:48:17,180 --> 00:48:24,340
the two CPUs are in full use by some Python computation process even your

520
00:48:24,340 --> 00:48:29,500
terminals might start to become really sluggish or not react at all

521
00:48:29,500 --> 00:48:34,180
because you don't have more resources on this machine because it's a shared

522
00:48:34,180 --> 00:48:41,540
resource and everyone should be should be able to work on there without the risk of someone saying

523
00:48:41,540 --> 00:48:48,500
okay I'm just running a computation here and slowing it down for everyone. So this is just

524
00:48:48,500 --> 00:48:57,700
the place where you connect to and where you start then distributing the work and we can also

525
00:48:57,700 --> 00:49:08,980
maybe quickly show this via OnDemand. OnDemand is a service that also

526
00:49:10,100 --> 00:49:17,220
many HPC systems nowadays provide and it's essentially a web interface to the cluster.

527
00:49:19,460 --> 00:49:22,020
On Triton, it's ondemand.triton.aalto.fi.

528
00:49:22,020 --> 00:49:29,260
So then, when I open this.

529
00:49:29,260 --> 00:49:37,300
And commonly, you can get a shell access there, you can get a desktop access.

530
00:49:37,300 --> 00:49:39,580
And there's one big difference here.

531
00:49:39,580 --> 00:49:48,100
If you want the shell, if you get shell access on Triton, this is, again, just a shell, so

532
00:49:48,100 --> 00:49:55,280
a command line for the login node.

533
00:49:55,280 --> 00:49:59,560
Essentially, exactly the same as what we

534
00:49:59,560 --> 00:50:02,900
had with the terminal connection earlier.

535
00:50:02,900 --> 00:50:08,440
But if you would request a desktop session,

536
00:50:08,440 --> 00:50:10,780
that's commonly a job that is actually

537
00:50:10,780 --> 00:50:16,980
running on one of the compute nodes.

538
00:50:16,980 --> 00:50:24,580
So that's, if you request a desktop or interactive graphical session, that is normally

539
00:50:25,780 --> 00:50:33,540
some type of job on the node where you can also then run computations and similar things in a

540
00:50:34,260 --> 00:50:39,540
user interface way. Which is why you need to define the resources that you want there.

541
00:50:40,500 --> 00:50:46,100
And then you maybe need to wait a little while. Yeah. Another important note here is that

542
00:50:46,980 --> 00:50:52,980
very often these interactive resources are rather limited.

543
00:50:52,980 --> 00:50:54,980
And the reason for that is that

544
00:50:54,980 --> 00:51:00,980
interactive resources on tendency are kind of inefficient

545
00:51:00,980 --> 00:51:02,980
in the sense that

546
00:51:02,980 --> 00:51:07,980
you are very often sitting in front of this and thinking.

547
00:51:07,980 --> 00:51:11,980
And that means the whole time you're thinking about something,

548
00:51:11,980 --> 00:51:15,980
the computational power of whatever you requested

549
00:51:15,980 --> 00:51:19,980
is idling on tendency.

550
00:51:19,980 --> 00:51:23,980
If it's currently running something, then that's fine, but very often

551
00:51:23,980 --> 00:51:27,980
it's just idling. For heavy

552
00:51:27,980 --> 00:51:31,980
computation jobs, you normally need to go through

553
00:51:31,980 --> 00:51:35,980
the queue system and submit jobs that are explicitly

554
00:51:35,980 --> 00:51:39,980
just running one thing. It's also this UI and the

555
00:51:39,980 --> 00:51:43,740
whole user interface thing, of course, takes resources.

556
00:51:43,740 --> 00:51:48,580
So you are essentially spending some resources

557
00:51:48,580 --> 00:51:50,220
just to have this UI.

558
00:51:50,220 --> 00:51:53,380
And if you want to have an as efficient job as possible,

559
00:51:53,380 --> 00:51:57,540
getting rid of that overhead is definitely beneficial.

560
00:51:57,540 --> 00:52:02,100
So it's actually not good for what the cluster's made for,

561
00:52:02,100 --> 00:52:04,260
namely running big computations.

562
00:52:04,260 --> 00:52:06,260
But if you have results on the cluster

563
00:52:06,260 --> 00:52:08,380
that you want to just quickly check,

564
00:52:08,380 --> 00:52:13,020
you use it as one way to have a graphical user interface

565
00:52:13,020 --> 00:52:17,020
to look at the figures or something that would be produced.

566
00:52:18,140 --> 00:52:20,180
And that's well connected to the cluster

567
00:52:20,180 --> 00:52:23,300
in contrast to trying to mount this remotely

568
00:52:23,300 --> 00:52:26,100
where network connections might be slower and so on.

569
00:52:26,100 --> 00:52:29,860
Yes, and it's available also from outside.

570
00:52:29,860 --> 00:52:33,540
So you don't have to be on the VPN or close by.

571
00:52:33,540 --> 00:52:37,260
Yeah, there's one last way

572
00:52:37,260 --> 00:52:39,620
that we want to quickly show

573
00:52:39,620 --> 00:52:42,020
because it has become quite popular recently

574
00:52:42,020 --> 00:52:44,260
and that's VSCode.

575
00:52:45,380 --> 00:52:50,380
VSCode has a couple of features,

576
00:52:52,260 --> 00:52:57,260
mainly one extension that's called the Remote SSH plugin.

577
00:52:58,380 --> 00:53:01,380
So I look for remote SSH like this.

578
00:53:01,380 --> 00:53:13,380
SSH like this, there it is, and I can install it.

579
00:53:13,380 --> 00:53:20,860
With that plugin, you can essentially do an SSH connection almost the same way as you

580
00:53:20,860 --> 00:53:26,300
would do it with the shell.

581
00:53:26,300 --> 00:53:31,020
When you have installed this, you will see this remote explorer icon.

582
00:53:31,020 --> 00:53:36,960
You can then either add or [name] already has it added.

583
00:53:36,960 --> 00:53:42,540
So you can add it by clicking the plus on this H to tell new remote or if you already

584
00:53:42,540 --> 00:53:49,560
have one, you can go on that and essentially indicate location.

585
00:53:49,560 --> 00:54:00,300
If you wanted to add, you would add this, like the same command at Triton.

586
00:54:00,300 --> 00:54:13,460
And why we want to show the VS Code in particular is there are a few issues with VS Code.

587
00:54:13,460 --> 00:54:23,260
It can be a great tool, but if you connect to a cluster with VS Code, on general principle,

588
00:54:23,260 --> 00:54:30,980
never open a folder or never connect opening a folder that has lots and lots of files in

589
00:54:30,980 --> 00:54:32,500
there.

590
00:54:32,500 --> 00:54:39,500
Open things that actually have code and not data.

591
00:54:39,500 --> 00:54:43,820
And also don't open, for example, your home folder.

592
00:54:43,820 --> 00:54:52,760
And the reason for this is that if you would do that, VS Code tries to index files that

593
00:54:52,760 --> 00:55:00,100
are in the folder, and it does this for all files in the folder, which means that it will

594
00:55:00,100 --> 00:55:05,000
constantly ask, has this file changed, has this file changed?

595
00:55:05,000 --> 00:55:11,820
And if you do this for a folder that has a lot of files in there, you are essentially

596
00:55:11,820 --> 00:55:17,420
starting to run a small denial-of-service attack on the file system servers that are

597
00:55:17,420 --> 00:55:19,260
around on the cluster.

598
00:55:19,260 --> 00:55:21,620
Please don't do that.

599
00:55:21,620 --> 00:55:31,340
So that's why we want to mention here that, yeah, use the subfolder that actually has your

600
00:55:31,340 --> 00:55:34,820
code to connect to it and use it like that.

601
00:55:34,820 --> 00:55:38,100
One more thing with VS Code,

602
00:55:38,100 --> 00:55:44,900
in general, try not to run VS Code Jupyter Notebooks.

603
00:55:44,900 --> 00:55:48,540
Because VS Code, essentially,

604
00:55:48,540 --> 00:55:50,920
when you use this remote SSH plugin,

605
00:55:50,920 --> 00:55:54,260
it starts a VS Code server on the other side.

606
00:55:54,260 --> 00:55:59,900
If you have Jupyter Notebooks open on the other side,

607
00:55:59,900 --> 00:56:04,900
that is not being closed, that is not being shut down when you disconnect.

608
00:56:04,900 --> 00:56:07,400
The server will keep running.

609
00:56:07,400 --> 00:56:13,900
And that means if you have computations done in that Jupyter Notebook,

610
00:56:13,900 --> 00:56:18,900
you still have this running and you're running this on the logger node.

611
00:56:18,900 --> 00:56:27,900
So, when you use VS Code, try not to use Jupyter Notebooks interactively.

612
00:56:27,900 --> 00:56:36,460
So, is it that I shouldn't even open this ipynb file?

613
00:56:36,460 --> 00:56:42,740
That I think depends a little bit on the plugins that you actually have installed.

614
00:56:42,740 --> 00:56:53,220
But I personally wouldn't edit Jupyter Notebooks on VS Code with the remote SSH plugin.

615
00:56:53,220 --> 00:57:01,260
You can potentially run VS Code on a cluster node and do things like that, but I wouldn't

616
00:57:01,260 --> 00:57:07,100
do it on the remote SSH.

617
00:57:07,100 --> 00:57:12,340
But with that, I think we will stop here to leave enough time for questions, for individual

618
00:57:12,340 --> 00:57:20,020
questions if things don't work during connection, so that we can get as many of you as possible

619
00:57:20,020 --> 00:57:33,060
it on the cluster and connect it to the cluster. People from Aalto or Helsinki should all have

620
00:57:33,060 --> 00:57:42,500
a link to Zoom where we can help with connecting to their respective clusters. I think we will

621
00:57:42,500 --> 00:57:48,460
to pause the stream here now till 11 finish time.

622
00:57:48,460 --> 00:57:50,780
Or is it no?

623
00:57:50,780 --> 00:57:52,220
Wait.

624
00:57:52,220 --> 00:57:54,460
Yeah, essentially till 11 Finnish time

625
00:57:54,460 --> 00:57:58,860
and allow people to try to get connected to the cluster.

626
00:58:06,300 --> 00:58:12,340
OK, so yeah, we're going to the break time.

627
00:58:12,500 --> 00:58:18,620
So yeah, so this is the first exercise time.

628
00:58:18,620 --> 00:58:20,940
So we will mute the stream.

629
00:58:20,940 --> 00:58:27,700
We will go to the notes here.

630
00:58:27,700 --> 00:58:30,420
You see there's lots of questions

631
00:58:30,420 --> 00:58:33,980
that have been asked about this.

632
00:58:33,980 --> 00:58:38,100
We'll put in the bottom a little thing that says what

633
00:58:38,100 --> 00:58:41,020
you should be doing right now.

634
00:58:41,020 --> 00:58:46,780
So yes, there are lots of things that can go wrong here. Don't worry. Don't be afraid.

635
00:58:48,540 --> 00:58:54,780
You can keep asking questions here. If you're in Finland, we have a Zoom that you can join,

636
00:58:54,780 --> 00:59:01,260
and we have breakout rooms for some universities there, and you can ask for live help. And

637
00:59:01,260 --> 00:59:07,660
remember, if you don't have time before the next presentation starts, there's still two hours until

638
00:59:07,660 --> 00:59:14,220
we actually start doing stuff on the cluster. So you can keep asking questions in the notes

639
00:59:14,220 --> 00:59:19,180
during the time. We'll try to figure out what can happen. If you're at Aalto you can send us

640
00:59:19,180 --> 00:59:26,140
emails to the addresses and we can look because you shouldn't be adding your usernames to this

641
00:59:26,140 --> 00:59:40,220
document. Yeah, and good luck! Now you have time to read stuff. Okay, talk to you later then. Bye!

642
00:59:56,140 --> 00:59:58,200
you

643
01:00:26,140 --> 01:00:28,200
you

644
01:00:56,140 --> 01:00:58,200
you

645
01:01:26,140 --> 01:01:28,200
you

646
01:01:56,140 --> 01:01:58,200
you

647
01:02:26,140 --> 01:02:28,200
you

648
01:02:56,140 --> 01:02:58,200
you

649
01:03:26,140 --> 01:03:28,200
you

650
01:03:56,140 --> 01:03:58,200
you

651
01:04:26,140 --> 01:04:28,200
you

652
01:04:56,140 --> 01:04:58,200
you

653
01:05:26,140 --> 01:05:28,200
you

654
01:05:56,140 --> 01:05:58,200
you

655
01:06:26,140 --> 01:06:28,200
you

656
01:06:56,140 --> 01:06:58,200
you

657
01:07:26,140 --> 01:07:28,200
you

658
01:07:56,140 --> 01:07:58,200
you

659
01:08:26,140 --> 01:08:28,200
you

660
01:08:56,140 --> 01:08:58,200
you

661
01:09:26,140 --> 01:09:36,740
Let's see, hello, hopefully you can hear me out there.

662
01:09:36,740 --> 01:09:40,340
So now we're going to a break pretty quickly.

663
01:09:40,340 --> 01:09:43,140
So if you look at the notes here,

664
01:09:43,140 --> 01:09:46,740
you see there's many questions happening.

665
01:09:46,740 --> 01:09:49,460
So that just goes to show how hard it

666
01:09:49,460 --> 01:09:52,260
can be to even get connected to the cluster.

667
01:09:52,260 --> 01:09:54,940
So I wouldn't say it's necessarily hard,

668
01:09:54,940 --> 01:09:59,420
just there's so many different things for everyone. Where you are, what university you are,

669
01:09:59,420 --> 01:10:04,460
how you're trying to connect, how your computer is set up, is your account new or old, and so on.

670
01:10:05,100 --> 01:10:13,180
So, like we said before, if you can't do it now, it's okay. You're welcome to keep watching the

671
01:10:13,180 --> 01:10:20,620
course. Next, we have a demo of the cluster after a short break. A demo of a cluster from CSC,

672
01:10:20,620 --> 01:10:34,820
see. So you still have more time to work on this. What else? Yeah. And you notice here

673
01:10:34,820 --> 01:10:44,520
in the notes, there's this little poll here. So you can add an O to done if you finished.

674
01:10:44,520 --> 01:10:49,540
If you couldn't get connected, then you could put an O under trying connected and an O under

675
01:10:49,540 --> 01:10:55,700
not trying if you weren't even trying, and that way we can sort of see what the status is.

676
01:10:58,980 --> 01:11:04,820
Yeah, overall, basically, don't worry. If this seems hard, it's one of the hardest parts,

677
01:11:05,620 --> 01:11:13,460
unfortunately, and just keep coming back. Don't worry. And with that, see you in 10 minutes

678
01:11:13,460 --> 01:11:16,580
for the next session, bye.

679
01:11:43,460 --> 01:11:45,520
you

680
01:12:13,460 --> 01:12:15,520
you

681
01:12:43,460 --> 01:12:45,520
you

682
01:13:13,460 --> 01:13:15,520
you

683
01:13:43,460 --> 01:13:45,520
you

684
01:14:13,460 --> 01:14:15,520
you

685
01:14:43,460 --> 01:14:45,520
you

686
01:15:13,460 --> 01:15:15,520
you

687
01:15:43,460 --> 01:15:45,520
you

688
01:16:13,460 --> 01:16:15,520
you

689
01:16:43,460 --> 01:16:45,520
you

690
01:17:13,460 --> 01:17:15,520
you

691
01:17:43,460 --> 01:17:45,520
you

692
01:18:13,460 --> 01:18:15,520
you

693
01:18:43,460 --> 01:18:45,520
you

694
01:19:13,460 --> 01:19:15,520
you

695
01:19:43,460 --> 01:19:45,520
you

696
01:20:13,460 --> 01:20:15,520
you

697
01:20:43,460 --> 01:20:45,520
you

698
01:21:13,460 --> 01:21:15,520
you

699
01:21:43,460 --> 01:22:05,060
Hello, and we are back.

700
01:22:05,060 --> 01:22:11,540
So now that hopefully most of you have managed to connect to the cluster of your choice or

701
01:22:11,540 --> 01:22:14,860
like some of our connected to Triton,

702
01:22:14,860 --> 01:22:19,860
some of our friends outside of our university

703
01:22:20,340 --> 01:22:22,300
have connected to their own clusters.

704
01:22:22,300 --> 01:22:27,300
So now we are going to have a bit of a different tangent.

705
01:22:27,480 --> 01:22:31,740
So we are going to be now having a guest lecture,

706
01:22:31,740 --> 01:22:34,880
our guest talk from our friends at CSC.

707
01:22:34,880 --> 01:22:37,480
So in this talk, we'll be like,

708
01:22:39,620 --> 01:22:41,140
I won't say what's in it

709
01:22:41,140 --> 01:22:43,460
because I haven't yet seen it,

710
01:22:43,460 --> 01:22:46,420
but we will be talking about various things

711
01:22:46,420 --> 01:22:49,140
about what it comes to scale,

712
01:22:49,140 --> 01:22:52,140
because CSC is the biggest player here in Finland,

713
01:22:52,140 --> 01:22:54,020
and what will be happening.

714
01:22:54,020 --> 01:22:57,780
So there will be probably a lot of new things for you

715
01:22:57,780 --> 01:22:59,780
over here, and it's a bit different

716
01:22:59,780 --> 01:23:00,940
than the rest of the course.

717
01:23:00,940 --> 01:23:01,780
For the rest of the course,

718
01:23:01,780 --> 01:23:04,220
we'll be working more on the local scale.

719
01:23:04,220 --> 01:23:07,140
So don't worry about catching everything,

720
01:23:07,140 --> 01:23:18,340
And don't worry about trying to remember everything, every small detail, just focus on the main topics.

721
01:23:18,340 --> 01:23:26,340
And with these sending words, let me introduce our friend from CSC, [name].

722
01:23:26,340 --> 01:23:28,340
Do you want to introduce yourself?

723
01:23:28,340 --> 01:23:35,620
Yeah, yeah. So, yeah, I'm an application specialist at CSC, so that means I've been doing customer

724
01:23:35,620 --> 01:23:44,340
support for a long time. Yeah, and the idea of this talk is about to a little bit introduce how

725
01:23:44,340 --> 01:23:52,420
to use CSC's resources, and kind of the main message, if I can, if the main message of the

726
01:23:52,420 --> 01:23:57,500
kitchen talk was that you need to parallelize your computation to get

727
01:23:57,500 --> 01:24:01,620
anything out of the cluster other than the same same stuff that you get from

728
01:24:01,620 --> 01:24:10,500
your laptop. The main kind of point from this talk is that you can use CSC's

729
01:24:10,500 --> 01:24:19,220
resources if you are a student or researcher at Finnish University or

730
01:24:19,220 --> 01:24:24,220
or polytechnic or research institute like FMI or VTT.

731
01:24:24,700 --> 01:24:29,660
And you can use CSC resources for free in a way,

732
01:24:29,660 --> 01:24:31,120
because it's already been paid

733
01:24:31,120 --> 01:24:33,960
for academic research in Finland.

734
01:24:35,780 --> 01:24:39,180
In addition, you can also invite your colleagues

735
01:24:39,180 --> 01:24:44,180
even from abroad or elsewhere into your projects.

736
01:24:44,660 --> 01:24:49,180
When you have a project, then you can invite people there.

737
01:24:49,180 --> 01:24:53,860
But anyways, the main message is that you are allowed to use

738
01:24:53,860 --> 01:24:57,540
and even encouraged to use CSC's resources.

739
01:24:57,540 --> 01:24:59,380
And in some universities,

740
01:24:59,380 --> 01:25:01,440
this might even be the only option.

741
01:25:01,440 --> 01:25:04,100
Like in Aalto, you have Triton

742
01:25:04,100 --> 01:25:06,820
and you have really good support in Aalto

743
01:25:06,820 --> 01:25:08,860
for doing computational science.

744
01:25:08,860 --> 01:25:11,860
But if you don't get that local support,

745
01:25:11,860 --> 01:25:14,280
then you can always ask us.

746
01:25:14,280 --> 01:25:18,660
So we are there for you if you can't find support locally.

747
01:25:18,660 --> 01:25:24,580
course, doing everything locally is always a little bit more flexible and quicker, so you need to be

748
01:25:24,580 --> 01:25:31,060
a little bit patient with CSC services always, but they are there and definitely we should come back

749
01:25:31,060 --> 01:25:38,340
to you. And I would also add that it's not like an either-or situation. We do a lot of

750
01:25:38,340 --> 01:25:43,540
collaboration with CSC. We use CSC resources as well throughout our work and when helping our

751
01:25:43,540 --> 01:25:51,300
researchers and we use CSC trainings all the time. CSC trainings come to Aalto as well and

752
01:25:51,300 --> 01:26:00,420
we try to collaborate as much as possible because it's not like a zero-sum game of

753
01:26:01,380 --> 01:26:08,500
using resources. Everybody benefits when people get stuff done and CSC is a big player for getting

754
01:26:08,500 --> 01:26:15,700
stuff done here in Finland. Yeah, okay, thanks. So, let's go then to the slides. So, I was asked to

755
01:26:16,500 --> 01:26:25,140
keep the slides set thin, so I wrote them myself. So, this is not that official maybe, but anyways.

756
01:26:25,140 --> 01:26:31,780
So, CSC's HPC resources, and this was the main point that I already told you, you are allowed

757
01:26:31,780 --> 01:26:40,340
to use it and it's free of charge. What we have is HPC clusters, sometimes you call these

758
01:26:40,340 --> 01:26:51,140
supercomputers. Currently we have Puhti, Mahti and Lumi and Puhti and Mahti will be replaced by Roihu

759
01:26:51,140 --> 01:27:02,260
next year, maybe let's say springtime, early summer, but the machine will be basically the

760
01:27:02,260 --> 01:27:09,060
same. All these clusters are about the same when you get familiar with them, so it's a cluster

761
01:27:09,060 --> 01:27:20,340
computer. Then we have object storage services, so for data storage which is like project lifetime

762
01:27:20,340 --> 01:27:24,660
data storage, and I will talk a little bit, and also for sharing data.

763
01:27:26,420 --> 01:27:35,860
And then we have cloud platform Pouta, which I also include in our kind of HPC resources that

764
01:27:35,860 --> 01:27:43,700
you can use. And cloud stuff is for services that you want to be running all the time,

765
01:27:43,700 --> 01:27:50,260
like web service. So, if you host a web page or this kind of service that you can connect

766
01:27:50,260 --> 01:27:59,220
from internet, then cloud stuff is for that. HPC clusters are more like one-shot

767
01:27:59,780 --> 01:28:10,100
computations or a bunch of them or during the, let's say, course of your PhD or something like

768
01:28:10,100 --> 01:28:16,740
that. You run the computations there, but it's not a service. But if you want to set up a service,

769
01:28:16,740 --> 01:28:25,780
then it would be cloud. Yeah, Mahti is on service break today, so that's planned service,

770
01:28:26,340 --> 01:28:34,180
which is kind of good. Sometimes the machines are on not planned service breaks, and those are

771
01:28:34,180 --> 01:28:43,620
usually not the good ones. Yeah. So, these are like huge computers with lots of moving parts,

772
01:28:43,620 --> 01:28:48,580
and I think it's a miracle that they are up at any point of the time.

773
01:28:49,940 --> 01:28:55,780
So, on the three computers, how would you describe them shortly, if people are not

774
01:28:55,780 --> 01:29:00,660
familiar with them, like the differentiations between Puhti, Mahti and Lumia?

775
01:29:00,660 --> 01:29:06,740
Puhti and Mahti are our national resources so it's kind of easy and quick to get access to those

776
01:29:07,780 --> 01:29:16,180
and Puhti is for like all kinds of things and Mahti was originally targeted for large parallel

777
01:29:16,180 --> 01:29:26,260
jobs so lots of stoves in one calculation type of things but you can do all kinds of calculations

778
01:29:26,260 --> 01:29:34,900
in both machines, Puhti and Mahti. And Lumi is then, that's the EU machine, and Finland has a

779
01:29:34,900 --> 01:29:42,660
huge part of that, so maybe a third or something like that, I don't remember. But also the scale

780
01:29:42,660 --> 01:29:51,620
of the machines is interesting, like Puhti is already usually enough, Mahti is more, and Lumi

781
01:29:51,620 --> 01:30:00,180
is like crazy big. And usually also the complexity goes about the same way a little bit. It's not as

782
01:30:00,180 --> 01:30:05,300
steep as the size of the resources, but always when you get the bigger machine, you expect a

783
01:30:05,300 --> 01:30:11,620
little bit more, you know, complexity. And usually like the, I would say that

784
01:30:11,620 --> 01:30:17,780
like previously this talk was often highlighted as this laptop sloomy kind of a situation where

785
01:30:17,780 --> 01:30:21,860
Like, what are the stepping stones that people need to take in order to be able to use the

786
01:30:21,860 --> 01:30:28,900
biggest computers? And usually it's like, it's not that complicated. Like the complexity increases,

787
01:30:28,900 --> 01:30:34,820
but it doesn't increase. Like if you go to next stepping stone, you can usually get to the next

788
01:30:34,820 --> 01:30:39,780
one. So because like, let's say our local clusters, they're pretty similar to Puhti.

789
01:30:39,780 --> 01:30:46,180
And if you jump from a local cluster to Puhti, you can get more resources. And if you go from

790
01:30:46,180 --> 01:30:53,380
Puhti to Mahti, you can give even more. And if you go to Puhti to Lumi, you can get even more

791
01:30:53,380 --> 01:30:57,620
and different kinds of resources. So it's usually this kind of like, you don't necessarily have to

792
01:30:57,620 --> 01:31:02,980
jump straight to the most complex machine. You can take these intermediate steps throughout the

793
01:31:02,980 --> 01:31:10,180
whole ecosystem and use them to your benefit. That said, it's just the kind of small details

794
01:31:10,180 --> 01:31:17,940
that differ in these clusters. They are all clusters and in this course you go very thoroughly

795
01:31:17,940 --> 01:31:25,780
through what is a cluster and how to use it. Maybe I do a quick overview on that stuff and

796
01:31:25,780 --> 01:31:33,460
when you go during these two and a half days you go into more detail. So how the access

797
01:31:33,460 --> 01:31:41,380
to the resources is organized and this this is particular to CSC now so so how

798
01:31:41,380 --> 01:31:47,340
do you get access to resources? First you need a user account which is kind of

799
01:31:47,340 --> 01:31:54,340
you put your contact information to CSC and you get the username but this

800
01:31:54,340 --> 01:31:58,620
doesn't grant you any resources so you can't even log in to Puhti or Mahti I

801
01:31:58,620 --> 01:32:07,820
think with just an account because you need to have also a computing project which then you well

802
01:32:08,620 --> 01:32:17,020
it's organized so that the computing projects can have services attached to them so a service could

803
01:32:17,020 --> 01:32:24,540
be Mahti or Puhti or Allas or Lumi and and that belongs to kind of the computing project and if

804
01:32:24,540 --> 01:32:29,740
you are a member of the project, then you can use all the resources that the project has.

805
01:32:30,860 --> 01:32:38,700
So this is the kind of organization of how we share resources between all the users.

806
01:32:43,100 --> 01:32:50,620
Often it might be a situation like if you are a summer student or if you are a

807
01:32:50,620 --> 01:32:59,820
starting PhD student or something, you might not have the privileges or you're not yet that high

808
01:32:59,820 --> 01:33:05,260
up in the ladder that you can request a new project, but your professor or maybe a postdoc

809
01:33:05,260 --> 01:33:10,780
can do. I don't know what are the breaking points there, but usually it's like if you talk to your

810
01:33:10,780 --> 01:33:18,220
professor and ask them, hey, can you do this few clicks on the CSC side to ask for a new project

811
01:33:18,220 --> 01:33:22,460
and then add me to that project, then you usually get the resources quite quickly.

812
01:33:23,340 --> 01:33:30,220
But usually it needs to be someone in a more senior position who requests these projects,

813
01:33:30,220 --> 01:33:38,540
am I right? Yeah, that's exactly how it works. And these projects are like small projects where

814
01:33:38,540 --> 01:33:45,100
you can start. These are granted automatically if you are like a staff member or researcher or

815
01:33:45,100 --> 01:33:50,140
professor or something like that and then the professor can invite all the students from his

816
01:33:50,140 --> 01:33:56,700
group to the project or have multiple projects for different parts of the research group.

817
01:33:58,140 --> 01:34:04,780
So this is how it's organized and it becomes a little bit more clear when I show you

818
01:34:05,420 --> 01:34:13,260
my.csc.fi portal which is our portal for managing accounts, your own account information

819
01:34:13,260 --> 01:34:22,380
and also your projects. So all this I hope will become more clear when you see how it is done.

820
01:34:23,900 --> 01:34:31,900
Okay, then another thing that was already discussed is cluster architecture. So this is

821
01:34:31,900 --> 01:34:39,340
kind of important, always kind of understanding why do you have batch queue system, what is wrong

822
01:34:39,340 --> 01:34:45,820
with parallel file system? Why is it worse than my laptop's NVMe disk and stuff like that?

823
01:34:46,780 --> 01:34:54,860
So, if you look hard at this picture, and like instead of I have what 16 compute nodes here,

824
01:34:55,420 --> 01:35:02,940
imagine way more compute nodes. Yeah, way, way, way more. Yeah, and also parallel file system,

825
01:35:02,940 --> 01:35:11,020
that's actually like a storage cluster so there's multiple servers and then when you understand that

826
01:35:11,820 --> 01:35:17,820
when one of the compute nodes wants to get data from one of the storage servers it needs to ask

827
01:35:17,820 --> 01:35:25,020
from metadata server where is my data and then you see that there's only one metadata server

828
01:35:25,020 --> 01:35:32,140
active at one time because you need to kind of coordinate so that no two guys write to the

829
01:35:32,140 --> 01:35:35,820
same place at the same time or stuff like that.

830
01:35:35,820 --> 01:35:39,180
Then you understand that this might be a bottleneck.

831
01:35:39,180 --> 01:35:42,700
So if every one of these compute nodes goes

832
01:35:42,700 --> 01:35:46,700
to the metadata server at once and wants to find

833
01:35:46,700 --> 01:35:52,060
20 000 files at once, which is like the smallest Python environment you

834
01:35:52,060 --> 01:35:56,220
can make, usually it's like 60 000 files, then

835
01:35:56,220 --> 01:36:00,140
you understand why stuff like why we put our Python

836
01:36:00,140 --> 01:36:08,940
environments in containers. Yeah. There's many technical things that will come throughout this

837
01:36:08,940 --> 01:36:14,060
course, and they might be like, okay, why are these technical things like they are?

838
01:36:14,060 --> 01:36:21,820
And the reason is that there's usually at some point a system has crashed because there's a...

839
01:36:24,140 --> 01:36:29,980
Something is not performant enough, and now it's just done this way. And most of the clusters

840
01:36:29,980 --> 01:36:35,180
are organized in this sort of a way where you have like the login node where you go in and you

841
01:36:35,980 --> 01:36:43,900
deal with the queue system that we'll be using later to ask stuff to run on the computing

842
01:36:43,900 --> 01:36:50,380
cluster and then it will use data stored on the shared file system. This is basically what all of

843
01:36:50,380 --> 01:36:55,820
the computing clusters use, the format, of course, the amount of computing nodes, what are the

844
01:36:55,820 --> 01:37:00,860
computing nodes and everything differs, but this sort of structure applies.

845
01:37:00,860 --> 01:37:06,460
Yeah, basic principle is the same. And this also, when you log into supercomputer, you actually log

846
01:37:06,460 --> 01:37:11,740
into one of the login nodes. So it's a separate small computer there. Well, it's not separate,

847
01:37:11,740 --> 01:37:18,940
but it's part of the cluster. But when you want to compute something, then you want the actual

848
01:37:18,940 --> 01:37:24,780
computation to go to the compute node. And the way to get there is through batch queue system.

849
01:37:24,780 --> 01:37:31,500
And this is another story. And I think this is one of the things that we might go into more detail

850
01:37:31,500 --> 01:37:44,220
in this presentation, if you like. So kind of stuff that differs from your laptop in cluster

851
01:37:44,220 --> 01:37:54,380
is batch queue system. Software tree is also way more complex. So we usually use module system.

852
01:37:54,380 --> 01:38:00,060
So the thing is that in your laptop you have operating system and then the maintainers of the

853
01:38:00,060 --> 01:38:07,580
operating system basically put all the libraries. So when you have a program it will depend on

854
01:38:07,580 --> 01:38:12,780
library which will depend on other library and that will depend on other library etc.

855
01:38:13,900 --> 01:38:20,380
No piece of software lives in isolation basically so you always need lots of other pieces of

856
01:38:20,380 --> 01:38:26,700
software, and these pieces are usually put into software libraries, and then

857
01:38:27,740 --> 01:38:33,820
the thing is that in a regular Linux distribution or operating system,

858
01:38:36,060 --> 01:38:45,020
the list of libraries is flat, so that's the distribution basically. So the developers and

859
01:38:45,020 --> 01:38:50,460
maintainers of the distribution take versions of the libraries so that they work together.

860
01:38:52,220 --> 01:38:58,620
But then in supercomputers this usually we use this for something like six years and then we

861
01:38:58,620 --> 01:39:06,780
get a new one, five or six years, and during that time lots of software evolves because we want

862
01:39:06,780 --> 01:39:14,700
always to have the kind of the newest and best of the programs. So we need to kind of update the

863
01:39:14,700 --> 01:39:21,420
software stack also, because they will depend on different versions of the libraries. And this is

864
01:39:21,420 --> 01:39:29,420
why we have modules in supercomputers, which kind of select what part of the software tree

865
01:39:29,420 --> 01:39:31,420
you want to use.

866
01:39:31,420 --> 01:39:33,420
Yeah, so if you've ever

867
01:39:33,420 --> 01:39:35,420
shared a computer

868
01:39:35,420 --> 01:39:37,420
with your sibling or something like that

869
01:39:37,420 --> 01:39:39,420
and then you

870
01:39:39,420 --> 01:39:41,420
install something

871
01:39:41,420 --> 01:39:43,420
in your computer and then next time

872
01:39:43,420 --> 01:39:45,420
you come back, your sibling

873
01:39:45,420 --> 01:39:47,420
has installed, I don't know,

874
01:39:47,420 --> 01:39:49,420
a really annoying

875
01:39:49,420 --> 01:39:51,420
mobile game there

876
01:39:51,420 --> 01:39:53,420
or something like that that suddenly

877
01:39:53,420 --> 01:39:55,420
breaks everything you are doing and makes

878
01:39:55,420 --> 01:39:57,420
stuff annoying,

879
01:39:57,420 --> 01:39:59,580
These module systems are designed to avoid that.

880
01:39:59,660 --> 01:40:04,060
So they're designed in a way that like everybody can run their, their own

881
01:40:04,060 --> 01:40:07,820
software without like the hassle of breaking everybody else's stuff.

882
01:40:08,060 --> 01:40:11,640
Like it would be really annoying if somebody is doing their PhD studies,

883
01:40:12,060 --> 01:40:15,900
uh, using certain version or let's say console or something like some, some

884
01:40:15,900 --> 01:40:21,860
program and now like somebody else asked it to be updated and now like you don't

885
01:40:21,860 --> 01:40:23,820
have the version that you were using before.

886
01:40:23,820 --> 01:40:28,420
So, in order to make it possible for hundreds of people to have their own software in the

887
01:40:28,420 --> 01:40:35,220
same environment or in the same cluster, there's usually this kind of like different way of

888
01:40:35,220 --> 01:40:42,900
distributing software, because you need to be able to support what you said, like six

889
01:40:42,900 --> 01:40:50,140
years of maybe software throughout the lifetime, so that some people can run the old version,

890
01:40:50,140 --> 01:40:55,900
people can run a new version and they still work, and people don't get angry about losing

891
01:40:55,900 --> 01:40:59,780
a version of software that they wanted to use.

892
01:40:59,780 --> 01:41:07,340
If you are familiar how libraries and Linux and linkers and loaders work, then this is

893
01:41:07,340 --> 01:41:11,540
like, of course, it works like that.

894
01:41:11,540 --> 01:41:17,980
But usually people tend to have problems with this a little bit, but for us it's kind of

895
01:41:17,980 --> 01:41:26,620
easy to figure out what's wrong. So, this is kind of my ending topic. Don't be afraid to ask for help

896
01:41:26,620 --> 01:41:34,860
and I've been saying a long time now that I especially like the easy questions. So,

897
01:41:34,860 --> 01:41:41,020
the questions that are easy for me but hard for you. That's the best bang for the buck.

898
01:41:41,020 --> 01:41:48,020
It takes very little time from me to answer, but it saves a lot of your time.

899
01:41:48,020 --> 01:41:55,020
So that's why you should always ask help immediately if you get stuck.

900
01:41:55,020 --> 01:41:59,020
That could be even the main point of this talk.

901
01:41:59,020 --> 01:42:01,020
Yeah, that's a good point.

902
01:42:01,020 --> 01:42:09,020
Don't waste your time too much when there's a person that you can ask immediately how to do it.

903
01:42:09,020 --> 01:42:13,020
And especially, like, I would say that in this cluster environments,

904
01:42:13,020 --> 01:42:18,020
because there's hundreds of users, like, if you have a problem,

905
01:42:18,020 --> 01:42:21,020
there's a chance that somebody else has encountered the same problem.

906
01:42:21,020 --> 01:42:25,020
So it's also like collects the best practices and collects the information

907
01:42:25,020 --> 01:42:30,020
and who disseminates that information is usually the people who maintain the cluster,

908
01:42:30,020 --> 01:42:33,020
who hear the problems from the users.

909
01:42:33,020 --> 01:42:37,020
So if you have a problem and you ask the maintainers of the system,

910
01:42:37,020 --> 01:42:42,900
them why I encountered that problem, they might have figured that out for some other

911
01:42:42,900 --> 01:42:49,060
user already and now they have an existing solution or they might not be aware of it

912
01:42:49,060 --> 01:42:53,080
and then they can help everybody else who might encounter the problem in the future.

913
01:42:53,080 --> 01:43:00,740
So it's a really good practice to, if you have problems, ask for help.

914
01:43:00,740 --> 01:43:06,400
We already discussed a little bit about parallel file system, so it's a little bit different.

915
01:43:06,400 --> 01:43:10,120
So it's good in some things and bad in some things.

916
01:43:10,120 --> 01:43:16,800
Then data management is something that has come up in the last, let's say, 10 or 20 years

917
01:43:16,800 --> 01:43:19,040
to the HPC stuff.

918
01:43:19,040 --> 01:43:23,840
So you have lots of data nowadays.

919
01:43:23,840 --> 01:43:32,760
And as already, I think, discussed, you can, at the same time, have easily accessible storage,

920
01:43:32,760 --> 01:43:38,120
huge storage, cheap storage, and fast storage in same package.

921
01:43:38,120 --> 01:43:40,280
Usually you need to do something.

922
01:43:40,280 --> 01:43:42,280
And this is data management.

923
01:43:42,280 --> 01:43:48,000
And please consider this if your project needs lots of data.

924
01:43:48,000 --> 01:43:50,960
And if you think you need lots of data,

925
01:43:50,960 --> 01:43:54,360
reconsider, because sometimes you can actually

926
01:43:54,360 --> 01:43:58,600
manage with less data than you think.

927
01:43:58,600 --> 01:44:02,320
My kind of saying is that big data, big problems, small data,

928
01:44:02,320 --> 01:44:11,520
small problems. Yeah. And we always want to aim for small problems.

929
01:44:11,520 --> 01:44:16,040
And like I would add, there was a question in the notes about the Packetify system, like

930
01:44:16,040 --> 01:44:24,280
what is needed. And basically, it is to serve this kind of big data problems. It's there

931
01:44:24,280 --> 01:44:32,140
because no single disk would be big enough alone. So you need to have multiple disks

932
01:44:32,140 --> 01:44:41,020
to support the needs of the people. And with this system, it's a different kind of hard drive

933
01:44:41,020 --> 01:44:49,820
to what you normally use. So the laws are a bit different. So it's a bit like if you go to,

934
01:44:50,940 --> 01:44:58,460
let's say, you go to a kitchen or a place in a foreign country and then you notice that, hey,

935
01:44:58,460 --> 01:45:09,100
why is there one knob for hot water and one knob for cold water? It's this kind of situation where

936
01:45:09,100 --> 01:45:14,300
you need to adapt to a different kind of a system, a different kind of a file system.

937
01:45:14,300 --> 01:45:20,620
And there might be some things are bad in the big file system, like in the parallel file system,

938
01:45:20,620 --> 01:45:26,140
and some things that would be normal in your situation. So it's a good idea to read the

939
01:45:26,140 --> 01:45:35,100
documentation and ask the admins, like, is my data correctly set up? Do I need all of these

940
01:45:36,140 --> 01:45:40,860
kind of questions and have a rapport with the support people so that you can figure out what

941
01:45:40,860 --> 01:45:47,260
is the best solution for that specific file system? Basically, the issue with

942
01:45:48,860 --> 01:45:54,140
parallel file systems is that they are not very good with lots of small files. So, if you have

943
01:45:54,140 --> 01:46:05,420
100,000 20 kilobyte files, the performance is bad compared to your local NVMe on your laptop.

944
01:46:05,420 --> 01:46:11,820
This is like the basic thing. Yes. And then on the other end, if you think about big files,

945
01:46:13,420 --> 01:46:21,660
transferring terabyte size files is horrible. So you usually also want to limit the

946
01:46:21,660 --> 01:46:27,080
largest files to, let's say, if you can limit them to five gigabytes everything

947
01:46:27,080 --> 01:46:34,860
is easy. If you go above five gigabyte files then you may start to get some

948
01:46:34,860 --> 01:46:41,140
issues in some places. Okay, but data management is something that you need to

949
01:46:41,140 --> 01:46:48,900
consider for bigger projects a little bit and always ask first before

950
01:46:48,900 --> 01:46:54,260
pushing all the stuff to the disk. And then the practical thing that you

951
01:46:55,540 --> 01:47:00,500
kind of benefit is if you already know how to use Linux command line

952
01:47:01,620 --> 01:47:10,980
and some text editor like Vi or Emacs, or there are others, Pico and whatnot.

953
01:47:12,020 --> 01:47:13,700
So those benefit you in practice.

954
01:47:13,700 --> 01:47:25,220
Okay, so as a senior I have to give some advice. So always keep it simple because these things tend to

955
01:47:27,140 --> 01:47:33,140
be complex anyway, but try to keep it as simple as possible and ask for help. This is my kind of

956
01:47:34,260 --> 01:47:40,260
advice. And then where to find information. So CSC has three websites,

957
01:47:40,260 --> 01:47:48,740
basically well for HPC. Okay this I forgot to tell like HPC stuff is about

958
01:47:48,740 --> 01:47:56,460
third of what CSC does maybe so two-thirds of CSC stuff have never even

959
01:47:56,460 --> 01:48:02,460
logged into a supercomputer most likely so this is kind of the scale. CSC is

960
01:48:02,460 --> 01:48:09,380
doing lots of other things but let's concentrate on HPC here. Yeah so what

961
01:48:09,380 --> 01:48:16,980
csc. So this is kind of the company site. Let's see. It looks like this. So this is

962
01:48:16,980 --> 01:48:21,300
like your typical company site. What csc is basically.

963
01:48:24,500 --> 01:48:30,900
Then what services are available. So there's research.csc.fi

964
01:48:30,900 --> 01:48:43,300
And this is a little bit more detailed, so this goes into what kind of, well, services

965
01:48:43,300 --> 01:48:52,060
we have, like HPC services, Archive services, services for education and culture and whatnot.

966
01:48:52,060 --> 01:48:58,740
But the site that probably is most useful for you is docs.csc.fi

967
01:48:58,740 --> 01:49:00,740
Yes, that's a great place.

968
01:49:00,740 --> 01:49:05,740
Yeah, so this has all the tutorials that we have for anything.

969
01:49:05,740 --> 01:49:13,740
So, like, accounts has a lot of stuff on how you create an account,

970
01:49:13,740 --> 01:49:18,740
CSC account, and how you manage your project and stuff like that.

971
01:49:18,740 --> 01:49:21,740
So this is kind of the page that I would link.

972
01:49:21,740 --> 01:49:24,740
So docs.csc.fi.

973
01:49:24,740 --> 01:49:35,060
this has all the all the info and even this search is kind of okay for one word I think

974
01:49:36,580 --> 01:49:42,980
so if you already know the keyword you can find it otherwise there's lots of material because

975
01:49:42,980 --> 01:49:50,420
yeah and and but don't be afraid you only need to kind of read part of that so maybe just read the

976
01:49:50,420 --> 01:49:58,260
kind of what's in it, but you don't need to go into details at once, because this is a lot.

977
01:49:59,540 --> 01:50:10,260
But to start, it's accounts, and then computing, and data, and maybe applications. Those are the

978
01:50:10,260 --> 01:50:17,140
kind of... Yeah, and during the course when we're also going to be talking about queue -systems and stuff

979
01:50:17,140 --> 01:50:22,900
like that, most of the stuff is going to be similar. We'll be using our documentation

980
01:50:23,540 --> 01:50:27,380
as the material, but most of the stuff will be similar to what's in the CSC.

981
01:50:28,260 --> 01:50:35,140
Of course, there's small differences in the clusters, and there's stuff changes based on

982
01:50:35,140 --> 01:50:41,940
that. But if you're using a different cluster, just look at the documentation for that specific

983
01:50:41,940 --> 01:50:48,420
page and you will see that most of it reminds you of the same things. It's not the exact same,

984
01:50:48,420 --> 01:50:56,580
but it looks similar. So it's like you can then fill out the gaps of what things are specific

985
01:50:56,580 --> 01:51:03,140
for this cluster and try to figure out, okay, what are the differences? And then just look at

986
01:51:03,140 --> 01:51:08,740
those ones. And like [name] said, look at the ones that are relevant for your use case.

987
01:51:08,740 --> 01:51:17,740
Yeah. And, of course, the best way to know what is relevant is to ask from your senior colleagues.

988
01:51:17,740 --> 01:51:18,740
Yes.

989
01:51:18,740 --> 01:51:22,740
That's the quickest way to get to the right page.

990
01:51:22,740 --> 01:51:30,740
And you can also ask us, the local people in the universities, because we often use the CSC system.

991
01:51:30,740 --> 01:51:43,740
Even though we are not like CSC helpers or whatever, we often use the CSC system so we can either help you or direct you towards the right place to ask you in CSC.

992
01:51:43,740 --> 01:51:57,740
Yeah, so yeah, so this is kind of like your local support is of course the, whoops, this is getting jumpy.

993
01:51:57,740 --> 01:52:08,740
Your local support is always the best, your colleagues, that's the quickest and they are probably doing the same thing in your group that you are supposed to do.

994
01:52:08,740 --> 01:52:13,540
Somebody has done it before, most of the time, or a very similar thing.

995
01:52:15,460 --> 01:52:22,740
And this is true for all computing stuff and almost all research also.

996
01:52:24,420 --> 01:52:33,540
And then you have servicedesk@csc.fi and there's no barrier asking questions from there either.

997
01:52:33,540 --> 01:52:41,540
We are happy to pick up also easy questions, like I'm preferring easy questions.

998
01:52:41,540 --> 01:52:46,540
And maybe other stuff at CSC can get the hard ones.

999
01:52:51,540 --> 01:52:56,540
I would add one more site to the list, which was the CSC trainings.

1000
01:52:56,540 --> 01:53:03,540
So CSC has a lot of great courses throughout their calendar, like training calendar.

1001
01:53:03,540 --> 01:53:08,540
There's also the summer school retreats and all of these kind of like things.

1002
01:53:08,540 --> 01:53:19,540
So if you go to the online training site, there's also some MOOC courses and stuff like that,

1003
01:53:19,540 --> 01:53:22,540
like these online MOOC courses that you can do.

1004
01:53:22,540 --> 01:53:28,540
And there's lots of other courses and we often, like, we go to these courses as well.

1005
01:53:28,540 --> 01:53:35,540
Like sometimes when we think that, okay, we want to see how CSE does stuff, we join the courses and we do them as well.

1006
01:53:35,540 --> 01:53:38,540
Just to disseminate the information.

1007
01:53:38,540 --> 01:53:44,540
And I can highly recommend going to these courses for learning.

1008
01:53:44,540 --> 01:53:51,540
Of course, many of these can be specific to, let's say, one system or some field or something.

1009
01:53:51,540 --> 01:54:01,540
But there's a whole smorgasbord of courses, so you can choose whatever you want, so I can highly recommend those.

1010
01:54:01,540 --> 01:54:06,540
Yeah, especially this CSC Computing Environment Self-Learning course.

1011
01:54:06,540 --> 01:54:12,540
I think it was called at some point, Using CSC Resources Efficiently or something like that.

1012
01:54:12,540 --> 01:54:17,540
I highly recommend that if you start using CSC services.

1013
01:54:17,540 --> 01:54:30,540
So that's a kind of first course that you should take if you use CSC's resources and you can basically read it yourself.

1014
01:54:30,540 --> 01:54:34,540
Good. Yeah, so this is the base that you...

1015
01:54:34,540 --> 01:54:38,540
Yeah, this is the one I told about.

1016
01:54:38,540 --> 01:54:43,540
Yeah, very good. Yeah, I forgot that one. I haven't given trainings for a long time.

1017
01:54:43,540 --> 01:54:46,540
Like I do them, let's say, once or twice a year.

1018
01:54:46,540 --> 01:54:48,540
Yeah.

1019
01:54:48,540 --> 01:54:50,540
Yeah. All right.

1020
01:54:50,540 --> 01:54:52,540
Then to demos.

1021
01:54:52,540 --> 01:54:58,540
So, maybe we go to docs first.

1022
01:54:58,540 --> 01:55:04,540
So, let's say that you want to get an account and you want to get a computing project.

1023
01:55:04,540 --> 01:55:10,540
And the information creating a new user account, that's where you get it.

1024
01:55:10,540 --> 01:55:19,020
So basically what you do with everything here is that you log into my.csc.fi service.

1025
01:55:21,100 --> 01:55:29,020
So it's based like this and then you click there and then if you are

1026
01:55:33,500 --> 01:55:39,740
at Finnish universities you have HAKA identification. So that's really kind of the

1027
01:55:39,740 --> 01:55:48,220
simplest way and if you don't have Haka then you either need to ask someone some project let's say

1028
01:55:48,220 --> 01:55:55,340
some somebody who is already who already has a CSC project they can invite you to like a CSC

1029
01:55:56,860 --> 01:56:01,980
but as a student or researcher in Finnish universities you can log in with Haka.

1030
01:56:01,980 --> 01:56:13,980
I have now a kind of demo account here, so I use this password log in, so you use [a seprate] csc password for this [but not for your normal accounts].

1031
01:56:17,980 --> 01:56:19,980
And that was really like...

1032
01:56:23,980 --> 01:56:24,980
How do I get this?

1033
01:56:24,980 --> 01:56:34,980
Sorry, I need to look up the password for this one. This is not my own account.

1034
01:56:39,980 --> 01:56:53,980
Yeah, but if you're a Finnish university affiliate, if you use the Haka login, you usually log in with your university's own account and you can use the same.

1035
01:56:53,980 --> 01:57:01,740
same. That's much more convenient. Yeah. But if you are not a Finnish university member then you

1036
01:57:01,740 --> 01:57:17,100
have to use the CSC password. Yes. And usually it asks for a multi-factor or second factor

1037
01:57:17,100 --> 01:57:23,020
for authentication. So you should have some authentication app in your phone for example

1038
01:57:23,020 --> 01:57:28,220
like Google Authenticator or Microsoft Authenticator.

1039
01:57:28,220 --> 01:57:32,460
And I think when you first time log in, then you don't need it,

1040
01:57:32,460 --> 01:57:37,100
but then you need to set it up for the subsequent logins.

1041
01:57:37,100 --> 01:57:41,180
So, okay, this is a little bit too much detail maybe, and it's all documented in

1042
01:57:41,180 --> 01:57:47,180
the docs. But what you do is you go to profile

1043
01:57:47,180 --> 01:57:53,980
and then you enable this multi-factor authentication. So for web services,

1044
01:57:55,580 --> 01:58:02,380
most of CSC's web services already require you to have like some kind of password or

1045
01:58:03,260 --> 01:58:08,780
if you come in with HAKA and you have already done this two-factor authentication,

1046
01:58:08,780 --> 01:58:15,260
then you get immediately in and you don't even notice this stuff. But if you don't, you need to

1047
01:58:15,260 --> 01:58:19,820
kind of enable that and here and the next time you log in it will

1048
01:58:19,820 --> 01:58:25,500
ask for the authentication thingy. But I think most of the

1049
01:58:25,500 --> 01:58:29,020
people are kind of familiar with this already when

1050
01:58:29,020 --> 01:58:32,060
you use something like Mobiliavain and stuff like that.

1051
01:58:32,060 --> 01:58:38,700
This is basically the same thing. Well, maybe not but pretty close.

1052
01:58:39,580 --> 01:58:43,420
So that's one way to access CSC's resources is to use

1053
01:58:43,420 --> 01:58:50,700
your web browser. So, you can use web interfaces also to supercomputers and to object storage

1054
01:58:53,900 --> 01:59:01,100
but the kind of the more traditional way is to use SSH logins and for those you need to set up

1055
01:59:01,100 --> 01:59:09,820
SSH keys. So, you generate on your local machine, you generate SSH key pair and then you upload

1056
01:59:09,820 --> 01:59:19,820
the public part of the key to this service, and then this is the one that I have uploaded already.

1057
01:59:21,100 --> 01:59:27,180
And then you wait for one hour for the information to go from MyCSC to the computing servers,

1058
01:59:27,180 --> 01:59:32,700
and then you can log in with SSH to CSC's machines. This is how it works, and there's

1059
01:59:32,700 --> 01:59:41,260
lots of details, how you do the details in Windows machines. Macs and Linux are the same.

1060
01:59:41,980 --> 01:59:53,260
Those are really simple. I highly recommend having one good look through the SSH documentation and

1061
01:59:53,260 --> 01:59:58,540
getting one good setup where you have, let's say, an SSH key with a passphrase.

1062
01:59:58,540 --> 02:00:05,700
So it's like other people cannot use it if you lose access to it or if you by mistake

1063
02:00:05,700 --> 02:00:08,340
upload it to the internet or whatever.

1064
02:00:08,340 --> 02:00:12,420
You have a passphrase in it and then you have this so-called agent that remembers the keys

1065
02:00:12,420 --> 02:00:15,100
so you don't have to type the passphrase all the time.

1066
02:00:15,100 --> 02:00:22,460
And it's usually like, this all sounds like a mumbo-jumbo currently for many of you,

1067
02:00:22,460 --> 02:00:32,420
But if you read the documentations and go through the process once and read it, hopefully

1068
02:00:32,420 --> 02:00:40,780
you will get a system where it's very easy to log into all of these systems afterwards.

1069
02:00:40,780 --> 02:00:46,300
For many of us, people who have been using these sorts of systems all the time, we don't

1070
02:00:46,300 --> 02:00:47,300
even think about it.

1071
02:00:47,300 --> 02:00:53,220
like we just go to different systems without thinking about it even.

1072
02:00:53,220 --> 02:00:59,340
So, of course, the first time you do these authentication kinds of things,

1073
02:00:59,340 --> 02:01:03,340
it sounds like a lot of cryptography and whatever, like,

1074
02:01:03,340 --> 02:01:05,260
why do I need to know all of this?

1075
02:01:05,260 --> 02:01:10,060
But it's because the logins need to be secure.

1076
02:01:10,060 --> 02:01:12,980
Yeah. And once you have kind of figured it out,

1077
02:01:12,980 --> 02:01:17,100
it's almost automatic and you don't need to do much.

1078
02:01:17,100 --> 02:01:24,780
Okay, but the kind of point here is that you have this multi-factor authentication MFA for the web

1079
02:01:24,780 --> 02:01:32,140
services and then for the terminal logins you have this SSH key pair business. So, two ways to

1080
02:01:33,340 --> 02:01:38,460
log in or access the machines and they use a little bit different authentication systems.

1081
02:01:38,460 --> 02:01:47,180
But before you can go into CSC machines, you need a project, so this

1082
02:01:48,780 --> 02:01:54,780
dummy account probably has a project. Yeah, demo and testing.

1083
02:01:57,740 --> 02:02:04,060
And then you can have a look at details of your project and you can see that this project has

1084
02:02:04,060 --> 02:02:07,260
as Allas and Mahti Supercomputer Services.

1085
02:02:07,260 --> 02:02:11,660
So when I kind of belong to this project,

1086
02:02:11,660 --> 02:02:13,620
I can access these resources.

1087
02:02:16,860 --> 02:02:19,580
And then we are using billing units.

1088
02:02:19,580 --> 02:02:24,540
So all our resources, we try to share it fairly

1089
02:02:24,540 --> 02:02:27,360
among all the researchers and students.

1090
02:02:27,360 --> 02:02:30,100
So we are using this kind of monopoly money

1091
02:02:30,100 --> 02:02:31,620
called billing units.

1092
02:02:31,620 --> 02:02:38,620
And you can kind of, well, there's a procedure how to get more billing units.

1093
02:02:38,620 --> 02:02:43,620
But the thing is that 100,000 is given automatically.

1094
02:02:43,620 --> 02:02:44,620
Yeah.

1095
02:02:44,620 --> 02:02:57,620
And then you need to maybe later have some, so that I will use this to make my PhD or I have, I'm preparing this and this article and this is why I need it.

1096
02:02:57,620 --> 02:03:01,620
But it's always like academic stuff that you show.

1097
02:03:01,620 --> 02:03:10,620
And like [name] mentioned previously, all of this is paid for by mainly, I think, the Ministry of Education in Finland.

1098
02:03:10,620 --> 02:03:11,620
Yeah.

1099
02:03:11,620 --> 02:03:15,620
So it's monopoly money, so it's not...

1100
02:03:15,620 --> 02:03:19,620
Yeah, you don't have to put your credit card anywhere.

1101
02:03:19,620 --> 02:03:23,620
And usually your supervisor or professor takes care of this.

1102
02:03:23,620 --> 02:03:24,620
Yes, yes.

1103
02:03:24,620 --> 02:03:33,620
Yeah, you just belong to some project and then you like to use the resources efficiently and then everybody's pretty much happy.

1104
02:03:34,620 --> 02:03:35,620
Yeah.

1105
02:03:36,620 --> 02:03:42,620
So maybe I show next how to go to Mahti through web interface.

1106
02:03:43,620 --> 02:03:44,620
Yeah, sounds good.

1107
02:03:44,620 --> 02:03:56,620
So if I just go mahti.csc.fi, I land into this kind of page, which shows what's going on in the machine currently.

1108
02:03:56,620 --> 02:04:02,620
So the machine seems to be pretty full. That's why we have batch systems.

1109
02:04:02,620 --> 02:04:10,620
Yeah, so batch system, we didn't talk too much about those yet, but the idea is that

1110
02:04:10,620 --> 02:04:16,420
there's lots of people who want to run their calculations in the machine, and then we want

1111
02:04:16,420 --> 02:04:22,820
to fill the machine so that it's running at full steam all the time, and this is why we

1112
02:04:22,820 --> 02:04:26,980
are arranging the jobs or calculations.

1113
02:04:26,980 --> 02:04:32,060
You can think of it as a packing problem, so like lots of different sizes of boxes and

1114
02:04:32,060 --> 02:04:36,380
you try to fit as many of them into the machine at once.

1115
02:04:36,380 --> 02:04:40,940
And also the system takes into account

1116
02:04:40,940 --> 02:04:44,380
who has run lots of stuff recently and this

1117
02:04:44,380 --> 02:04:49,740
tries to share the resources fairly so that no one user will use the

1118
02:04:49,740 --> 02:04:53,900
system all the time.

1119
02:04:53,900 --> 02:04:57,980
We'll talk about the priorities and

1120
02:04:57,980 --> 02:05:05,420
everything later on. Those are details, yeah. But anyways, and this shows some stuff. Let's say

1121
02:05:05,420 --> 02:05:09,740
if we log in, what do we get? Okay, again, you would probably use this

1122
02:05:09,740 --> 02:05:13,020
haka and then it's probably just one click and I need to go here.

1123
02:05:19,340 --> 02:05:22,980
And then I need the password again, but you probably use the other one.

1124
02:05:27,980 --> 02:05:45,980
Yeah, okay. That's bound to happen.

1125
02:05:45,980 --> 02:05:51,220
That was a good question in the chat. Will the commands we learn on Triton work the same

1126
02:05:51,220 --> 02:06:00,340
on the CSC cluster for like 90% yes, there's the 10% of the extra spice that you need to put

1127
02:06:00,340 --> 02:06:06,180
for different cluster, like maybe you need to, when you're reserving jobs, you need to

1128
02:06:06,740 --> 02:06:13,940
set which project you want it to be built and that sort of stuff like in CSC clusters.

1129
02:06:13,940 --> 02:06:24,940
And there's small differences in different clusters, but the vast majority of the commands are the same.

1130
02:06:24,940 --> 02:06:26,940
We use the same kind of batch systems.

1131
02:06:26,940 --> 02:06:33,940
Puhti and Mahti use a similar kind of file system that we have, and there's small differences.

1132
02:06:33,940 --> 02:06:37,940
Yeah, the partitions may be different.

1133
02:06:37,940 --> 02:06:46,420
Yeah, but this is how the web interface looks, and this is, I think, easier for the new users,

1134
02:06:46,420 --> 02:06:52,420
so you can immediately see lots of stuff, and if you are, let's say, if you want to run

1135
02:06:52,420 --> 02:06:57,940
Jupyter notebooks, this is an easy way to get something started quickly.

1136
02:06:57,940 --> 02:07:11,460
Yeah, so you can browse your files, you can check your quotas, so these machines have

1137
02:07:11,460 --> 02:07:15,660
something like maybe six petabytes of disk.

1138
02:07:15,660 --> 02:07:22,340
You notice that my numbers are all off, completely off, because I've lost interest in technical

1139
02:07:22,340 --> 02:07:27,540
details many years ago, that's why I'm doing a little bit different things.

1140
02:07:27,540 --> 02:07:33,380
people who like technical details are in the hardware side of CSC. But anyways, you have

1141
02:07:33,380 --> 02:07:40,580
disk quotas, so your project will have a certain amount of disk space available. And then

1142
02:07:43,380 --> 02:07:44,180
just a moment.

1143
02:07:47,220 --> 02:07:56,340
Yeah. And then you have cloud storage configuration. This is quite a nice tool

1144
02:07:56,340 --> 02:08:06,340
Because, yeah, using this object storage, that's another thing, that's a longer talk.

1145
02:08:06,340 --> 02:08:11,340
Maybe we skip it now because we have so little time left.

1146
02:08:11,340 --> 02:08:16,340
So, we should probably also leave some time for discussion.

1147
02:08:16,340 --> 02:08:23,340
Yes, and there's many questions. There's a very enthusiastic crowd in the chat which is great.

1148
02:08:23,340 --> 02:08:28,940
Okay, so, but there's lots of stuff here that you can do almost with clicking.

1149
02:08:28,940 --> 02:08:34,940
So, for example, generating a batch job is basically quite easy here.

1150
02:08:34,940 --> 02:08:43,940
So, you get the compute nodes there, and then you say what project will be charged,

1151
02:08:43,940 --> 02:08:49,140
what billing units will be eaten from there, what partition you will use,

1152
02:08:49,140 --> 02:08:54,500
how many CPUs you want, do you want local disk, for how long you want it to run,

1153
02:08:55,700 --> 02:09:02,500
and stuff like that. And then you launch, and what it does now, now it created a batch job,

1154
02:09:02,500 --> 02:09:07,300
and it gave it to the batch queue system, and now batch queue system is trying to find

1155
02:09:08,340 --> 02:09:13,380
some compute node which can run, which has these resources available that you requested,

1156
02:09:13,380 --> 02:09:19,380
And when it's done, it says that you can connect to that thingy.

1157
02:09:23,380 --> 02:09:29,380
You might need to answer yes, because you haven't yet ever connected to that machine before.

1158
02:09:29,380 --> 02:09:31,380
Yeah, this is the first time I ever logged in.

1159
02:09:31,380 --> 02:09:36,380
So now I'm already in the compute node. You can see the name of the compute node here.

1160
02:09:36,380 --> 02:09:40,380
So this is c3101.

1161
02:09:40,380 --> 02:09:42,380
Can you zoom in some?

1162
02:09:42,380 --> 02:09:44,380
Now you can see.

1163
02:09:44,380 --> 02:09:46,380
Okay, that's good.

1164
02:09:46,380 --> 02:09:50,380
So this is the easiest way to get to compute node.

1165
02:09:50,380 --> 02:09:52,380
And now you are in the compute node.

1166
02:09:52,380 --> 02:09:55,380
So now you can do compute-intensive stuff.

1167
02:09:55,380 --> 02:09:59,380
Yes. Yeah, if you want to do this interactive session,

1168
02:09:59,380 --> 02:10:02,380
you can get it quite quickly and quite easily.

1169
02:10:02,380 --> 02:10:08,060
Yeah, so this is the quickest way to get to computing, I would say.

1170
02:10:09,900 --> 02:10:12,700
You can also, the nice thing is that you can close this one

1171
02:10:15,260 --> 02:10:16,620
and then you can come back to it.

1172
02:10:19,820 --> 02:10:26,540
Yeah, the font is not remembered, but anyways. Yeah, yeah, okay. And when you are done,

1173
02:10:26,540 --> 02:10:35,380
One, you want to stop the batch queue system, so the resources will be available for others

1174
02:10:35,380 --> 02:10:44,860
and also your billing will end when you stop the batch job.

1175
02:10:44,860 --> 02:10:52,100
And this is just some log, so you can even remove the log thing now.

1176
02:10:52,100 --> 02:10:57,940
And this is the way you can see what you have running in the machine currently.

1177
02:10:57,940 --> 02:11:00,860
So this is kind of the easiest way to get into the machine.

1178
02:11:00,860 --> 02:11:10,140
The more traditional way is to use the command line and then just like ssh your username

1179
02:11:10,140 --> 02:11:13,780
mahti.csc.fi then you log in like this.

1180
02:11:13,780 --> 02:11:17,220
Yeah, with your SSH key.

1181
02:11:17,220 --> 02:11:25,700
need to have set up the SSH in the my.csc.fi service. So where

1182
02:11:25,700 --> 02:11:35,500
was it? You need to have the public key here. Otherwise, it

1183
02:11:35,500 --> 02:11:40,620
doesn't work that nice, or at all. And here you can do

1184
02:11:40,660 --> 02:11:45,900
basically the same thing that you can do on the on the web

1185
02:11:45,900 --> 02:11:55,260
interface and plus some more okay so i really i'm running out of actual doing any demo

1186
02:11:57,020 --> 02:11:59,580
but we can have a look a little bit what

1187
02:12:01,980 --> 02:12:09,260
computing project might look like so you might have something you want to run let's say you

1188
02:12:09,260 --> 02:12:14,460
have some Python program, some task, what was there.

1189
02:12:19,340 --> 02:12:21,260
So this is some Python program.

1190
02:12:23,740 --> 02:12:29,340
This basically, what this does is it just prints its arguments to the file.

1191
02:12:29,900 --> 02:12:36,700
So this is an example program. Then I had a wrapper. What was that one?

1192
02:12:36,700 --> 02:12:48,700
Okay, so I want to run that Python program five times in parallel, so here there are different

1193
02:12:48,700 --> 02:12:55,180
ways to do parallelism and I think the first one you should do is within the application. So this

1194
02:12:55,180 --> 02:13:04,300
is like within the Python and Python parallelization that works within one node pretty well. If you want

1195
02:13:04,300 --> 02:13:11,260
to go beyond one node or you want to use multiple nodes, then you need to use something like MPI for

1196
02:13:11,260 --> 02:13:19,180
Python, some library like that, or Python package. But anyways, what this does is if you run this

1197
02:13:19,180 --> 02:13:27,420
thing on your local machine, it will run the same thing like in your local machine normally, but

1198
02:13:27,420 --> 02:13:35,580
five times in parallel. But if you want to submit that thing to a compute node,

1199
02:13:35,580 --> 02:13:41,420
then you need the batch job script, and that's the last one that I'll show.

1200
02:13:46,140 --> 02:13:51,100
So this is how batch jobs basically look like, without all the comments.

1201
02:13:51,100 --> 02:14:01,820
So first you tell that this is a bash script, so you could in principle execute this and all the

1202
02:14:01,820 --> 02:14:09,580
comments would be ignored, but you usually specify here with these special comments,

1203
02:14:09,580 --> 02:14:15,820
you specify what kind of resources you want. So the first one is what kind of nodes, so p for

1204
02:14:15,820 --> 02:14:23,980
partition. A is account, what account will be charged. How many tasks you want to start at once.

1205
02:14:23,980 --> 02:14:30,540
So I want to start one Python program. Then how many CPU cores do I want to give to this one

1206
02:14:30,540 --> 02:14:39,900
Python program. That would be number of cores. And Mahti has 128 cores in a node. And you also

1207
02:14:39,900 --> 02:14:46,300
reserve whole nodes, so it doesn't make any sense to reserve less because you are already taking

1208
02:14:46,300 --> 02:14:53,500
them. But if you put a smaller number here, then you can't just use them. And then the last one is

1209
02:14:53,500 --> 02:15:00,460
for how long time, so for 10 years. We'll talk about how do you write these scripts and what

1210
02:15:00,460 --> 02:15:05,900
is the syntax here. We'll talk about in the afternoon, like after the lunch, we'll start

1211
02:15:05,900 --> 02:15:13,820
actually writing these sorts of instructions. The kind of basic structure of a batch job script is

1212
02:15:13,820 --> 02:15:21,980
you have to describe what kind of resources you want, then you set up your software environment.

1213
02:15:21,980 --> 02:15:28,540
So here's the module load command that I said this picks up Python, particular Python from the

1214
02:15:28,540 --> 02:15:36,380
machine. Then you kind of do the calculation, change to the directory where your data is,

1215
02:15:36,380 --> 02:15:42,780
for example, and then you launch the application. So, I'm running Python

1216
02:15:46,140 --> 02:15:52,860
and then there are some arguments and stuff, but usually you have some kind of

1217
02:15:52,860 --> 02:16:03,580
special program that knows what resources you have reserved. So if this were, instead of Python, if

1218
02:16:03,580 --> 02:16:13,020
this were, let's say, MPI parallel program, that's a program that can use multiple nodes,

1219
02:16:14,220 --> 02:16:22,380
then you would need this srun command to launch it. Yes, it will do some magic behind the scenes

1220
02:16:22,380 --> 02:16:27,740
to make certain that all of the different processes know about each other. But yeah,

1221
02:16:27,740 --> 02:16:31,660
for this one, it's not necessary, but it's nice to have.

1222
02:16:32,300 --> 02:16:37,020
Basically, what this command does, this is not absolutely necessary here.

1223
02:16:37,820 --> 02:16:44,540
But basically, that command, what it does, it launches this many copies of the thing.

1224
02:16:44,540 --> 02:16:53,540
So I have one copy, launch one copy of Python, but if n would be 10, then it would launch 10 copies of Python.

1225
02:16:53,540 --> 02:17:08,540
And yeah, that's how it works. And then as a last step, you probably want to kind of copy the important data that you want to save from the calculation to some storage space.

1226
02:17:08,540 --> 02:17:15,700
So you may use temporary disk for doing the calculation and then you want to probably

1227
02:17:15,700 --> 02:17:21,220
clean it up and save only what you actually really need from the whole thing.

1228
02:17:21,220 --> 02:17:25,540
Usually programs run lots of garbage to the directory system.

1229
02:17:25,540 --> 02:17:28,660
Okay, but yeah.

1230
02:17:28,660 --> 02:17:38,380
And how you run it is batch.

1231
02:17:38,380 --> 02:17:44,800
Of course, in this quick demo, there's no time to go through all of the intricacies

1232
02:17:44,800 --> 02:17:45,800
of writing this.

1233
02:17:45,800 --> 02:17:50,760
That's why we have the three-day course, where we'll be using three days to go through basically

1234
02:17:50,760 --> 02:17:55,800
what [name] is showing here, and we'll start in the afternoon.

1235
02:17:55,800 --> 02:18:01,360
But basically, everything [name] has shown here, after the course, you should basically be

1236
02:18:01,360 --> 02:18:03,240
able to do.

1237
02:18:03,240 --> 02:18:09,840
So this is kind of like a teaser of what you will be able to do after the course.

1238
02:18:09,840 --> 02:18:13,120
And then you can choose, okay, do I want to use CSC machines?

1239
02:18:13,120 --> 02:18:14,360
Do I want to use Triton?

1240
02:18:14,360 --> 02:18:17,800
Do I want to use my local university machines?

1241
02:18:17,800 --> 02:18:23,960
All of this is at your fingertips, basically, after you have done this course, hopefully.

1242
02:18:23,960 --> 02:18:33,240
So even though the supercomputer is in the name, there's nothing super complicated in

1243
02:18:33,240 --> 02:18:34,240
there.

1244
02:18:34,240 --> 02:18:41,160
It's still a similar kind of a system as the other universities and other places.

1245
02:18:41,160 --> 02:18:48,640
So basically, if you learn it once, you can scale your program bigger.

1246
02:18:48,640 --> 02:19:00,080
was a good question in the HackMD of how do you know what my jobs need in terms of computing?

1247
02:19:00,080 --> 02:19:05,120
And how would you say that? How people should scale towards the CSC systems? How should they

1248
02:19:07,680 --> 02:19:12,960
move towards CSC systems? How do they know what their jobs need and how will they figure it out?

1249
02:19:12,960 --> 02:19:22,960
Scaling is a good question. Even when you have written your program so that it can run in parallel,

1250
02:19:22,960 --> 02:19:32,960
so it can use multiple CPU cores, at some point the overhead of the parallelization will actually

1251
02:19:32,960 --> 02:19:40,960
stop it from being faster and it will actually start running slower if you use more and more and more CPU cores.

1252
02:19:40,960 --> 02:19:47,960
And this depends on the particular program and also the size of the data.

1253
02:19:47,960 --> 02:19:52,960
So you can easily think this as, for example, data.

1254
02:19:52,960 --> 02:20:02,960
If you have a grid of data and you split it to small pieces and give different pieces to different CPUs and they can compute it,

1255
02:20:02,960 --> 02:20:13,960
Usually they need to kind of communicate the border pieces to the next kind of datapiece or CPU.

1256
02:20:13,960 --> 02:20:17,960
And this communication is an overhead.

1257
02:20:17,960 --> 02:20:27,960
And you can think that at some point, if you split it to two small pieces, there's very little computing and a lot of communication.

1258
02:20:27,960 --> 02:20:35,320
and then it actually happens that it's not faster even though you have split it into small pieces

1259
02:20:35,320 --> 02:20:41,480
because well the overhead eats it so and then there are other bottlenecks than communication

1260
02:20:43,080 --> 02:20:49,880
let's say of bottleneck like like disk io might become a bottleneck because there's only one file

1261
02:20:49,880 --> 02:20:57,560
system it doesn't get multiplied the same same way you you can get more and more compute

1262
02:20:57,560 --> 02:21:03,960
So do you think that the roadmap for users would be like first run their programs as

1263
02:21:03,960 --> 02:21:09,080
they currently do in the cluster, like try to get them running in the cluster and then

1264
02:21:09,080 --> 02:21:15,880
try to parallelize them within one computer and then maybe start experiencing the choice

1265
02:21:15,880 --> 02:21:23,560
of trying to do this parallelization across multiple computers and experience the scaling

1266
02:21:24,280 --> 02:21:26,600
bottlenecks that you just described?

1267
02:21:26,600 --> 02:21:30,360
You can test parallelization in local machine, in laptop also.

1268
02:21:30,360 --> 02:21:35,360
Like a single CPU can actually run multiple processes at the same time.

1269
02:21:35,360 --> 02:21:42,280
So I always encourage to try to develop on laptop,

1270
02:21:42,280 --> 02:21:44,280
because that's most agile.

1271
02:21:44,280 --> 02:21:48,880
And the supercomputers, they tend to be a little bit slower to use,

1272
02:21:48,880 --> 02:21:53,120
and you are dependent of the network connection and stuff like that.

1273
02:21:53,120 --> 02:21:56,240
So always develop locally as far as you can.

1274
02:21:56,240 --> 02:22:01,360
then at some point you can't anymore develop locally. You need to try the scaling.

1275
02:22:01,920 --> 02:22:08,720
Because the scaling you basically only know by trying. So you try out and you let's say plot

1276
02:22:08,720 --> 02:22:18,000
data points. I'm using 100 cores, 200, 400, 800, 1600 and then you plot how fast it runs and you

1277
02:22:18,000 --> 02:22:26,480
see that every time you double, it's taking half the time. Then everything is good or perfect.

1278
02:22:28,080 --> 02:22:35,200
Life is never perfect, so usually you don't get that good scaling. But you want to see scaling.

1279
02:22:35,200 --> 02:22:43,200
So if you use 800 cores and 1600 cores and it runs the same time, you are not getting any

1280
02:22:43,200 --> 02:22:50,240
benefit from it. And basically, you just need to test. There's no way you can say it beforehand.

1281
02:22:51,120 --> 02:22:58,720
But I think we are running to the end of the session, so do you have any closing thoughts

1282
02:22:58,720 --> 02:23:07,040
that you would want to leave for the learners about CSC systems or SBC computing in general?

1283
02:23:07,040 --> 02:23:17,040
I think that CSC services are available to you and please ask for help before you're not getting stuck for too long time.

1284
02:23:17,040 --> 02:23:19,040
These are the two main points.

1285
02:23:19,040 --> 02:23:23,040
Yeah, I think those are like good words of wisdom to live by.

1286
02:23:23,040 --> 02:23:34,040
So, I think, like, lots of thanks from our side, [name], great talk, nice, very nice introduction to the CSC services.

1287
02:23:34,040 --> 02:23:37,600
And I think we have lunch next in the schedule.

1288
02:23:37,600 --> 02:23:38,920
Yes.

1289
02:23:38,920 --> 02:23:40,920
So there's lunch.

1290
02:23:40,920 --> 02:23:49,000
And when we get back, let's see, do we go straight to our hands-on stuff?

1291
02:23:49,000 --> 02:23:53,000
Yes.

1292
02:23:53,000 --> 02:23:55,480
So once we come back from lunch, we start getting hands-on.

1293
02:23:55,480 --> 02:24:02,200
So we will start using the cluster access we got in the last hour to

1294
02:24:02,200 --> 02:24:07,200
actually, you know, copy data and run stuff on the cluster.

1295
02:24:07,200 --> 02:24:11,200
So if you haven't got to set up yet, work on it during lunch.

1296
02:24:11,200 --> 02:24:14,200
And, well, let's hope it goes well after that.

1297
02:24:14,200 --> 02:24:20,200
It will be interesting to see how all the ways things might go wrong then.

1298
02:24:20,200 --> 02:24:23,200
But yes, thanks for coming.

1299
02:24:23,200 --> 02:24:29,200
Between the sessions, I would just note that between sessions, we will archive some of the

1300
02:24:29,200 --> 02:24:35,360
notes or the notes answers, because it's getting long, which is great.

1301
02:24:35,360 --> 02:24:36,360
We have a lot of questions.

1302
02:24:36,360 --> 02:24:37,360
That's amazing.

1303
02:24:37,360 --> 02:24:40,800
But the editing becomes slower.

1304
02:24:40,800 --> 02:24:47,520
So if you have some questions that you want to look backwards, check the archive.

1305
02:24:47,520 --> 02:24:48,520
And yeah.

1306
02:24:48,520 --> 02:24:49,520
Thanks a lot, [name].

1307
02:24:49,520 --> 02:24:50,520
Okay.

1308
02:24:50,520 --> 02:24:51,520
Thanks.

1309
02:24:51,520 --> 02:24:52,520
Yeah.

1310
02:24:52,520 --> 02:24:53,520
Thank you.

1311
02:24:53,520 --> 02:24:54,520
I will also go and check the questions and answer them now.

1312
02:24:54,520 --> 02:24:55,520
Okay.

1313
02:24:55,520 --> 02:24:56,520
Great.

1314
02:24:56,520 --> 02:24:57,520
Within the next half an hour.

1315
02:24:57,520 --> 02:24:58,520
Yeah.

1316
02:24:58,520 --> 02:25:00,520
Have a nice rest of the course.

1317
02:25:00,520 --> 02:25:02,520
Bye.

1318
02:25:02,520 --> 02:25:04,520
And you can keep asking us questions

1319
02:25:04,520 --> 02:25:06,520
during lunch, so we'll

1320
02:25:06,520 --> 02:25:08,520
see eventually.

1321
02:25:08,520 --> 02:25:10,520
So, with that said, see you

1322
02:25:10,520 --> 02:25:12,520
in an hour. Bye.

1323
02:25:12,520 --> 02:25:14,520
Bye.

1324
02:25:14,520 --> 02:25:16,520
Bye.

1325
02:25:28,520 --> 02:25:30,580
you

1326
02:25:58,520 --> 02:26:00,580
you

1327
02:26:28,520 --> 02:26:30,580
you

1328
02:26:58,520 --> 02:27:00,580
you

1329
02:27:28,520 --> 02:27:30,580
you

1330
02:27:58,520 --> 02:28:00,580
you

1331
02:28:28,520 --> 02:28:30,580
you

1332
02:28:58,520 --> 02:29:00,580
you

1333
02:29:28,520 --> 02:29:30,580
you

1334
02:29:58,520 --> 02:30:00,580
you

1335
02:30:28,520 --> 02:30:30,580
you

1336
02:30:58,520 --> 02:31:00,580
you

1337
02:31:28,520 --> 02:31:30,580
you

1338
02:31:58,520 --> 02:32:00,580
you

1339
02:32:28,520 --> 02:32:30,580
you

1340
02:32:58,520 --> 02:33:00,580
you

1341
02:33:28,520 --> 02:33:30,580
you

1342
02:33:58,520 --> 02:34:00,580
you

1343
02:34:28,520 --> 02:34:30,580
you

1344
02:34:58,520 --> 02:35:00,580
you

1345
02:35:28,520 --> 02:35:30,580
you

1346
02:35:58,520 --> 02:36:00,580
you

1347
02:36:28,520 --> 02:36:30,580
you

1348
02:36:58,520 --> 02:37:00,580
you

1349
02:37:28,520 --> 02:37:30,580
you

1350
02:37:58,520 --> 02:38:00,580
you

1351
02:38:28,520 --> 02:38:30,580
you

1352
02:38:58,520 --> 02:39:00,580
you

1353
02:39:28,520 --> 02:39:30,580
you

1354
02:39:58,520 --> 02:40:00,580
you

1355
02:40:28,520 --> 02:40:30,580
you

1356
02:40:58,520 --> 02:41:00,580
you

1357
02:41:28,520 --> 02:41:30,580
you

1358
02:41:58,520 --> 02:42:00,580
you

1359
02:42:28,520 --> 02:42:30,580
you

1360
02:42:58,520 --> 02:43:00,580
you

1361
02:43:28,520 --> 02:43:30,580
you

1362
02:43:58,520 --> 02:44:00,580
you

1363
02:44:28,520 --> 02:44:30,580
you

1364
02:44:58,520 --> 02:45:00,580
you

1365
02:45:28,520 --> 02:45:30,580
you

1366
02:45:58,520 --> 02:46:00,580
you

1367
02:46:28,520 --> 02:46:30,580
you

1368
02:46:58,520 --> 02:47:00,580
you

1369
02:47:28,520 --> 02:47:30,580
you

1370
02:47:58,520 --> 02:48:00,580
you

1371
02:48:28,520 --> 02:48:30,580
you

1372
02:48:58,520 --> 02:49:00,580
you

1373
02:49:28,520 --> 02:49:30,580
you

1374
02:49:58,520 --> 02:50:00,580
you

1375
02:50:28,520 --> 02:50:30,580
you

1376
02:50:58,520 --> 02:51:00,580
you

1377
02:51:28,520 --> 02:51:30,580
you

1378
02:51:58,520 --> 02:52:00,580
you

1379
02:52:28,520 --> 02:52:30,580
you

1380
02:52:58,520 --> 02:53:00,580
you

1381
02:53:28,520 --> 02:53:30,580
you

1382
02:53:58,520 --> 02:54:00,580
you

1383
02:54:28,520 --> 02:54:30,580
you

1384
02:54:58,520 --> 02:55:00,580
you

1385
02:55:28,520 --> 02:55:30,580
you

1386
02:55:58,520 --> 02:56:00,580
you

1387
02:56:28,520 --> 02:56:30,580
you

1388
02:56:58,520 --> 02:57:00,580
you

1389
02:57:28,520 --> 02:57:30,580
you

1390
02:57:58,520 --> 02:58:00,580
you

1391
02:58:28,520 --> 02:58:30,580
you

1392
02:58:58,520 --> 02:59:00,580
you

1393
02:59:28,520 --> 02:59:30,580
you

1394
02:59:58,520 --> 03:00:00,580
you

1395
03:00:28,520 --> 03:00:30,580
you

1396
03:00:58,520 --> 03:01:00,580
you

1397
03:01:28,520 --> 03:01:30,580
you

1398
03:01:58,520 --> 03:02:00,580
you

1399
03:02:28,520 --> 03:02:30,580
you

1400
03:02:58,520 --> 03:03:00,580
you

1401
03:03:28,520 --> 03:03:30,580
you

1402
03:03:58,520 --> 03:04:00,580
you

1403
03:04:28,520 --> 03:04:30,580
you

1404
03:04:58,520 --> 03:05:00,580
you

1405
03:05:28,520 --> 03:05:30,580
you

1406
03:05:58,520 --> 03:06:00,580
you

1407
03:06:28,520 --> 03:06:30,580
you

1408
03:06:58,520 --> 03:07:00,580
you

1409
03:07:28,520 --> 03:07:30,580
you

1410
03:07:58,520 --> 03:08:00,580
you

1411
03:08:28,520 --> 03:08:30,580
you

1412
03:08:58,520 --> 03:09:00,580
you

1413
03:09:28,520 --> 03:09:30,580
you

1414
03:09:58,520 --> 03:10:00,580
you

1415
03:10:28,520 --> 03:10:30,580
you

1416
03:10:58,520 --> 03:11:00,580
you

1417
03:11:28,520 --> 03:11:30,580
you

1418
03:11:58,520 --> 03:12:00,580
you

1419
03:12:28,520 --> 03:12:30,580
you

1420
03:12:58,520 --> 03:13:00,580
you

1421
03:13:28,520 --> 03:13:30,580
you

1422
03:13:58,520 --> 03:14:00,580
you

1423
03:14:28,520 --> 03:14:30,580
you

1424
03:14:58,520 --> 03:15:00,580
you

1425
03:15:28,520 --> 03:15:30,580
you

1426
03:15:58,520 --> 03:16:00,580
you

1427
03:16:28,520 --> 03:16:30,580
you

1428
03:16:58,520 --> 03:17:00,580
you

1429
03:17:28,520 --> 03:17:30,580
you

1430
03:17:58,520 --> 03:18:00,580
you

1431
03:18:28,520 --> 03:18:30,580
you

1432
03:18:58,520 --> 03:19:00,580
you

1433
03:19:28,520 --> 03:19:30,580
you

1434
03:19:58,520 --> 03:20:00,580
you

1435
03:20:28,520 --> 03:20:30,580
you

1436
03:20:58,520 --> 03:21:25,840
Hello, we're back.

1437
03:21:25,840 --> 03:21:27,840
I hope you had a good lunch.

1438
03:21:29,480 --> 03:21:31,480
So, [name], what's coming up now?

1439
03:21:32,240 --> 03:21:41,200
Yeah, so, now we already got from the great CSC talk that we had before the launch,

1440
03:21:41,200 --> 03:21:47,400
we had a quick glimpse of what it actually looks like to run stuff on the HPC clusters.

1441
03:21:47,400 --> 03:21:52,800
We saw some magical terminal stuff happening there and that sort of stuff.

1442
03:21:52,800 --> 03:21:58,880
And here now we are going to be actually like, now hopefully you had a good lunch and you're

1443
03:21:58,880 --> 03:22:05,680
full of energy to type a lot of commands. So now we're actually going to go through various things

1444
03:22:07,040 --> 03:22:15,520
on how to run stuff in the cluster. And we will start working on the clusters itself.

1445
03:22:16,960 --> 03:22:22,160
So we had a glimpse of what it is to work in a cluster. Now we're going to be working

1446
03:22:22,160 --> 03:22:30,640
on a cluster and these are easily transferable, this information to the other sites. So there

1447
03:22:30,640 --> 03:22:35,600
might be some differences between sites, but in the notes, if you ask questions, if you

1448
03:22:35,600 --> 03:22:42,320
encounter any problems, just ask there. And all of these lessons that we are coming up to,

1449
03:22:42,320 --> 03:22:50,000
we will talk a bit about what's what, like theory, but we'll mainly focus on demos

1450
03:22:50,000 --> 03:22:55,120
demos that we have prepared. And then we'll have plenty of time for exercises where you

1451
03:22:55,120 --> 03:23:02,560
can do the same demos as well and do the same things that we do, plus some extra exercises

1452
03:23:02,560 --> 03:23:13,360
if you feel like it. And yeah, first, we'll look at the clusters. What are they? So was

1453
03:23:13,360 --> 03:23:15,600
that a good intro, [name]?

1454
03:23:15,600 --> 03:23:16,600
That's good.

1455
03:23:16,600 --> 03:23:17,600
Yeah.

1456
03:23:17,600 --> 03:23:23,520
So, we've already gone over clusters a bit, but remind us, so what's the important part

1457
03:23:23,520 --> 03:23:26,720
and what's going to make these exercises difficult?

1458
03:23:26,720 --> 03:23:33,680
Well, hopefully not difficult, but it might be a bit different than what you have been

1459
03:23:33,680 --> 03:23:34,880
used to.

1460
03:23:34,880 --> 03:23:44,320
So in the previous talk, we already had a bit of a mention regarding what is a cluster

1461
03:23:44,320 --> 03:23:49,680
And what is a cluster? Well, it's a collection of computers, basically,

1462
03:23:50,560 --> 03:23:58,560
like computers that have special jobs, and you can use them through this queue system.

1463
03:23:59,680 --> 03:24:07,280
And how it's organized, typically, a cluster is that it has some login node, a place where you

1464
03:24:07,280 --> 03:24:15,440
can log into the computer and then it has some data storage in case of Triton we have two file

1465
03:24:15,440 --> 03:24:22,400
systems we have this home for like small scripts and maybe your logging information and then we

1466
03:24:22,400 --> 03:24:30,160
have this scratch storage which is the main work storage and here is where you usually spend most

1467
03:24:30,160 --> 03:24:36,240
of your like you put all of your code here you put your data here and here's what stores your

1468
03:24:36,240 --> 03:24:42,880
results and stores your code. But when you want to run stuff, you actually run the code through

1469
03:24:42,880 --> 03:24:50,560
the queue system in these computers called nodes often. A node just means a computer.

1470
03:24:51,120 --> 03:24:58,800
So we have CPU nodes that have only CPUs and memory, of course. And then we have GPU nodes

1471
03:24:58,800 --> 03:25:06,160
that have CPUs and memory, but they also have GPU cards that you can reserve to run your code if it

1472
03:25:06,160 --> 03:25:08,160
can run on GPUs.

1473
03:25:08,160 --> 03:25:10,160
Yes.

1474
03:25:10,160 --> 03:25:12,160
Okay.

1475
03:25:12,160 --> 03:25:14,160
That's a good introduction.

1476
03:25:14,160 --> 03:25:16,160
So, once we're

1477
03:25:16,160 --> 03:25:18,160
actually, or was there something else?

1478
03:25:18,160 --> 03:25:20,160
Once we're actually using it,

1479
03:25:20,160 --> 03:25:22,160
what do we do?

1480
03:25:22,160 --> 03:25:24,160
I mean, I start with my own computer

1481
03:25:24,160 --> 03:25:26,160
and I guess I've developed

1482
03:25:26,160 --> 03:25:28,160
something there.

1483
03:25:28,160 --> 03:25:30,160
Yeah, how it usually

1484
03:25:30,160 --> 03:25:32,160
goes, like when you start working

1485
03:25:32,160 --> 03:25:34,160
in a cluster, it has a

1486
03:25:34,160 --> 03:25:44,400
workflow something akin to this setup here. So often you just like when you start a new project

1487
03:25:44,400 --> 03:25:49,040
you have this initial setup phase where you usually like have to set up everything to work

1488
03:25:49,040 --> 03:25:55,920
and then you run stuff in the cluster. So the initial setup is basically you go to the cluster

1489
03:25:55,920 --> 03:26:00,400
usually you immediately go to your work directory because that's the main place where you want to

1490
03:26:00,400 --> 03:26:07,760
store your stuff and when I say you go to the like we are going to be using terminals to to like

1491
03:26:07,760 --> 03:26:16,000
change directories you change the directory to your work directory and then usually you get your

1492
03:26:16,000 --> 03:26:22,240
code into the cluster you get the data that your code uses into the cluster somewhere in the work

1493
03:26:22,240 --> 03:26:29,440
directory and then you install the software needed by your code and this is like the initial setup

1494
03:26:29,440 --> 03:26:36,080
that you usually do. How long does this initial setup usually take?

1495
03:26:37,600 --> 03:26:43,440
Well, it depends on a project. If it's a code that you have already created and you have,

1496
03:26:43,440 --> 03:26:48,800
let's say, a version control, your code in version control, you can easily transfer the code over

1497
03:26:48,800 --> 03:26:56,400
there. And if you have your data already in order, you can usually quite easily transfer it there.

1498
03:26:56,400 --> 03:27:00,560
So that shouldn't take long. Sometimes the software installation, if the cluster has

1499
03:27:00,560 --> 03:27:07,280
all the software you need, no problem, then you just use that. Otherwise, you might need to do

1500
03:27:07,280 --> 03:27:12,080
some installations or ask help doing the installations for the code. And that might take

1501
03:27:12,880 --> 03:27:19,040
some time. But usually this is like, when we talk about a project, it's like a few days,

1502
03:27:19,040 --> 03:27:25,160
is maybe like a week if it doesn't go smoothly

1503
03:27:25,160 --> 03:27:26,120
kind of a thing.

1504
03:27:26,120 --> 03:27:33,120
But usually, you start it up from minutes to a few days,

1505
03:27:33,120 --> 03:27:33,720
maybe.

1506
03:27:33,720 --> 03:27:37,000
But the actual meet, yeah.

1507
03:27:37,000 --> 03:27:38,440
So basically, be prepared.

1508
03:27:38,440 --> 03:27:42,240
It's not instant to just get running, but reserve some time

1509
03:27:42,240 --> 03:27:50,960
and yeah like yeah it's like like if you if if you think about your computer is your home your

1510
03:27:50,960 --> 03:27:57,520
laptop is your home and you go abroad on a hotel you stay in a hotel you want to like first put

1511
03:27:57,520 --> 03:28:01,920
your stuff into the right place so maybe you go to like a cottage you have rented a cottage you

1512
03:28:01,920 --> 03:28:06,640
want to put your stuff in the right places and then you can start actually like seeing what are

1513
03:28:06,640 --> 03:28:11,920
the sites in your city or start hiking now that you have your base set up.

1514
03:28:13,040 --> 03:28:17,920
Yeah, okay. So in this little loop where you run something, you see if it works,

1515
03:28:17,920 --> 03:28:23,120
you edit code and you run again, how does that work? What are these options for?

1516
03:28:23,120 --> 03:28:30,240
So most of the time, usually when you do stuff in the cluster, you are in this sort of a loop where

1517
03:28:30,240 --> 03:28:36,080
you run something in the queue system, you usually submit it through the queue system,

1518
03:28:36,080 --> 03:28:41,200
and then you check the results, okay, whether good, and then you just keep going until you

1519
03:28:42,240 --> 03:28:48,560
reach, get the results that you want. And here, the edit your code basically carries a lot of

1520
03:28:48,560 --> 03:28:56,000
weight. So, because this is, and checking the results, it's like very, like self-evident,

1521
03:28:56,000 --> 03:29:02,960
but how do you actually do it? There's multiple ways you can do it. It involves what editor,

1522
03:29:02,960 --> 03:29:09,200
what way do you want to use the cluster? Here's some examples. I hope the text is not too small,

1523
03:29:09,200 --> 03:29:18,080
but examples that you could use. In this course, we will be mainly editing the code in a terminal

1524
03:29:18,720 --> 03:29:24,960
because that's available for everybody. What you can do is in a command line terminal,

1525
03:29:24,960 --> 03:29:32,640
you can open the files and you can edit the code directly. And then you can do modifications to the

1526
03:29:32,640 --> 03:29:40,960
files and then you can submit them to the queue. Some people want to edit the codes in their own

1527
03:29:40,960 --> 03:29:49,440
computers and then use something like Git to, like a version control system to push the stuff

1528
03:29:49,440 --> 03:29:54,960
into like let's say github or version alter file is kind of version control systems and then get it

1529
03:29:54,960 --> 03:30:03,120
into the cluster and use that to transfer like changes to your code some people like easier

1530
03:30:03,120 --> 03:30:09,120
option is usually to to get the file system available in your laptop so you can you can

1531
03:30:09,120 --> 03:30:14,960
basically mount so mounting means that you you basically make it available in your computer

1532
03:30:14,960 --> 03:30:19,220
the Triton file system or the cluster file system.

1533
03:30:19,220 --> 03:30:21,480
So you can do the edits with the editor,

1534
03:30:21,480 --> 03:30:23,480
whatever edit you want in your laptop,

1535
03:30:23,480 --> 03:30:28,480
and it will transfer all of the changes into the cluster.

1536
03:30:29,080 --> 03:30:31,440
Or you can use an editor

1537
03:30:31,440 --> 03:30:34,000
that remotely connects to the cluster.

1538
03:30:34,000 --> 03:30:37,760
So this might be like VS Code remote shell,

1539
03:30:37,760 --> 03:30:40,240
or it might be like you use the Jupyter

1540
03:30:40,240 --> 03:30:43,520
in the on-demand or something like that.

1541
03:30:43,520 --> 03:30:47,040
or you might use the virtual desktop through the on-demand.

1542
03:30:47,040 --> 03:30:50,720
But there's multiple ways you can do it.

1543
03:30:50,720 --> 03:30:55,280
And it's really important to pick one that suits your work style

1544
03:30:55,280 --> 03:31:00,080
because in the grand scheme of things of the workflow,

1545
03:31:01,280 --> 03:31:04,720
you are going to be spending most of your time over here in the loop.

1546
03:31:04,720 --> 03:31:12,560
So try to pick a style that makes it easiest to do the edits in the cluster itself

1547
03:31:12,560 --> 03:31:19,600
so that you don't have to constantly transfer stuff back and forth. It's easier to do the

1548
03:31:19,600 --> 03:31:26,640
things in the cluster itself. But okay, enough about the workflows. We should move forward

1549
03:31:26,640 --> 03:31:32,960
and look at an actual example. Yeah, so what's our example? What are we going to demonstrate?

1550
03:31:32,960 --> 03:31:40,960
Yeah. Go a bit back. So, let's, we need to get our code to the cluster.

1551
03:31:40,960 --> 03:31:48,960
Well, first, can you talk a little bit about what the example will be and what our overall plan for the day?

1552
03:31:48,960 --> 03:31:59,960
Yeah. So, the, yeah, I think the example is an example about the calculating these n-grams.

1553
03:31:59,960 --> 03:32:04,520
And it's stored in this examples repository that we have.

1554
03:32:04,520 --> 03:32:10,440
And maybe, [name], you can explain what are ngrams and what does the code do?

1555
03:32:11,800 --> 03:32:19,560
Yeah. So, what this example is... Okay, there's a cat that's trying to sit on keyboards and

1556
03:32:19,560 --> 03:32:28,520
stuff like that, so I can't type that well. Okay. So, in this example, we have books from

1557
03:32:28,520 --> 03:32:35,800
Project Gutenberg, which are open source book or no, it's public. It's digital copies of public

1558
03:32:35,800 --> 03:32:45,720
domain books from long ago. And with the books, we'll do some text analysis. So, the sample code

1559
03:32:45,720 --> 03:32:53,400
we have divides the books into words and then computes all the sequences of words. So, for

1560
03:32:53,400 --> 03:32:59,000
For example, there might be the house.

1561
03:32:59,000 --> 03:33:02,080
So how many occurrences do you have of the house,

1562
03:33:02,080 --> 03:33:06,080
or every pair of two words, or three words, or one words,

1563
03:33:06,080 --> 03:33:08,520
or whatever?

1564
03:33:08,520 --> 03:33:12,040
And this gives us sort of an interesting insight

1565
03:33:12,040 --> 03:33:13,760
to what the books are.

1566
03:33:13,760 --> 03:33:17,400
And well, people like doing text processing these days

1567
03:33:17,400 --> 03:33:22,280
because it's close to what language models are doing.

1568
03:33:22,280 --> 03:33:24,040
We're not anywhere near close to that,

1569
03:33:24,040 --> 03:33:27,320
but you can see the starting point there.

1570
03:33:27,320 --> 03:33:30,380
We have this code, it's called the n-grams example,

1571
03:33:30,380 --> 03:33:35,840
and we'll keep doing it through the whole rest of the day,

1572
03:33:35,840 --> 03:33:39,080
and keep developing it slowly over time.

1573
03:33:41,760 --> 03:33:46,120
Maybe we should start demoing,

1574
03:33:46,120 --> 03:33:49,560
how can you get the code in the cluster?

1575
03:33:49,560 --> 03:33:51,640
First things first, I have

1576
03:33:51,640 --> 03:33:53,760
Logged into the cluster over here.

1577
03:33:53,760 --> 03:33:57,000
Oh, and I guess we should say first,

1578
03:33:57,000 --> 03:33:59,440
are we going to do some demos and then we'll give

1579
03:33:59,440 --> 03:34:04,120
time for people to do the exercises? Is that?

1580
03:34:04,120 --> 03:34:10,960
Yeah. So you can focus on what we'll be typing here,

1581
03:34:10,960 --> 03:34:16,720
and then you can do it in peace afterwards.

1582
03:34:16,720 --> 03:34:20,900
Yeah. So I'd recommend focus on watching what we're doing,

1583
03:34:20,900 --> 03:34:25,340
And then later, focus on typing and doing it yourself.

1584
03:34:25,340 --> 03:34:28,380
Because trying to follow and type along at the same time

1585
03:34:28,380 --> 03:34:29,700
will be hard.

1586
03:34:29,700 --> 03:34:31,260
Also, for what we're doing, we'll

1587
03:34:31,260 --> 03:34:36,140
demonstrate something that works on the Triton cluster.

1588
03:34:36,140 --> 03:34:40,140
But you'll have to adapt it for other clusters.

1589
03:34:40,140 --> 03:34:45,620
Because every cluster is different.

1590
03:34:45,620 --> 03:34:47,500
It may have different storage locations,

1591
03:34:47,500 --> 03:34:48,980
different options you need.

1592
03:34:48,980 --> 03:34:50,980
So ask in the notes in whatever.

1593
03:34:50,980 --> 03:34:53,980
And if you can't do it on whatever cluster you're on,

1594
03:34:53,980 --> 03:34:54,580
that's OK.

1595
03:34:54,580 --> 03:34:57,420
Just if it goes completely off the rails,

1596
03:34:57,420 --> 03:35:02,060
then just stop, switch to watching mode, and just watch.

1597
03:35:02,060 --> 03:35:05,740
And then take the time later to figure out what went wrong.

1598
03:35:05,740 --> 03:35:07,980
Remember, all the materials in the videos

1599
03:35:07,980 --> 03:35:10,980
will be available for later.

1600
03:35:10,980 --> 03:35:12,420
OK, so copying the code.

1601
03:35:12,420 --> 03:35:23,420
Yeah, so the code is currently in a version control repository in, I guess it's in GitHub.

1602
03:35:23,420 --> 03:35:27,380
So that, which means anyone can clone it with the git command.

1603
03:35:27,380 --> 03:35:34,140
And hopefully every cluster has git installed by default without any extra stuff.

1604
03:35:34,140 --> 03:35:35,140
Yeah.

1605
03:35:35,140 --> 03:35:38,340
And now we are, I have a terminal open here.

1606
03:35:38,340 --> 03:35:43,340
I have taken an SSH connection to Triton beforehand,

1607
03:35:43,500 --> 03:35:45,620
so I won't be showing that.

1608
03:35:47,140 --> 03:35:49,300
All of the commands I'm going to be typing

1609
03:35:49,300 --> 03:35:51,620
are going to be shown here at the bottom,

1610
03:35:51,620 --> 03:35:53,860
so you can see the history of the commands.

1611
03:35:53,860 --> 03:35:55,860
And that's, I've set it up,

1612
03:35:55,860 --> 03:35:57,580
so I don't want to break it

1613
03:35:57,580 --> 03:36:00,060
by doing another connection to Triton.

1614
03:36:00,060 --> 03:36:01,660
But first things first,

1615
03:36:01,660 --> 03:36:03,540
what we usually want to do in a cluster

1616
03:36:03,540 --> 03:36:06,100
is go to the working directory.

1617
03:36:06,100 --> 03:36:10,420
So and this is the first place that clusters may be different.

1618
03:36:10,420 --> 03:36:12,580
So on Triton, we have this variable

1619
03:36:12,580 --> 03:36:15,020
called work directory, which will

1620
03:36:15,020 --> 03:36:18,100
lead to our Scratch directory, which we'll actually

1621
03:36:18,100 --> 03:36:19,140
talk about shortly.

1622
03:36:22,220 --> 03:36:24,700
And other clusters, every cluster probably

1623
03:36:24,700 --> 03:36:28,660
has a variable called home, which is a home directory, which

1624
03:36:28,660 --> 03:36:30,380
works there.

1625
03:36:30,380 --> 03:36:32,020
Actually, should we just use home

1626
03:36:32,020 --> 03:36:35,580
because that works for everyone?

1627
03:36:35,580 --> 03:36:40,460
like if you don't have a working directory or if you don't know what the cluster working directory

1628
03:36:40,460 --> 03:36:45,260
is you can use the home directory but I would recommend using the work directory because it's

1629
03:36:45,260 --> 03:36:51,980
like it's good to get the muscle memory in there to go to your cluster's work directory always

1630
03:36:51,980 --> 03:36:58,700
because usually you want to do everything there anyway so it's good to do that but if you don't

1631
03:36:58,700 --> 03:37:03,420
know what the work directory is, you can use the home directory, of course.

1632
03:37:05,020 --> 03:37:11,580
And you can use the command pwd to print working directory. So, which directory you are currently

1633
03:37:11,580 --> 03:37:17,260
in or which directory the terminal is in. So, in the terminal, you are basically always in some

1634
03:37:17,260 --> 03:37:24,460
directory and all the commands that you're going to be running are running relative to that

1635
03:37:24,460 --> 03:37:32,940
directory so if like when i did the pwd it shows now that i'm here and the cd is changed directory

1636
03:37:32,940 --> 03:37:44,620
so you can change directory to a new directory yes okay so we've changed there and next up is a

1637
03:37:44,620 --> 03:37:54,460
command a git clone command which should work for everyone.

1638
03:37:55,980 --> 03:38:04,780
` git clone https://github.com/AaltoSciComp/hpc-examples.git` yes and if we do this now if [name] runs the `ls` command

1639
03:38:05,900 --> 03:38:13,180
um we see there's a bunch of directories here which are from previous work but now we see

1640
03:38:13,180 --> 03:38:20,620
hpc-examples. And we can change to that directory with the command `cd`. So right now we're not

1641
03:38:20,620 --> 03:38:26,140
going through the details of what all these shell commands means. The first time we use it we'll try

1642
03:38:26,140 --> 03:38:33,100
to say what it is but this is not a shell course. We've listed some shell courses and materials

1643
03:38:33,100 --> 03:38:40,540
as part of the preparation for the course and you can go read there or later. Yeah ls is a list

1644
03:38:40,540 --> 03:38:44,700
So list files in the directory.

1645
03:38:44,700 --> 03:38:47,180
So you can use that to check what files are available.

1646
03:38:49,020 --> 03:38:49,740
Okay.

1647
03:38:49,740 --> 03:38:51,100
And now we've got the code here.

1648
03:38:51,100 --> 03:38:52,540
So now we need to get the data.

1649
03:38:53,900 --> 03:38:54,300
Yeah.

1650
03:38:54,300 --> 03:38:55,820
So how do we do that?

1651
03:38:57,500 --> 03:39:01,260
So for that, let's try for this case,

1652
03:39:02,380 --> 03:39:06,940
we'll try using on demand to do that.

1653
03:39:06,940 --> 03:39:07,440
Okay.

1654
03:39:08,220 --> 03:39:10,380
So we're going to, yeah.

1655
03:39:10,540 --> 03:39:15,420
we're going to demonstrate a somewhat realistic way of doing things so that we're pretending the

1656
03:39:15,420 --> 03:39:21,100
data is not available online. So first you download the data to your computer and then

1657
03:39:21,100 --> 03:39:28,540
we'll upload it via the on-demand service to the cluster. So basically using a web interface.

1658
03:39:35,740 --> 03:39:40,380
There's many different ways to copy data. We're trying to give a couple options that will work

1659
03:39:40,380 --> 03:39:43,820
for most people without problems.

1660
03:39:43,820 --> 03:39:53,460
So I will copy it by, I'll first download it into my own computer by going to the link.

1661
03:39:53,460 --> 03:40:00,100
We'll post a link to the notes for the data and I'll store it into my computer's temp

1662
03:40:00,100 --> 03:40:03,300
folder for now.

1663
03:40:03,300 --> 03:40:05,880
And now it has been downloaded there.

1664
03:40:05,880 --> 03:40:10,920
It's quite a small file, so it's already downloaded.

1665
03:40:10,920 --> 03:40:24,840
So next step is to log into the on-demand server that we are using.

1666
03:40:24,840 --> 03:40:30,760
You can also use these to get the terminal if you don't, like with the Triton shell access,

1667
03:40:30,760 --> 03:40:34,120
if you don't want to take an SSH connection

1668
03:40:34,120 --> 03:40:38,080
or if you have problems with the SSH connection.

1669
03:40:38,080 --> 03:40:42,520
But let me make this a bit.

1670
03:40:42,520 --> 03:40:49,040
So yeah, so on the top bar, there's files over here.

1671
03:40:49,040 --> 03:40:52,760
And over here, I can go to work directory.

1672
03:40:52,760 --> 03:40:55,000
OK, got it, yeah.

1673
03:40:55,000 --> 03:40:58,080
And now what we see here corresponds

1674
03:40:58,080 --> 03:41:04,000
to what we saw in the terminal.

1675
03:41:04,000 --> 03:41:04,640
Yes.

1676
03:41:04,640 --> 03:41:06,600
So two views of the same thing.

1677
03:41:06,600 --> 03:41:09,280
Let's create a new directory for that so that we don't

1678
03:41:09,280 --> 03:41:13,360
immediately lose track of where the files will be stored.

1679
03:41:13,360 --> 03:41:15,720
So let's create a new directory.

1680
03:41:15,720 --> 03:41:21,160
So `gutenberg-fiction` is what the examples say.

1681
03:41:21,160 --> 03:41:21,680
Okay.

1682
03:41:21,680 --> 03:41:25,600
Yeah. So now I get a new folder over here,

1683
03:41:25,600 --> 03:41:30,200
And if I go over here, I can now see

1684
03:41:30,200 --> 03:41:32,840
that there's nothing over here in the file system.

1685
03:41:32,840 --> 03:41:35,920
I can upload a file.

1686
03:41:35,920 --> 03:41:37,760
Yes.

1687
03:41:37,760 --> 03:41:40,280
Browse files.

1688
03:41:40,280 --> 03:41:41,520
Here's the Gutenberg.

1689
03:41:41,520 --> 03:41:44,440
Gutenberg Fiction.

1690
03:41:44,440 --> 03:41:47,080
And let's upload it.

1691
03:41:47,080 --> 03:41:50,120
Upload, OK.

1692
03:41:50,120 --> 03:41:53,240
Takes a little bit longer.

1693
03:41:53,240 --> 03:41:55,200
And now should we go back to the terminal

1694
03:41:55,200 --> 03:41:59,200
and see if we can see the new data visible there.

1695
03:41:59,200 --> 03:42:06,280
So I'm currently in the SBC examples folder.

1696
03:42:06,280 --> 03:42:08,540
So if I want to go one folder back,

1697
03:42:08,540 --> 03:42:10,560
I can type `cd ..`

1698
03:42:10,560 --> 03:42:14,880
So I will be then in the work directory,

1699
03:42:14,880 --> 03:42:18,220
and if we go to the gutenberg-fiction folder,

1700
03:42:18,220 --> 03:42:21,360
I can see that now the file is there.

1701
03:42:21,360 --> 03:42:28,720
I'll navigate back into the HPC examples, because that's where we want to be.

1702
03:42:28,720 --> 03:42:33,720
You can usually use a tab to autocomplete, like the tab character, you can use that to

1703
03:42:33,720 --> 03:42:38,280
autocomplete, like if you have started writing something, if you see that I'm typing something

1704
03:42:38,280 --> 03:42:43,400
and something appears, it's just that I'm so used to pressing the autocomplete, I forget

1705
03:42:43,400 --> 03:42:44,960
that I use it.

1706
03:42:44,960 --> 03:42:47,960
So don't worry about it.

1707
03:42:47,960 --> 03:42:52,600
So there, we've transferred the data.

1708
03:42:52,600 --> 03:42:55,760
Should we do an initial test to see if the code runs?

1709
03:42:55,760 --> 03:42:57,120
Yes.

1710
03:42:57,120 --> 03:42:57,400
Yeah.

1711
03:42:57,400 --> 03:42:58,440
OK.

1712
03:42:58,440 --> 03:43:00,720
So which folder is it?

1713
03:43:00,720 --> 03:43:02,720
We can stay in this folder.

1714
03:43:02,720 --> 03:43:11,680
So if you do Python, and then space, then ngrams.

1715
03:43:11,680 --> 03:43:14,040
Yes, Python 3 ngrams.

1716
03:43:14,040 --> 03:43:17,720
It is count.py.

1717
03:43:17,720 --> 03:43:21,160
Actually, you can first run it with the dash dash help option.

1718
03:43:21,160 --> 03:43:24,940
This is something that each program has to do itself.

1719
03:43:24,940 --> 03:43:28,440
But when a program has a dash dash help option,

1720
03:43:28,440 --> 03:43:35,720
it usually tells you a bit about how you use the program.

1721
03:43:35,720 --> 03:43:37,720
It can really be helpful when

1722
03:43:37,720 --> 03:43:40,760
figuring out some new command line stuff.

1723
03:43:40,760 --> 03:43:42,840
Most commands like if you run,

1724
03:43:42,840 --> 03:43:44,460
let's say `cd --help`,

1725
03:43:44,460 --> 03:43:52,140
it has a help manual that shows what it does. Most of the commands in Linux,

1726
03:43:53,260 --> 03:44:01,500
at least system commands, they have this `--help` included. So let's check the ngrams.

1727
03:44:02,460 --> 03:44:09,660
So I happen to know that we need the one input argument, which is the input text file,

1728
03:44:09,660 --> 03:44:13,140
But it can also be an input zip file.

1729
03:44:13,140 --> 03:44:19,420
So we will do Python 3 and grams count.py.

1730
03:44:19,420 --> 03:44:21,420
And now we're going to refer to the data that's

1731
03:44:21,420 --> 03:44:22,580
in a different directory.

1732
03:44:22,580 --> 03:44:25,740
So we start with that dot dot, which means

1733
03:44:25,740 --> 03:44:28,220
go up to the parent directory.

1734
03:44:28,220 --> 03:44:32,120
And then gutenberg-fiction as the directory.

1735
03:44:35,260 --> 03:44:39,300
And then the zip file name.

1736
03:44:39,300 --> 03:44:46,340
Yeah. Yes. So now should I run it? Yeah, let's push enter and see what happens.

1737
03:44:47,780 --> 03:44:54,980
So this should analyze 100 books in there and print out all the word frequencies.

1738
03:44:57,700 --> 03:45:02,020
Sorry, cats is getting hungry and starting to look for cables to eat.

1739
03:45:03,940 --> 03:45:08,100
It's a good time to have the exercise in a second so that you can feed the cat.

1740
03:45:09,300 --> 03:45:09,800
Yeah.

1741
03:45:09,800 --> 03:45:11,040
OK, well, it finished.

1742
03:45:11,040 --> 03:45:14,520
So what do we see?

1743
03:45:14,520 --> 03:45:17,920
So by default, it prints out just word frequencies,

1744
03:45:17,920 --> 03:45:20,920
so word one grams.

1745
03:45:20,920 --> 03:45:27,840
And then it also prints out just letters.

1746
03:45:27,840 --> 03:45:30,080
So let's modify how it runs.

1747
03:45:30,080 --> 03:45:33,520
Can we run it again, but with a dash dash words option?

1748
03:45:33,520 --> 03:45:34,080
Yeah.

1749
03:45:34,080 --> 03:45:37,600
I press the up arrow on my keyboard

1750
03:45:37,600 --> 03:45:39,000
to get the previous command.

1751
03:45:39,000 --> 03:45:43,640
is very useful for if you want to do modifications or something.

1752
03:45:43,640 --> 03:45:47,720
You can press up arrow to get the previous command.

1753
03:45:47,720 --> 03:45:49,640
And you're going to use the left and right arrows

1754
03:45:49,640 --> 03:45:54,280
to go scroll in the command itself.

1755
03:45:54,280 --> 03:46:02,120
So we can write something in the middle of the place.

1756
03:46:02,120 --> 03:46:02,920
In the middle.

1757
03:46:02,920 --> 03:46:03,400
Yeah.

1758
03:46:03,400 --> 03:46:03,720
Yeah.

1759
03:46:03,720 --> 03:46:04,680
We're modifying.

1760
03:46:04,680 --> 03:46:05,000
Yes.

1761
03:46:05,000 --> 03:46:05,480
OK.

1762
03:46:05,480 --> 03:46:09,840
Yeah, so I hope it's `--words`.

1763
03:46:09,840 --> 03:46:12,000
That doesn't, well.

1764
03:46:13,840 --> 03:46:14,680
Yeah, okay.

1765
03:46:14,680 --> 03:46:16,360
At least seemed to work.

1766
03:46:16,360 --> 03:46:21,360
Yeah, and I guess while we're waiting now,

1767
03:46:21,680 --> 03:46:22,980
so what will come next?

1768
03:46:22,980 --> 03:46:27,260
This will be an example for you.

1769
03:46:30,400 --> 03:46:32,680
So it looked pretty simple when we did it,

1770
03:46:32,680 --> 03:46:42,120
of course, lots of things can go wrong for you. For example, how you copy data to your cluster.

1771
03:46:42,120 --> 03:46:49,480
If you don't have on-demand, you need to copy it either by the command line or you can use this

1772
03:46:49,480 --> 03:46:58,200
wget command in order to download file from the internet by the command line.

1773
03:46:58,200 --> 03:47:05,640
So it's like web get, get something from the internet, download some file.

1774
03:47:05,640 --> 03:47:10,240
You need to figure out where to store the data, whether it's in your home directory

1775
03:47:10,240 --> 03:47:15,480
or some other scratch or work directory that's available on your cluster.

1776
03:47:15,480 --> 03:47:18,180
You need to be connected.

1777
03:47:18,180 --> 03:47:22,500
So different things can go wrong here.

1778
03:47:22,500 --> 03:47:24,960
But let's not focus on what can go wrong.

1779
03:47:24,960 --> 03:47:27,700
Let's focus on what you're able to do.

1780
03:47:27,700 --> 03:47:32,500
So what if you, like throughout this exercise, we have basically completed the initial setup

1781
03:47:32,500 --> 03:47:36,340
because this code doesn't require any installation or specific installation.

1782
03:47:36,340 --> 03:47:40,920
We have basically completed the initial setup of our program and now we can start working

1783
03:47:40,920 --> 03:47:42,220
in the cluster.

1784
03:47:42,220 --> 03:47:46,900
So in the exercise, like basically we now, this is the thing you usually need to do when

1785
03:47:46,900 --> 03:47:49,260
you do any initial setup.

1786
03:47:49,260 --> 03:47:56,580
You get usually a code repository into the cluster and then you move your data into the

1787
03:47:56,580 --> 03:47:57,580
cluster.

1788
03:47:57,580 --> 03:48:03,580
you get that done, the vast majority of stuff ends there,

1789
03:48:03,580 --> 03:48:06,020
and then you can start running.

1790
03:48:06,020 --> 03:48:07,220
Yeah.

1791
03:48:07,220 --> 03:48:09,580
And this is definitely an artificial example

1792
03:48:09,580 --> 03:48:11,660
compared to usual work, because it's

1793
03:48:11,660 --> 03:48:16,140
designed to have no dependencies and work only by Python.

1794
03:48:16,140 --> 03:48:20,420
And the data file is nice and small.

1795
03:48:20,420 --> 03:48:23,260
But anyway, we're about to go now.

1796
03:48:23,260 --> 03:48:31,340
I've put the exercise here in the notes so you can see try to repeat what we just did

1797
03:48:32,220 --> 03:48:41,820
that kind of stuff. If you have problems, ask questions down here and don't worry,

1798
03:48:41,820 --> 03:48:48,620
we expect there to be plenty of problems. We will give some time. You can also report

1799
03:48:54,220 --> 03:48:55,980
Oh, why is this not updating?

1800
03:48:58,540 --> 03:49:02,860
Oh, I'm writing in the wrong place. Many windows open.

1801
03:49:06,140 --> 03:49:06,640
Done.

1802
03:49:10,540 --> 03:49:14,780
And then comment on the problems you have down below, and we'll try to help you.

1803
03:49:15,340 --> 03:49:20,380
If you're in Finland, you can join the Zoom we have and get interactive help.

1804
03:49:23,260 --> 03:49:25,020
Is now when we wish people good luck?

1805
03:49:27,020 --> 03:49:27,260
Yeah.

1806
03:49:27,260 --> 03:49:30,780
Is now when we apologize for needing luck to get it to work?

1807
03:49:33,580 --> 03:49:42,460
I think this is the kind of problem that it's annoying first, and it's annoying because of

1808
03:49:42,460 --> 03:49:51,580
historical reasons and lots of stuff. But once you get it sorted, then it quickly becomes a

1809
03:49:51,580 --> 03:49:59,100
row thing that you do often. Yeah. Yeah. And there's already one person saying it's too easy.

1810
03:49:59,820 --> 03:50:07,100
In that case, if you look at the different links from the schedule, there's a lot of more advanced

1811
03:50:07,100 --> 03:50:13,740
stuff to try that lets you really see a little bit deeper into things here. So I'd say do that,

1812
03:50:13,740 --> 03:50:19,660
scroll down to the exercises and try that.

1813
03:50:19,660 --> 03:50:25,100
And in the boat, just add an O character there,

1814
03:50:25,100 --> 03:50:28,420
because then there's less risk of people

1815
03:50:28,420 --> 03:50:32,940
adding counting at the same time and doing this kind of like,

1816
03:50:32,940 --> 03:50:34,420
if you ever played the game where

1817
03:50:34,420 --> 03:50:36,420
you need to count up to a certain number,

1818
03:50:36,420 --> 03:50:37,540
you know how hard it is.

1819
03:50:37,540 --> 03:50:40,220
So it's easier to just add an O there.

1820
03:50:40,220 --> 03:50:42,700
So yes.

1821
03:50:42,700 --> 03:50:45,540
So let's set up the projects.

1822
03:50:45,540 --> 03:50:50,820
And are there any problems that you have into the chat?

1823
03:50:50,820 --> 03:50:52,180
We'll try to answer them.

1824
03:50:52,180 --> 03:50:52,980
So yeah.

1825
03:50:52,980 --> 03:50:56,700
How long should we give?

1826
03:50:56,700 --> 03:51:00,300
I'd say 15 minutes.

1827
03:51:00,300 --> 03:51:01,100
Let's say 15.

1828
03:51:01,100 --> 03:51:02,020
OK.

1829
03:51:02,020 --> 03:51:03,140
Yeah.

1830
03:51:03,140 --> 03:51:04,140
OK.

1831
03:51:04,140 --> 03:51:06,540
Great.

1832
03:51:06,540 --> 03:51:07,300
Good luck.

1833
03:51:07,300 --> 03:51:08,940
And see you soon.

1834
03:51:08,940 --> 03:51:09,940
Bye.

1835
03:51:09,940 --> 03:51:10,440
Bye.

1836
03:51:39,940 --> 03:51:42,000
you

1837
03:52:09,940 --> 03:52:12,000
you

1838
03:52:39,940 --> 03:52:42,000
you

1839
03:53:09,940 --> 03:53:12,000
you

1840
03:53:39,940 --> 03:53:42,000
you

1841
03:54:09,940 --> 03:54:12,000
you

1842
03:54:39,940 --> 03:54:42,000
you

1843
03:55:09,940 --> 03:55:12,000
you

1844
03:55:39,940 --> 03:55:42,000
you

1845
03:56:09,940 --> 03:56:12,000
you

1846
03:56:39,940 --> 03:56:42,000
you

1847
03:57:09,940 --> 03:57:12,000
you

1848
03:57:39,940 --> 03:57:42,000
you

1849
03:58:09,940 --> 03:58:12,000
you

1850
03:58:39,940 --> 03:58:42,000
you

1851
03:59:09,940 --> 03:59:12,000
you

1852
03:59:39,940 --> 03:59:42,000
you

1853
04:00:09,940 --> 04:00:12,000
you

1854
04:00:39,940 --> 04:00:42,000
you

1855
04:01:09,940 --> 04:01:12,000
you

1856
04:01:39,940 --> 04:01:42,000
you

1857
04:02:09,940 --> 04:02:12,000
you

1858
04:02:39,940 --> 04:02:42,000
you

1859
04:03:09,940 --> 04:03:12,000
you

1860
04:03:39,940 --> 04:03:42,000
you

1861
04:04:09,940 --> 04:04:12,000
you

1862
04:04:39,940 --> 04:04:42,000
you

1863
04:05:09,940 --> 04:05:12,000
you

1864
04:05:39,940 --> 04:06:09,540
Okay, hello, welcome back.

1865
04:06:09,540 --> 04:06:15,540
And from looking at the notes here,

1866
04:06:15,540 --> 04:06:19,100
it seems things went pretty well.

1867
04:06:19,100 --> 04:06:23,140
Y'all actually did really well.

1868
04:06:23,140 --> 04:06:24,820
You make me proud.

1869
04:06:24,820 --> 04:06:32,620
So yeah, really what we do now is probably

1870
04:06:32,620 --> 04:06:34,660
one of the hardest things we've done,

1871
04:06:34,660 --> 04:06:37,140
or we'll do the whole course.

1872
04:06:37,140 --> 04:06:40,400
This idea of having all these abstract folders

1873
04:06:40,400 --> 04:06:42,400
on some other remote system,

1874
04:06:42,400 --> 04:06:44,760
needing to keep track of what is where

1875
04:06:44,760 --> 04:06:47,440
and where all the data goes,

1876
04:06:47,440 --> 04:06:52,440
is quite a hard thing.

1877
04:06:53,640 --> 04:06:57,520
Yeah, usually like if it's like the cluster is beat up,

1878
04:06:57,520 --> 04:06:59,720
like it's like your computer,

1879
04:06:59,720 --> 04:07:03,320
but it's like, again, it's like different.

1880
04:07:03,320 --> 04:07:05,360
And so stuff is in different places

1881
04:07:05,360 --> 04:07:11,920
especially if you're used to using graphical interfaces and stuff, the terminal can become

1882
04:07:12,560 --> 04:07:18,400
a seem daunting to do. But basically, it's the same kind of thing that you would do in your

1883
04:07:18,400 --> 04:07:23,680
normal operating system, like opening a file browser or something and going to a folder and

1884
04:07:23,680 --> 04:07:30,240
opening a file. But all of that is done via the command line, because then you can program

1885
04:07:30,240 --> 04:07:36,000
basically, and you can tell the computer exactly what you want to do. And that's why the command

1886
04:07:36,000 --> 04:07:41,520
line is so popular in the HPC clusters, because you need to be able to tell the computer what sort

1887
04:07:41,520 --> 04:07:47,680
of operations, like file system operations, you need to do, like go to this folder, move this file

1888
04:07:47,680 --> 04:07:55,920
around, and that sort of stuff. And this is often the most annoying part when it comes to using the

1889
04:07:55,920 --> 04:08:00,320
the clusters, like the transferring files and managing this kind of like, especially if you have

1890
04:08:00,320 --> 04:08:06,880
like copy of your code in your computer and then you want it to be in sync with the code in the

1891
04:08:06,880 --> 04:08:14,480
cluster. So yeah, like the getting accustomed to the like, okay, there's another place that has

1892
04:08:14,480 --> 04:08:22,400
this only, I cannot see, but I can only ask it like it's like, you can only use the terminal

1893
04:08:22,400 --> 04:08:29,520
interface. Often you only use the terminal interface to interact with it. It can be a

1894
04:08:29,520 --> 04:08:37,600
bit abstract, but once you get a hold of it, it becomes easier. [name], if you want to share

1895
04:08:37,600 --> 04:08:45,760
my screen for a second, I might show a refresher of a few of the commands that we did.

1896
04:08:45,760 --> 04:08:55,320
So, when it comes to these kind of terminal files, it looks like we just have a blank

1897
04:08:55,320 --> 04:09:00,960
screen over here, but it's always in a folder.

1898
04:09:00,960 --> 04:09:08,200
We are always in some folder, and the folders are organized in Linux.

1899
04:09:08,200 --> 04:09:12,640
They are organized with these slashes, and everything starts at a root.

1900
04:09:12,640 --> 04:09:19,560
And then usually you have, let's say, in our case, we have the work directory is like slash

1901
04:09:19,560 --> 04:09:22,600
scratch work and whatever.

1902
04:09:22,600 --> 04:09:28,600
And this is the so-called absolute path to the folder.

1903
04:09:28,600 --> 04:09:35,820
So if we have the HPC examples over here, we can see here's the folder.

1904
04:09:35,820 --> 04:09:44,140
And if I run pwd, I can see that this is my current directory, and I'm currently here.

1905
04:09:44,140 --> 04:09:47,260
And of course, you can also have relative parts.

1906
04:09:47,260 --> 04:09:50,020
So you can have parts relative to this folder.

1907
04:09:50,020 --> 04:09:58,900
So you can, let's say, have the dash dot dot meaning folder above me, one folder above,

1908
04:09:58,900 --> 04:10:00,740
and then gutenberg-fiction.

1909
04:10:00,740 --> 04:10:07,500
So it's basically like you have this, like every folder is separated by these forward

1910
04:10:07,500 --> 04:10:12,940
slashes and then like you have this hierarchy of folders inside of it.

1911
04:10:12,940 --> 04:10:19,100
So getting accustomed to navigating this kind of like maze of folders can be a bit haunting

1912
04:10:19,100 --> 04:10:25,140
at first, but it's always good to remember that PWD shows what folder you are in.

1913
04:10:25,140 --> 04:10:30,480
You can use ls to list whatever files you have in that current directory.

1914
04:10:30,480 --> 04:10:38,720
if you want, you can always use CD to go back into your home directory. So you know where you

1915
04:10:38,720 --> 04:10:44,880
start. If you run just CD without any commands, and you can give it the whole path if you want

1916
04:10:44,880 --> 04:10:54,400
to go back into some directory, you can get CD apart and then you can go back into directory.

1917
04:10:54,400 --> 04:11:00,160
And this is what it's first daunting, but once you get accustomed and you know that now your

1918
04:11:00,160 --> 04:11:05,680
files are in this kind of folder structure,

1919
04:11:05,680 --> 04:11:07,280
it becomes easier all the time.

1920
04:11:12,360 --> 04:11:14,080
Yeah.

1921
04:11:14,080 --> 04:11:19,160
Did you talk about what the `..` means, to go up one directory?

1922
04:11:19,160 --> 04:11:22,640
Yes, and you can chain it as well [../../.. etc].

1923
04:11:22,640 --> 04:11:25,280
You can have dot dot go one level up,

1924
04:11:25,280 --> 04:11:28,160
and then you have go two levels up, and so forth.

1925
04:11:28,160 --> 04:11:35,000
And you're going to go up and up and up until you reach the end.

1926
04:11:35,000 --> 04:11:37,600
But yeah.

1927
04:11:37,600 --> 04:11:42,240
So one other thing I saw in the notes several times

1928
04:11:42,240 --> 04:11:44,280
was about the zip files.

1929
04:11:44,280 --> 04:11:45,800
So this is sort of interesting.

1930
04:11:45,800 --> 04:11:48,280
So we've written the program where

1931
04:11:48,280 --> 04:11:51,320
it can analyze books directly from the zip file

1932
04:11:51,320 --> 04:11:54,800
without you needing to uncompress it yourself.

1933
04:11:54,800 --> 04:11:57,760
So this was an interesting choice of ours.

1934
04:11:57,760 --> 04:12:06,160
it meant that it didn't take up as many files, like it's more efficient in some ways.

1935
04:12:09,360 --> 04:12:15,600
Yeah, but it's just an interesting design choice. Also, there was a good question about where the

1936
04:12:15,600 --> 04:12:24,240
data was saved. And for that, well, I don't know, I can't find it in here.

1937
04:12:24,240 --> 04:12:27,080
Yeah, here it is. Where is it saved?

1938
04:12:27,080 --> 04:12:28,920
In this case, right now,

1939
04:12:28,920 --> 04:12:31,720
the program is just printing it out

1940
04:12:31,720 --> 04:12:36,540
from the terminal and not saving it anywhere.

1941
04:12:36,540 --> 04:12:38,900
There's an option to save the output somewhere,

1942
04:12:38,900 --> 04:12:42,460
which actually we will start using later on.

1943
04:12:42,460 --> 04:12:47,480
Were there any other very important things we should talk about?

1944
04:12:47,480 --> 04:12:57,760
I will quickly mention that all of the commands in Linux, they have this syntax, this form

1945
04:12:57,760 --> 04:12:59,660
that you can follow.

1946
04:12:59,660 --> 04:13:03,560
That first command is the actual name of the command that will be executed.

1947
04:13:03,560 --> 04:13:08,940
So let's say the Python 3 will be the command that we executed.

1948
04:13:08,940 --> 04:13:13,380
And whatever you give after that are so-called arguments.

1949
04:13:13,380 --> 04:13:15,140
You can give arguments to the command.

1950
04:13:15,140 --> 04:13:18,980
Let's say if I have the count at pi, I can give it as an argument.

1951
04:13:20,340 --> 04:13:24,180
I will run the command Python 3, and this is called an argument.

1952
04:13:24,980 --> 04:13:30,260
It's usually called a positional argument if it doesn't have anything to highlight it.

1953
04:13:32,020 --> 04:13:34,180
It's the next one in the line.

1954
04:13:34,180 --> 04:13:35,700
And then you can give more arguments.

1955
04:13:37,860 --> 04:13:42,900
For example, we gave the name of the input file, the zip file, that we want to process.

1956
04:13:42,900 --> 04:13:44,180
That's another argument.

1957
04:13:44,180 --> 04:14:00,180
And you can also have these dash-dash arguments or sometimes with single-dash arguments that are like special toggles or options that toggle different features of the program.

1958
04:14:00,180 --> 04:14:02,180
So, for example, the words was this kind of thing.

1959
04:14:02,180 --> 04:14:07,180
And all of the commands usually are written in such syntax.

1960
04:14:07,180 --> 04:14:14,620
Of course, there's always exceptions to the rule, but all of the operating system commands,

1961
04:14:14,620 --> 04:14:16,140
they follow this syntax.

1962
04:14:16,140 --> 04:14:18,980
It's like back from the Unix days.

1963
04:14:18,980 --> 04:14:22,340
It's very old syntax.

1964
04:14:22,340 --> 04:14:27,660
Once you figure this out, you know that and use the `--help`, for example, it will

1965
04:14:27,660 --> 04:14:30,980
make everything easier in the terminal.

1966
04:14:37,180 --> 04:14:44,340
There's several questions of similar things up above.

1967
04:14:44,340 --> 04:14:48,060
So when you're running it from the command line,

1968
04:14:48,060 --> 04:14:49,700
or really anytime you run things,

1969
04:14:49,700 --> 04:14:52,860
but things are really

1970
04:14:52,860 --> 04:14:56,620
picky about how you give the paths and what you use.

1971
04:14:56,620 --> 04:15:01,360
So for example, if someone gives the path to a directory,

1972
04:15:01,360 --> 04:15:05,400
then it expects a file that doesn't work.

1973
04:15:05,400 --> 04:15:15,720
In this case, I think the problem is this person.

1974
04:15:15,720 --> 04:15:20,640
You need to give a .zip as part of the filename on here.

1975
04:15:20,640 --> 04:15:26,240
So in Unix, well, yeah, really anywhere.

1976
04:15:26,240 --> 04:15:30,200
But Unix, what you give is what it uses.

1977
04:15:30,200 --> 04:15:32,400
So it doesn't automatically add or remove

1978
04:15:32,400 --> 04:15:33,800
filenames from anywhere.

1979
04:15:35,400 --> 04:15:39,480
I propose we go to a break now.

1980
04:15:39,480 --> 04:15:41,280
We can keep answering some questions

1981
04:15:41,280 --> 04:15:43,600
and we'll come back and move on.

1982
04:15:43,600 --> 04:15:47,720
And if things are still not working quite right,

1983
04:15:47,720 --> 04:15:51,840
please let us know you had problems down here

1984
04:15:51,840 --> 04:15:55,560
and we will be aware of that for next time.

1985
04:15:56,560 --> 04:16:00,400
But during the break, even if this hasn't worked yet,

1986
04:16:00,400 --> 04:16:03,360
consider how cool it is what we just did.

1987
04:16:03,360 --> 04:16:07,020
So since we're typing things on a terminal,

1988
04:16:07,020 --> 04:16:08,380
it has several effects.

1989
04:16:08,380 --> 04:16:10,580
One, you can copy what you typed

1990
04:16:10,580 --> 04:16:14,300
and put it in another notepad and remember what you did.

1991
04:16:14,300 --> 04:16:16,140
And that's much easier than remembering

1992
04:16:16,140 --> 04:16:18,220
where you did a bunch of clicking.

1993
04:16:18,220 --> 04:16:20,820
Second, since we're typing it here,

1994
04:16:20,820 --> 04:16:23,820
we can make another program called the shell script

1995
04:16:23,820 --> 04:16:28,820
that will run these programs automatically for us.

1996
04:16:29,940 --> 04:16:31,580
So instead of having to sit there

1997
04:16:31,580 --> 04:16:35,060
and click buttons to run something 100 times or 1,000

1998
04:16:35,060 --> 04:16:38,220
times, we can run 100 things at once

1999
04:16:38,220 --> 04:16:39,900
with just a little bit of work.

2000
04:16:39,900 --> 04:16:43,100
And this is our first step in that direction.

2001
04:16:43,100 --> 04:16:45,660
And that is, without a doubt, cool

2002
04:16:45,660 --> 04:16:49,380
and what makes clusters useful.

2003
04:16:49,380 --> 04:16:52,740
So with that said, I guess we have a 10-minute break.

2004
04:16:52,740 --> 04:16:58,620
And we'll come back at 8 minutes past the hour.

2005
04:16:58,620 --> 04:17:00,140
Sounds good.

2006
04:17:00,140 --> 04:17:00,640
OK.

2007
04:17:00,640 --> 04:17:01,340
Sounds good.

2008
04:17:04,020 --> 04:17:07,780
See you then.

2009
04:17:07,780 --> 04:17:08,860
Bye.

2010
04:17:08,860 --> 04:17:10,420
Bye.

2011
04:17:30,140 --> 04:17:32,200
you

2012
04:18:00,140 --> 04:18:02,200
you

2013
04:18:30,140 --> 04:18:32,200
you

2014
04:19:00,140 --> 04:19:02,200
you

2015
04:19:30,140 --> 04:19:32,200
you

2016
04:20:00,140 --> 04:20:02,200
you

2017
04:20:30,140 --> 04:20:32,200
you

2018
04:21:00,140 --> 04:21:02,200
you

2019
04:21:30,140 --> 04:21:32,200
you

2020
04:22:00,140 --> 04:22:02,200
you

2021
04:22:30,140 --> 04:22:32,200
you

2022
04:23:00,140 --> 04:23:02,200
you

2023
04:23:30,140 --> 04:23:32,200
you

2024
04:24:00,140 --> 04:24:02,200
you

2025
04:24:30,140 --> 04:24:32,200
you

2026
04:25:00,140 --> 04:25:02,200
you

2027
04:25:30,140 --> 04:25:32,200
you

2028
04:26:00,140 --> 04:26:02,200
you

2029
04:26:30,140 --> 04:26:32,200
you

2030
04:27:00,140 --> 04:27:02,200
you

2031
04:27:30,140 --> 04:27:32,200
you

2032
04:28:00,140 --> 04:28:02,200
you

2033
04:28:30,140 --> 04:28:51,620
Hello. Hello. Hello. We're back. Yeah. So yeah. Yeah, that's like the recovered. Yeah,

2034
04:28:51,620 --> 04:28:57,820
that's the like the like the shortest Linux terminal crash course ever. So it's like,

2035
04:28:57,820 --> 04:29:04,620
Yeah, it can be a bit like, okay, what is happening here, like kind of a situation.

2036
04:29:04,620 --> 04:29:09,780
But it gets better once you get accustomed to it.

2037
04:29:09,780 --> 04:29:16,500
But if you still have problems with it, don't hesitate to put the stuff into the notes,

2038
04:29:16,500 --> 04:29:22,380
because we'll be using that example as a stepping stone for the next things.

2039
04:29:22,380 --> 04:29:29,140
So do check that if you can run the code that we put there.

2040
04:29:29,140 --> 04:29:31,380
There's an example solution now.

2041
04:29:31,380 --> 04:29:33,980
Sorry about not having an example solution ready.

2042
04:29:33,980 --> 04:29:37,620
We are moving some of the materials around.

2043
04:29:37,620 --> 04:29:43,060
But now there's an example solution there in the notes.

2044
04:29:43,060 --> 04:29:45,100
So you can try it out if you had problems.

2045
04:29:47,820 --> 04:29:49,580
Yeah, over here.

2046
04:29:49,580 --> 04:29:53,180
Okay. Here, I guess.

2047
04:29:53,180 --> 04:29:58,860
Yes, you can try that one out if you still haven't managed to.

2048
04:29:59,580 --> 04:30:00,080
Yeah.

2049
04:30:03,340 --> 04:30:10,140
But don't worry about this too much. Don't worry about if this seems quite complicated.

2050
04:30:10,780 --> 04:30:18,700
The idea is that you will get more accustomed to the terminal once we start writing the

2051
04:30:18,700 --> 04:30:23,260
scripts and everything like that and we start using the terminal more and more. But now,

2052
04:30:23,260 --> 04:30:29,980
should we move towards like, we've been talking about the terminal, how to use the terminal

2053
04:30:29,980 --> 04:30:38,940
and where's the HPC, where is the computing stuff? But this is needed for us to be able to

2054
04:30:39,660 --> 04:30:46,860
actually do the HPC stuff. So, [name], maybe we should talk about the next step,

2055
04:30:46,860 --> 04:30:56,540
which is the queuing system. So, let's view again our cluster here. So, what is the queue?

2056
04:30:57,980 --> 04:31:03,900
Yeah. Actually, you know, I could grab my demo materials from one of the HPC kitchen

2057
04:31:04,700 --> 04:31:08,540
videos and go and give a live demo here, but I'm not prepared for that.

2058
04:31:08,540 --> 04:31:18,580
that. So let's see. In short, when you have hundreds of computers and thousands or hundreds

2059
04:31:18,580 --> 04:31:25,500
of thousands or millions of processors available, how do you know what each person can use and

2060
04:31:25,500 --> 04:31:30,820
for how long? So Slurm is the thing that takes all the requests. So you might say, I have

2061
04:31:30,820 --> 04:31:36,340
this job where I want 10 processors and 200 gigabytes

2062
04:31:36,340 --> 04:31:39,020
of memory, and it will find the resources

2063
04:31:39,020 --> 04:31:41,140
and tell you where you can run it.

2064
04:31:41,140 --> 04:31:45,620
Or someone might come and say, I need between 1,000

2065
04:31:45,620 --> 04:31:48,420
and 1 million processors with 4 gigabytes of memory

2066
04:31:48,420 --> 04:31:51,700
per processor, and it will find what's available,

2067
04:31:51,700 --> 04:31:54,900
wait for them to be there, and then give them to you

2068
04:31:54,900 --> 04:31:56,260
and let your thing run.

2069
04:31:56,260 --> 04:31:59,940
All in the background without you having to be there

2070
04:31:59,940 --> 04:32:01,300
and wait for it to happen.

2071
04:32:02,700 --> 04:32:06,300
Yeah, and the queue manager is called Slurm.

2072
04:32:06,300 --> 04:32:08,580
So whenever we are talking about Slurm,

2073
04:32:09,460 --> 04:32:13,300
the name sounds strange and it is, but that's what it is.

2074
04:32:13,300 --> 04:32:15,560
But whenever we're talking about Slurm,

2075
04:32:15,560 --> 04:32:16,940
we mean the queue manager.

2076
04:32:16,940 --> 04:32:19,420
And many clusters or some clusters

2077
04:32:19,420 --> 04:32:21,100
use different queue managers,

2078
04:32:21,100 --> 04:32:22,980
but at least here in Finland,

2079
04:32:22,980 --> 04:32:24,620
I think everybody's using Slurm.

2080
04:32:24,620 --> 04:32:27,620
CSC is using Slurm, we're using Slurm.

2081
04:32:27,620 --> 04:32:35,600
It just rolls out of your tongue once you get used to the word, but once you know how

2082
04:32:35,600 --> 04:32:42,200
to reserve resources with Slurm, you can use it in various other clusters as well.

2083
04:32:42,200 --> 04:32:50,660
So once you know the parameters that the Slurm takes, you can get resources.

2084
04:32:50,660 --> 04:32:55,860
So if we look at the picture, we can see that most of the time we are spending our time

2085
04:32:55,860 --> 04:33:03,380
in the login node, or maybe you have reserved like an interactive session with the on-demand,

2086
04:33:03,380 --> 04:33:10,340
but anyways, you're in some interactive session and you want to run the stuff in the actual

2087
04:33:10,340 --> 04:33:13,340
like CPU nodes in the other computers.

2088
04:33:13,340 --> 04:33:18,820
So should we now check how can you reserve those resources?

2089
04:33:18,820 --> 04:33:19,820
Yeah.

2090
04:33:19,820 --> 04:33:21,900
Oh, actually, can you scroll down?

2091
04:33:21,900 --> 04:33:24,120
I think there's a nice picture here that shows

2092
04:33:24,120 --> 04:33:27,860
the box that's scheduled.

2093
04:33:27,860 --> 04:33:29,540
There, yeah.

2094
04:33:29,540 --> 04:33:32,940
So whenever you are scheduling a job,

2095
04:33:32,940 --> 04:33:37,940
it's basically a rectangle that the number of CPUs,

2096
04:33:37,940 --> 04:33:40,260
the amount of memory, and the time.

2097
04:33:40,260 --> 04:33:41,900
And then optionally, you can throw

2098
04:33:41,900 --> 04:33:45,180
in some number of GPUs there.

2099
04:33:45,180 --> 04:33:48,460
So that's the kind of thing.

2100
04:33:48,460 --> 04:33:52,780
So we need to define what these boxes are.

2101
04:33:52,780 --> 04:34:02,500
And usually, the good way of starting to approximate the boxes is compare them to your own computer.

2102
04:34:02,500 --> 04:34:09,220
So if your computer has four CPUs, you might want to request four CPUs.

2103
04:34:09,220 --> 04:34:14,740
If your computer has 16 gigabytes of memory or 8 gigabytes of memory, you might take the

2104
04:34:14,740 --> 04:34:16,180
same one.

2105
04:34:16,180 --> 04:34:22,640
And if you have, if you put outcome rounds on your laptop for an hour, you might want

2106
04:34:22,640 --> 04:34:27,340
to request something like two hours.

2107
04:34:27,340 --> 04:34:33,020
So you have this kind of like size of what is your job?

2108
04:34:33,020 --> 04:34:35,220
What does it need for it to run?

2109
04:34:35,220 --> 04:34:42,540
And then you can estimate the first guess, what is the size of the job?

2110
04:34:42,540 --> 04:34:44,780
then you can refine the guess later on.

2111
04:34:47,260 --> 04:34:47,760
Yeah.

2112
04:34:49,020 --> 04:34:55,020
So, [name], what happens when you tell Slurm these requests?

2113
04:34:55,020 --> 04:34:55,820
What does it do?

2114
04:34:58,260 --> 04:35:03,740
So you tell it a request and it first, you tell it what the

2115
04:35:03,740 --> 04:35:05,740
requests are and then the batch scripts.

2116
04:35:05,740 --> 04:35:10,420
So basically what will be run and then it adds it to a database

2117
04:35:10,420 --> 04:35:12,260
of everything that's requested.

2118
04:35:12,540 --> 04:35:15,660
and then it stores it,

2119
04:35:15,660 --> 04:35:18,100
it sorts it by priority.

2120
04:35:18,100 --> 04:35:20,340
Most clusters, actually,

2121
04:35:20,340 --> 04:35:23,060
isn't most clusters in Finland and the world now,

2122
04:35:23,060 --> 04:35:24,860
use something called fairshare.

2123
04:35:24,860 --> 04:35:29,060
So basically, it's not

2124
04:35:29,060 --> 04:35:32,780
a strict queue where the first person to submit something goes first.

2125
04:35:32,780 --> 04:35:38,820
Instead, it takes all the requests,

2126
04:35:38,820 --> 04:35:40,220
and the more you run,

2127
04:35:40,220 --> 04:35:42,020
the lower your priority goes.

2128
04:35:42,020 --> 04:35:47,020
so that it sort of tries to balance it out

2129
04:35:47,020 --> 04:35:49,940
so everyone gets about the same amount of stuff.

2130
04:35:49,940 --> 04:35:51,660
So it's something like CSC, where

2131
04:35:51,660 --> 04:35:54,220
there's a limited number of billing units

2132
04:35:54,220 --> 04:35:56,540
that might take that into account.

2133
04:35:56,540 --> 04:35:58,300
But at least in our university, it's

2134
04:35:58,300 --> 04:36:02,140
designed to be relatively equal.

2135
04:36:02,140 --> 04:36:07,620
And if we check the resources, so we already

2136
04:36:07,620 --> 04:36:12,460
mentioned that there's the time memory, CPUs and GPUs.

2137
04:36:12,460 --> 04:36:14,220
And for each of these, there's usually

2138
04:36:14,220 --> 04:36:19,580
some arguments or parameters that are listed over here.

2139
04:36:19,580 --> 04:36:22,060
We'll go through them when we are actually

2140
04:36:22,060 --> 04:36:24,460
going to be submitting the jobs.

2141
04:36:24,460 --> 04:36:27,580
But you can always come back and reference, let's say,

2142
04:36:27,580 --> 04:36:29,780
this page or the relevant tutorial pages

2143
04:36:29,780 --> 04:36:34,540
to figure out what were the magic flags that Slurm needed

2144
04:36:34,540 --> 04:36:36,740
to know about these resources.

2145
04:36:36,740 --> 04:36:44,340
Yeah, there's also on some other clusters, there's other parameters you might need to tell,

2146
04:36:44,900 --> 04:36:49,540
like for example in CSC you need to tell which account you're using, like which is the

2147
04:36:50,180 --> 04:36:56,740
one who will be built, and in some cases you need to also give partitions. So often

2148
04:36:57,860 --> 04:37:06,100
the cluster, if you look at the cluster here, the cluster is split into different partitions based

2149
04:37:06,100 --> 04:37:10,980
on what sort of job they need to be running or what sort of architecture they have.

2150
04:37:10,980 --> 04:37:16,660
For example, the GPU nodes are often separated into their own partitions.

2151
04:37:16,660 --> 04:37:21,780
So sometimes you need to give this information as well when you're submitting a job.

2152
04:37:21,780 --> 04:37:28,180
So in these cases, please refer to your own clusters, documentation, what magic flags you

2153
04:37:28,180 --> 04:37:35,420
you need to add in order to get the job running on the compute

2154
04:37:35,420 --> 04:37:36,340
nodes.

2155
04:37:36,340 --> 04:37:42,020
Usually it's like partition and then the name of a partition.

2156
04:37:42,020 --> 04:37:44,100
Yeah.

2157
04:37:44,100 --> 04:37:45,820
Is there anything else here, or should we

2158
04:37:45,820 --> 04:37:46,940
go on to the examples?

2159
04:37:49,900 --> 04:37:53,940
I think probably, yeah, I would say,

2160
04:37:53,940 --> 04:37:55,340
do we have anything in the chat?

2161
04:37:55,340 --> 04:37:56,660
Any good questions?

2162
04:37:56,660 --> 04:38:00,880
No, nothing we need to.

2163
04:38:00,880 --> 04:38:04,280
There is one question, how to decide how many resources

2164
04:38:04,280 --> 04:38:05,780
to allocate for the job.

2165
04:38:05,780 --> 04:38:10,400
And actually, yeah, maybe we can briefly mention that.

2166
04:38:10,400 --> 04:38:10,900
Yeah.

2167
04:38:10,900 --> 04:38:13,660
So you made a page on this once.

2168
04:38:13,660 --> 04:38:14,660
Yes, yes.

2169
04:38:14,660 --> 04:38:19,100
There's like a, you can check, there's

2170
04:38:19,100 --> 04:38:29,380
this quick guide on the job size, like what is the program size.

2171
04:38:29,380 --> 04:38:36,820
Yeah, and you can check that and basically, it's like I said, you can often compare it

2172
04:38:36,820 --> 04:38:42,940
to your own computer, like what are the resources over there.

2173
04:38:42,940 --> 04:38:49,060
And often you can use the, let's say, if you don't know if your program uses multiple processors,

2174
04:38:49,060 --> 04:38:54,260
you can run it on your own computer and check the process manager in your machine.

2175
04:38:54,260 --> 04:39:02,460
There's hints in the guide, like you can check how many processes are being used by the program

2176
04:39:02,460 --> 04:39:06,660
and then determine from that how big is the program.

2177
04:39:06,660 --> 04:39:15,160
But what you usually give these resources, you don't want to give exactly the limit what the program uses.

2178
04:39:15,160 --> 04:39:24,920
want to give it a bit leeway so that it doesn't get throttled or anything like that. So basically,

2179
04:39:26,760 --> 04:39:32,280
if your program uses one CPU, then you usually want to have it one CPU. If it uses like eight

2180
04:39:32,280 --> 04:39:37,880
gigabytes of memory, you might want to give it like 10, just to have a bit of option of going

2181
04:39:37,880 --> 04:39:44,040
a bit over. And if it takes like an hour, you usually give it like hour and a half. So you

2182
04:39:44,040 --> 04:39:48,160
you give it a bit leeway that if it runs slower this day,

2183
04:39:48,160 --> 04:39:50,360
then it will still finish.

2184
04:39:50,360 --> 04:39:54,240
And usually it goes like you first guess some number,

2185
04:39:54,240 --> 04:39:57,920
if it crashes, like if it is too small,

2186
04:39:57,920 --> 04:39:59,440
then you just increase the number.

2187
04:39:59,440 --> 04:40:00,600
If it's too big,

2188
04:40:00,600 --> 04:40:03,760
we will talk about job monitoring tomorrow.

2189
04:40:03,760 --> 04:40:07,680
So we will talk about how you can get the numbers out

2190
04:40:07,680 --> 04:40:09,600
after the job has run,

2191
04:40:09,600 --> 04:40:11,160
like how much it actually used,

2192
04:40:11,160 --> 04:40:12,760
and then you can like limit it.

2193
04:40:12,760 --> 04:40:17,400
And you usually want the submission

2194
04:40:17,400 --> 04:40:21,240
to be quite close to the size of the box

2195
04:40:21,240 --> 04:40:25,000
because then the queue knows that, OK, this

2196
04:40:25,000 --> 04:40:27,720
is the amount of things needed by the job.

2197
04:40:27,720 --> 04:40:34,840
So you can fit it best into the queue.

2198
04:40:34,840 --> 04:40:38,240
So then you won't get a bad priority

2199
04:40:38,240 --> 04:40:39,840
because the job you're requesting

2200
04:40:39,840 --> 04:40:41,360
more than you actually use.

2201
04:40:42,760 --> 04:40:44,840
But should we start running?

2202
04:40:44,840 --> 04:40:45,760
Let's go on.

2203
04:40:45,760 --> 04:40:46,600
OK.

2204
04:40:46,600 --> 04:40:49,880
So the way we usually present this

2205
04:40:49,880 --> 04:40:52,880
is first we run things interactively.

2206
04:40:52,880 --> 04:40:55,120
So that means, unlike what we've been saying,

2207
04:40:55,120 --> 04:40:59,760
we don't make a batch script and set it to run in the background.

2208
04:40:59,760 --> 04:41:02,240
But we're going to see the results right here

2209
04:41:02,240 --> 04:41:04,840
in front of us.

2210
04:41:04,840 --> 04:41:08,120
So we do that by running the same command as before.

2211
04:41:08,120 --> 04:41:12,240
So [name] can push the up arrow key.

2212
04:41:12,240 --> 04:41:18,360
And then if we go to the beginning of the line,

2213
04:41:18,360 --> 04:41:21,560
now we add a wrapper here that tells it to run through Slurm,

2214
04:41:21,560 --> 04:41:23,240
and that is srun.

2215
04:41:23,240 --> 04:41:26,480
So srun means like Slurm run, whatever.

2216
04:41:26,480 --> 04:41:29,000
Different clusters may have different practices

2217
04:41:29,000 --> 04:41:32,160
you should use, but this is the generic Slurm one.

2218
04:41:32,160 --> 04:41:36,040
And you can give, first we tell it what resources it needs,

2219
04:41:36,040 --> 04:41:38,120
how much memory is needed.

2220
04:41:38,120 --> 04:41:41,160
How much should we get?

2221
04:41:41,160 --> 04:41:45,560
The input data file is 18 megabytes, at least

2222
04:41:45,560 --> 04:41:46,560
the 100-book one.

2223
04:41:46,560 --> 04:41:47,440
Yeah.

2224
04:41:47,440 --> 04:41:52,760
And it has to make a copy of most of the books, so I mean.

2225
04:41:52,760 --> 04:41:55,040
Be safe and put 1 gigabyte.

2226
04:41:55,040 --> 04:41:57,800
Yeah, that's not enough, probably.

2227
04:41:57,800 --> 04:42:01,120
And for reference, on the cluster, 1 gigabyte is tiny.

2228
04:42:01,120 --> 04:42:04,000
So there's no need to even think about going

2229
04:42:04,000 --> 04:42:05,960
less than a gigabyte.

2230
04:42:05,960 --> 04:42:11,040
So it's not even worth trying to see how small it should be.

2231
04:42:11,040 --> 04:42:13,960
And then we should give it, what, the time.

2232
04:42:13,960 --> 04:42:17,120
So how long did it take to run?

2233
04:42:17,120 --> 04:42:19,920
Like 10 seconds, something?

2234
04:42:19,920 --> 04:42:21,200
10 seconds, yeah.

2235
04:42:21,200 --> 04:42:23,680
So we can put like 10 minutes, maybe.

2236
04:42:23,680 --> 04:42:25,880
10 minutes, yeah.

2237
04:42:25,880 --> 04:42:28,920
Usually, you don't want to have very small jobs.

2238
04:42:28,920 --> 04:42:31,040
But in this case, because we're just testing out,

2239
04:42:31,040 --> 04:42:33,880
it doesn't matter.

2240
04:42:33,880 --> 04:42:38,960
And the time syntax is like hours, minutes, seconds.

2241
04:42:38,960 --> 04:42:40,160
There's also days.

2242
04:42:40,160 --> 04:42:48,320
if you run really long jobs but that's not necessary for here yeah and we didn't tell

2243
04:42:48,320 --> 04:42:54,320
the number of processors to use so it probably defaulted to one and here immediately we see

2244
04:42:54,320 --> 04:43:00,480
something interesting so we see it says s run job some job id has been submitted in waiting

2245
04:43:00,480 --> 04:43:07,920
allocation then it said job has run yeah it's so maybe we should uh add the output there so that

2246
04:43:07,920 --> 04:43:12,320
so that we can see the output.

2247
04:43:12,320 --> 04:43:16,120
So we can push the up arrow key.

2248
04:43:16,120 --> 04:43:21,920
And then at the end, do dash o or double dash output,

2249
04:43:21,920 --> 04:43:23,360
whichever one.

2250
04:43:23,360 --> 04:43:25,000
And then give it some file name.

2251
04:43:25,000 --> 04:43:33,720
And it will now save the output to that file, which is words 1.

2252
04:43:33,720 --> 04:43:36,520
Yeah, let's say like that.

2253
04:43:36,520 --> 04:43:40,000
Oh, OK, now we can see a bit more clearly.

2254
04:43:40,000 --> 04:43:43,040
So job srun queued, waiting for resources.

2255
04:43:43,040 --> 04:43:46,000
srun job has been allocated resources.

2256
04:43:46,000 --> 04:43:47,560
It found the files.

2257
04:43:47,560 --> 04:43:49,520
It's waiting.

2258
04:43:49,520 --> 04:43:59,400
And it says it found about 111,000 unique words in there

2259
04:43:59,400 --> 04:44:01,800
for however it defines words.

2260
04:44:01,800 --> 04:44:04,720
Do you want to look at the output of the file?

2261
04:44:04,720 --> 04:44:12,880
Yes. We can use a pager. Maybe you can explain what is a pager, like a list to view it.

2262
04:44:14,000 --> 04:44:21,360
So by paging, it means pagination. So since the file's too long to just print to the screen,

2263
04:44:21,360 --> 04:44:27,360
it will show us one screen at a time. And less is the most common pager these days.

2264
04:44:28,400 --> 04:44:34,560
So once it opens, now [name] can push page up and page down to scroll through. So if we

2265
04:44:34,560 --> 04:44:40,720
go to the top, what are the most common words in the books? Yeah, not surprisingly in the English

2266
04:44:40,720 --> 04:44:52,800
language book, like many of the pronouns. Yeah, so that looks about like what we'd expect.

2267
04:44:54,560 --> 04:45:04,080
Yeah, and to quit the pager, you can press the Q button. Yeah, so there's a good

2268
04:45:04,080 --> 04:45:12,240
question in the notes. The SRUN outputs wall time, user time, system time. So actually,

2269
04:45:12,240 --> 04:45:18,080
that wall time, user time, system time is coming from the program itself. So we programmed it to

2270
04:45:18,080 --> 04:45:24,560
say what the output is. But Slurm also tracks these. So wall time is like the physical time

2271
04:45:24,560 --> 04:45:32,960
that passed. So like the real time. User time is how many core seconds was used. So if it ran for

2272
04:45:32,960 --> 04:45:41,600
10 seconds, but use two processors, user time would be 20 seconds. System time is the amount

2273
04:45:41,600 --> 04:45:46,640
of time spent with the operating system doing stuff, which would usually be things like reading

2274
04:45:46,640 --> 04:45:53,520
data or managing memory, something like that. Usually you want it to be low in your programs,

2275
04:45:53,520 --> 04:45:57,480
And Max RSS tells it how much memory was used.

2276
04:45:57,480 --> 04:46:03,840
So now in order to, well, let's check

2277
04:46:03,840 --> 04:46:08,000
Slurm to see how much resources it used.

2278
04:46:08,000 --> 04:46:09,880
Or should we do that later?

2279
04:46:09,880 --> 04:46:13,320
We can do that, I think, later in the monitoring.

2280
04:46:13,320 --> 04:46:18,240
Like maybe we should first check.

2281
04:46:18,240 --> 04:46:21,360
Yeah, first focus on this one.

2282
04:46:21,360 --> 04:46:22,360
Yeah.

2283
04:46:22,360 --> 04:46:25,800
So should we advance and do the batch job now?

2284
04:46:29,040 --> 04:46:31,160
I think that's what was next in the notes.

2285
04:46:31,160 --> 04:46:32,720
Yes, if you didn't.

2286
04:46:32,720 --> 04:46:34,120
Yeah.

2287
04:46:34,120 --> 04:46:39,040
So let's do a batch job for this one.

2288
04:46:41,880 --> 04:46:42,480
Yes.

2289
04:46:42,480 --> 04:46:45,560
So now in the batch job, we introduce you

2290
04:46:45,560 --> 04:46:49,560
to what's called a slurm script or shell script.

2291
04:46:49,560 --> 04:46:51,200
So this is the first time we're going

2292
04:46:51,200 --> 04:46:57,600
make a new file on the cluster and in this file we will put the instructions to slurm to say what

2293
04:46:57,600 --> 04:47:06,480
resources are needed and the instructions to our code to tell it what to run and it will all look

2294
04:47:06,480 --> 04:47:13,680
quite familiar with what we've done so far. So to edit a file on the cluster we'll use the

2295
04:47:13,680 --> 04:47:20,400
editor named nano so it's a really basic editor it's not fancy at all but it's simple to use it

2296
04:47:20,400 --> 04:47:23,760
It tells you how to quit it from within the editor.

2297
04:47:23,760 --> 04:47:26,640
And from what we can tell, it's on every cluster.

2298
04:47:26,640 --> 04:47:29,240
So it's a good starting point.

2299
04:47:29,240 --> 04:47:38,280
So we're calling the new shell scripts count1grams.sh,

2300
04:47:38,280 --> 04:47:41,800
where the .sh means it's a shell script.

2301
04:47:41,800 --> 04:47:45,560
So [name] pushes Enter, and Nano opens.

2302
04:47:45,560 --> 04:47:47,640
So the shell scripts always start

2303
04:47:47,640 --> 04:47:50,780
with what we call a shabanglang for like hash bang

2304
04:47:50,780 --> 04:47:52,260
with bang being exclamation mark.

2305
04:47:52,260 --> 04:47:54,820
And it tells it this will be a bash script.

2306
04:47:54,820 --> 04:47:59,820
So bin bash, bash is the shell that we're using.

2307
04:48:00,180 --> 04:48:01,220
So it's the-

2308
04:48:01,220 --> 04:48:03,340
And this is basically like the kind of magic

2309
04:48:03,340 --> 04:48:06,860
that is like, like you will always just write this.

2310
04:48:06,860 --> 04:48:10,540
Like how often, like when you start writing these scripts

2311
04:48:10,540 --> 04:48:12,100
you often get into the automation

2312
04:48:12,100 --> 04:48:16,180
that you will always write the shabang this.

2313
04:48:16,180 --> 04:48:17,380
You can use different ones

2314
04:48:17,380 --> 04:48:20,060
But usually, it's easier to just.

2315
04:48:20,060 --> 04:48:22,380
It's like some magic words.

2316
04:48:22,380 --> 04:48:26,500
You open the, you're making a magic spell.

2317
04:48:26,500 --> 04:48:29,180
You give the standard magic words at the beginning.

2318
04:48:29,180 --> 04:48:33,820
And it's something that you copy from the cheat sheet

2319
04:48:33,820 --> 04:48:35,820
every time you do it.

2320
04:48:35,820 --> 04:48:40,500
So now we see the comment symbol and sbatch here.

2321
04:48:40,500 --> 04:48:44,460
So this sbatch is an instruction for Slurm

2322
04:48:44,460 --> 04:48:47,060
to read and do something here.

2323
04:48:47,060 --> 04:48:50,300
And now we add the same options we did from the command line.

2324
04:48:50,300 --> 04:48:53,180
So for example, we'll tell it that it needs memory one

2325
04:48:53,180 --> 04:48:58,540
gigabyte and sbatch time equals 10 minutes.

2326
04:48:58,540 --> 04:49:00,740
And we could add whatever else here.

2327
04:49:03,700 --> 04:49:05,860
OK.

2328
04:49:05,860 --> 04:49:09,860
And should we add then the thing that we want to run?

2329
04:49:09,860 --> 04:49:12,820
Yeah, so now we get to the actual shell.

2330
04:49:12,820 --> 04:49:18,420
And we'll enter basically the same thing

2331
04:49:18,420 --> 04:49:21,540
we typed ourselves there.

2332
04:49:21,540 --> 04:49:31,220
So ngrams count.py, words, and then Gutenberg fiction.

2333
04:49:31,220 --> 04:49:34,140
Actually, do you know the file name of the thing?

2334
04:49:34,140 --> 04:49:38,180
Yeah, it's below there, down there.

2335
04:49:38,180 --> 04:49:40,860
Yeah, you can copy from the note down below.

2336
04:49:42,820 --> 04:49:50,820
Should we try to do two grams, actually, like now that I think of it, should we do two grams?

2337
04:49:50,820 --> 04:49:51,820
Yeah.

2338
04:49:51,820 --> 04:49:52,820
Yeah.

2339
04:49:52,820 --> 04:50:00,820
So, if we add here, what's it does in, we can get two grams, I think.

2340
04:50:00,820 --> 04:50:02,820
Yes, dash lowercase n.

2341
04:50:02,820 --> 04:50:06,820
So, now we count word pairs, right?

2342
04:50:06,820 --> 04:50:10,820
Like how many word pairs we can get.

2343
04:50:10,820 --> 04:50:13,340
So let's save this file.

2344
04:50:13,340 --> 04:50:14,100
And actually.

2345
04:50:14,100 --> 04:50:19,380
And saving with Control-X and then pushing Y.

2346
04:50:19,380 --> 04:50:19,900
Yeah.

2347
04:50:19,900 --> 04:50:24,660
And actually, I'll rename it to 2grams.sh.

2348
04:50:24,660 --> 04:50:28,740
That's so now it's save under a different name.

2349
04:50:28,740 --> 04:50:29,540
Yes.

2350
04:50:29,540 --> 04:50:31,980
Yes.

2351
04:50:31,980 --> 04:50:34,060
It's a better name for the file.

2352
04:50:34,060 --> 04:50:36,700
So.

2353
04:50:36,700 --> 04:50:37,980
So.

2354
04:50:37,980 --> 04:50:39,260
OK.

2355
04:50:39,260 --> 04:50:43,100
And now we actually do the running.

2356
04:50:43,100 --> 04:50:44,540
So this is it.

2357
04:50:44,540 --> 04:50:49,940
We run the command sbatch, and we give it the script file.

2358
04:50:49,940 --> 04:50:52,380
And with luck, there won't be any errors,

2359
04:50:52,380 --> 04:50:54,820
and it will start running.

2360
04:50:54,820 --> 04:50:55,380
Yeah.

2361
04:50:55,380 --> 04:50:57,460
I'll try to be fast here.

2362
04:50:57,460 --> 04:50:58,420
Yeah.

2363
04:50:58,420 --> 04:51:04,220
So [name] will push, enter, and immediately run slurm history.

2364
04:51:04,220 --> 04:51:05,420
No, it already finished.

2365
04:51:05,420 --> 04:51:06,940
Actually, maybe slurm queue.

2366
04:51:09,260 --> 04:51:09,760
Yeah.

2367
04:51:09,760 --> 04:51:10,260
Yeah.

2368
04:51:10,260 --> 04:51:13,760
So now this is sort of a wide thing here.

2369
04:51:13,760 --> 04:51:15,600
And maybe I'll push it.

2370
04:51:15,600 --> 04:51:16,560
Yeah.

2371
04:51:16,560 --> 04:51:18,520
So there's several key Slurm commands

2372
04:51:18,520 --> 04:51:20,120
that you will need to know.

2373
04:51:20,120 --> 04:51:23,520
One, well, actually, so this Slurm

2374
04:51:23,520 --> 04:51:27,160
is only available on our cluster.

2375
04:51:27,160 --> 04:51:28,040
So on other clusters.

2376
04:51:28,040 --> 04:51:31,480
I think it's also on some other clusters.

2377
04:51:31,480 --> 04:51:35,060
But it's not part of the Slurm installation,

2378
04:51:35,060 --> 04:51:37,080
but it's present in many clusters.

2379
04:51:39,260 --> 04:51:40,140
Yeah.

2380
04:51:40,140 --> 04:51:41,380
Yeah.

2381
04:51:41,380 --> 04:51:43,540
I'm writing some stuff in the notes here.

2382
04:51:43,540 --> 04:51:45,140
So sbatch.

2383
04:51:45,140 --> 04:51:50,700
But you can, there's other commands like squeue.

2384
04:51:54,620 --> 04:51:55,460
Yeah.

2385
04:51:55,460 --> 04:51:57,540
You can use as well.

2386
04:51:57,540 --> 04:51:59,580
But OK, so what's the general thing?

2387
04:51:59,580 --> 04:52:03,020
We basically, we made our food order

2388
04:52:03,020 --> 04:52:06,860
and we handed it off to the manager, so the Slurm.

2389
04:52:06,860 --> 04:52:10,020
And now Slurm has a queue of everything there.

2390
04:52:10,020 --> 04:52:15,820
And when you type Slurm queue, that tells you what's queued.

2391
04:52:15,820 --> 04:52:18,500
And we see the second command.

2392
04:52:18,500 --> 04:52:20,120
Now it's done running.

2393
04:52:20,120 --> 04:52:22,500
So we can type the command Slurm history

2394
04:52:22,500 --> 04:52:27,500
and see the status of how it ran.

2395
04:52:27,500 --> 04:52:33,980
So Slurm history needs to be 8 by 12.

2396
04:52:33,980 --> 04:52:36,140
It's OK if it scrolls off the screen some.

2397
04:52:36,140 --> 04:52:38,220
Yeah, that's good.

2398
04:52:38,220 --> 04:52:41,700
So we see here in the history, there's

2399
04:52:41,700 --> 04:52:47,420
three jobs with IDs that end in 10, 43, and 30.

2400
04:52:47,420 --> 04:52:50,380
So it tells us the job name.

2401
04:52:50,380 --> 04:52:53,740
And we see for the last one, it's count2grams.sh.

2402
04:52:53,740 --> 04:52:56,260
So that's the file name we submitted.

2403
04:52:56,260 --> 04:52:58,740
When it started running, it said it

2404
04:52:58,740 --> 04:53:01,260
requested one gigabyte of memory.

2405
04:53:01,260 --> 04:53:08,500
And it used 602 megabytes of memory.

2406
04:53:08,500 --> 04:53:10,620
So 2 grams took a lot more memory

2407
04:53:10,620 --> 04:53:12,620
to compute than 1 grams.

2408
04:53:12,620 --> 04:53:14,540
That's good to know.

2409
04:53:14,540 --> 04:53:21,700
It says it took 22 seconds of CPU time.

2410
04:53:21,700 --> 04:53:24,060
And towards the end, we see the state

2411
04:53:24,060 --> 04:53:28,260
is COMP, which means completed.

2412
04:53:28,260 --> 04:53:29,100
Yeah.

2413
04:53:29,100 --> 04:53:35,820
And at the end we can also see what was the name of the computer, like the nodes where it ran.

2414
04:53:35,820 --> 04:53:43,740
So you can see that some of these other programs run on this pe78 and this run on pe8. This is not

2415
04:53:43,740 --> 04:53:51,820
usually important unless you run into problems or something and then if the computer breaks or

2416
04:53:51,820 --> 04:53:57,900
something and you need to contact us that hey my code didn't work but usually like

2417
04:53:59,260 --> 04:54:06,700
the queue manager can decide which computer can fill your things fill your requests and it will

2418
04:54:06,700 --> 04:54:17,260
decide the best computer to run it on yeah um yeah and that's basically it so with this

2419
04:54:17,260 --> 04:54:24,140
as you learn more and more shell scripting, or not, if you don't need much more, you can start

2420
04:54:24,140 --> 04:54:34,300
making these programs that will do more and more for what you do. Yes, and also an important thing

2421
04:54:34,300 --> 04:54:44,060
with the script, when we now run the stuff, we run it non-interactively. So when we submitted

2422
04:54:44,060 --> 04:54:51,500
the job, but we immediately didn't see any output or anything. What good is that if I don't see

2423
04:54:51,500 --> 04:55:01,900
anything? The reason is that Slurm will divert the output to files. If we look at the count

2424
04:55:01,900 --> 04:55:12,380
n-grams again, over here we have the output of the Python code itself, or the count.py.

2425
04:55:12,380 --> 04:55:21,360
We use this to divert the output of the counting program to this file, but Slurm will also

2426
04:55:21,360 --> 04:55:28,200
record everything that the program prints out, and that will be saved into an output

2427
04:55:28,200 --> 04:55:29,320
file.

2428
04:55:29,320 --> 04:55:34,040
You can change the name of this output file as well, but the default is that its name

2429
04:55:34,040 --> 04:55:38,000
is slurm, then dash, and then the job ID.

2430
04:55:38,000 --> 04:55:45,000
So the job that we run, the job ID discount n-grams, we get an output file out of here.

2431
04:55:45,000 --> 04:55:52,560
So we can later use pager less to view what was the output over here.

2432
04:55:52,560 --> 04:55:56,180
So we can see that this is what the code program printed.

2433
04:55:56,180 --> 04:55:59,520
So it's the same as we would have run it interactively.

2434
04:55:59,520 --> 04:56:02,080
We get the output over there.

2435
04:56:02,080 --> 04:56:08,520
So often in your program, you might have program write some output into the disk, but you also

2436
04:56:08,520 --> 04:56:13,320
want to print out, okay, what it is doing and if it's encountering problems and whatever.

2437
04:56:13,320 --> 04:56:16,840
And you can later see them in these output files.

2438
04:56:16,840 --> 04:56:18,200
Yeah.

2439
04:56:18,200 --> 04:56:19,800
Okay.

2440
04:56:19,800 --> 04:56:23,280
Should we give people time to work themselves now?

2441
04:56:23,280 --> 04:56:24,280
Yes.

2442
04:56:24,280 --> 04:56:25,280
Let's see.

2443
04:56:25,280 --> 04:56:29,680
I will info add.

2444
04:56:29,680 --> 04:56:31,000
When should we come back?

2445
04:56:31,000 --> 04:56:34,000
we come back five minutes before the end time,

2446
04:56:34,000 --> 04:56:36,560
and we can briefly wrap up.

2447
04:56:37,080 --> 04:56:42,920
Yes. I will add, yeah.

2448
04:56:42,920 --> 04:56:47,120
It may be a little bit short on time to do this,

2449
04:56:47,120 --> 04:56:49,000
but if so, it's okay.

2450
04:56:49,000 --> 04:56:51,600
The course will be over and then you'll have

2451
04:56:51,600 --> 04:56:55,520
time to work on it yourself before tomorrow.

2452
04:56:55,520 --> 04:56:59,520
We'll keep answering questions afterwards.

2453
04:56:59,520 --> 04:57:05,320
And did we mention how in the Slurm history command,

2454
04:57:05,320 --> 04:57:11,800
it showed what Slurm tracked as the resource usage, which is?

2455
04:57:11,800 --> 04:57:15,600
We can talk about it tomorrow in the monitoring.

2456
04:57:15,600 --> 04:57:16,840
Right, yeah.

2457
04:57:16,840 --> 04:57:19,840
While we're talking about the other monitoring as well.

2458
04:57:19,840 --> 04:57:21,320
Yeah.

2459
04:57:21,320 --> 04:57:28,160
And I guess we will, in the notes,

2460
04:57:28,160 --> 04:57:30,440
will add the commands that we ran,

2461
04:57:30,440 --> 04:57:32,600
so that way you can copy from there.

2462
04:57:37,160 --> 04:57:39,520
Yeah.

2463
04:57:39,520 --> 04:57:40,020
Yeah.

2464
04:57:40,020 --> 04:57:40,640
OK.

2465
04:57:40,640 --> 04:57:41,800
Well, good luck.

2466
04:57:41,800 --> 04:57:45,200
See you in about 20 minutes.

2467
04:57:45,200 --> 04:57:51,120
And yeah, have fun, and be happy with your first Slurm jobs.

2468
04:57:51,120 --> 04:57:57,520
This is an important day for you.

2469
04:57:57,520 --> 04:57:59,360
Maybe I shouldn't be so philosophical.

2470
04:57:59,360 --> 04:58:00,680
Okay, see you later then.

2471
04:58:01,600 --> 04:58:02,440
Okay, bye.

2472
04:58:27,520 --> 04:58:29,580
you

2473
04:58:57,520 --> 04:58:59,580
you

2474
04:59:27,520 --> 04:59:29,580
you

2475
04:59:57,520 --> 04:59:59,580
you

2476
05:00:27,520 --> 05:00:29,580
you

2477
05:00:57,520 --> 05:00:59,580
you

2478
05:01:27,520 --> 05:01:29,580
you

2479
05:01:57,520 --> 05:01:59,580
you

2480
05:02:27,520 --> 05:02:29,580
you

2481
05:02:57,520 --> 05:02:59,580
you

2482
05:03:27,520 --> 05:03:29,580
you

2483
05:03:57,520 --> 05:03:59,580
you

2484
05:04:27,520 --> 05:04:29,580
you

2485
05:04:57,520 --> 05:04:59,580
you

2486
05:05:27,520 --> 05:05:29,580
you

2487
05:05:57,520 --> 05:05:59,580
you

2488
05:06:27,520 --> 05:06:29,580
you

2489
05:06:57,520 --> 05:06:59,580
you

2490
05:07:27,520 --> 05:07:29,580
you

2491
05:07:57,520 --> 05:07:59,580
you

2492
05:08:27,520 --> 05:08:29,580
you

2493
05:08:57,520 --> 05:08:59,580
you

2494
05:09:27,520 --> 05:09:29,580
you

2495
05:09:57,520 --> 05:09:59,580
you

2496
05:10:27,520 --> 05:10:29,580
you

2497
05:10:57,520 --> 05:10:59,580
you

2498
05:11:27,520 --> 05:11:29,580
you

2499
05:11:57,520 --> 05:11:59,580
you

2500
05:12:27,520 --> 05:12:29,580
you

2501
05:12:57,520 --> 05:12:59,580
you

2502
05:13:27,520 --> 05:13:29,580
you

2503
05:13:57,520 --> 05:13:59,580
you

2504
05:14:27,520 --> 05:14:29,580
you

2505
05:14:57,520 --> 05:14:59,580
you

2506
05:15:27,520 --> 05:15:29,580
you

2507
05:15:57,520 --> 05:16:21,600
Hello and welcome back.

2508
05:16:21,600 --> 05:16:26,600
So sure, a lot has happened here in these notes.

2509
05:16:26,600 --> 05:16:34,520
In the bottom, there's a place you can respond if you finished the things. That would be good

2510
05:16:34,520 --> 05:16:40,280
to figure out. Also, we've started adding some feedback at the bottom. So, just like before,

2511
05:16:40,280 --> 05:16:48,520
this is a poll. You can add the O's in order to say if it's too fast, slow, basic, advanced,

2512
05:16:48,520 --> 05:17:00,840
whatever, and any other feedback for us. So I had several things from the questions I'd like to

2513
05:17:00,840 --> 05:17:09,240
bring up, but it might take a bit too long to go and actually find them through the material,

2514
05:17:09,240 --> 05:17:15,240
so I'll just say it. First, one important thing to note, once you have the batch script file to

2515
05:17:15,240 --> 05:17:21,160
run things, now your work is reproducible. So if you save the batch scripts that you run

2516
05:17:21,160 --> 05:17:25,960
and you come back in a month or six months or a year and need to run the same things again,

2517
05:17:26,520 --> 05:17:32,360
you can basically figure out what arguments you gave and how things should work. And that's really

2518
05:17:32,360 --> 05:17:36,520
important and shouldn't be underestimated. When you're doing this scientific work,

2519
05:17:36,520 --> 05:17:43,400
you have to remember things for a long period of time. And if, for example, a year from now,

2520
05:17:43,400 --> 05:17:48,760
you have to try to do something again for paper revisions or to verify the work,

2521
05:17:48,760 --> 05:17:51,240
having these batch grips will help you quite a lot.

2522
05:17:52,840 --> 05:18:00,040
Next up, many of the clusters are different. So we saw something down here, for example,

2523
05:18:00,040 --> 05:18:06,920
on the CSC computers, you need to specify the account and partition for every job you run.

2524
05:18:07,640 --> 05:18:13,000
So on some clusters, it sort of automatically does it because the time isn't tracked by project.

2525
05:18:13,400 --> 05:18:19,240
So this is another case where you need to find the reference for the cluster you're using and then

2526
05:18:21,080 --> 05:18:26,200
well, you know, copy that and translate it to what your work is doing now.

2527
05:18:27,320 --> 05:18:32,360
Next up, there was some point a question about the output files.

2528
05:18:32,360 --> 05:18:44,280
else. Where does it save the output? Okay. Maybe like this here. So there's different

2529
05:18:44,280 --> 05:18:53,000
types of output that a script can have. One is the output files that the code itself makes.

2530
05:18:53,000 --> 05:18:58,800
And the second is what the code is printing to the screen, which is what in the Unix world

2531
05:18:58,800 --> 05:19:01,800
is called standard output or standard error.

2532
05:19:01,800 --> 05:19:04,360
And this standard output and standard error

2533
05:19:04,360 --> 05:19:06,760
gets captured by Slurm and then saved

2534
05:19:06,760 --> 05:19:08,920
to a file for your reference.

2535
05:19:08,920 --> 05:19:11,120
So basically, there's two kinds of things that happen.

2536
05:19:11,120 --> 05:19:14,220
So your program runs, it saves the main results,

2537
05:19:14,220 --> 05:19:17,600
and then the information about how the program itself ran.

2538
05:19:17,600 --> 05:19:19,560
And usually, it's the second one that you

2539
05:19:19,560 --> 05:19:21,400
would look at to figure out what happened

2540
05:19:21,400 --> 05:19:23,440
if it didn't work correctly.

2541
05:19:23,440 --> 05:19:28,200
So, yeah, these dot out files like this are very,

2542
05:19:29,600 --> 05:19:30,960
okay, I can't select,

2543
05:19:30,960 --> 05:19:34,800
very important to look at when things go wrong.

2544
05:19:34,800 --> 05:19:36,200
And even when things go right,

2545
05:19:36,200 --> 05:19:39,760
just to make sure that it's going right the way you expect.

2546
05:19:39,760 --> 05:19:42,440
Yeah, and maybe we didn't emphasize enough

2547
05:19:42,440 --> 05:19:46,120
in the, when we wanted to get to the exercise

2548
05:19:46,120 --> 05:19:47,160
as quickly as possible,

2549
05:19:47,160 --> 05:19:50,000
why are we even doing this script?

2550
05:19:50,000 --> 05:19:56,400
So the important part is that you want to program to the computer what you want it to do.

2551
05:19:57,360 --> 05:20:04,400
You want to tell it what to do. And in the case of Slurm, you want to tell the Slurm that, hey,

2552
05:20:04,400 --> 05:20:10,320
I want you to do this thing for me, and I want you to give me the resources and do it somewhere

2553
05:20:11,680 --> 05:20:18,720
when I'm not watching. Basically, in the kitchen metaphor, you're just asking

2554
05:20:20,000 --> 05:20:26,560
basically you're ordering food from a restaurant, like you want somebody else to prepare it

2555
05:20:26,560 --> 05:20:35,280
to you at a later date and you will get it done later. So you want to be able to tell

2556
05:20:35,280 --> 05:20:40,880
the instructions to the computer in a way that it understands what commands it should run

2557
05:20:40,880 --> 05:20:47,840
when it goes to the compute node. And the output is basically the way that you can then monitor

2558
05:20:47,840 --> 05:20:52,880
what it actually did. So in your code, you can have print statements and stuff like that,

2559
05:20:53,600 --> 05:20:59,840
that will tell, okay, I am now doing this, I'm doing that. And especially if you're running a

2560
05:20:59,840 --> 05:21:10,480
job in the queue, you might want to monitor what it is doing. But if you submit it to the queue,

2561
05:21:11,600 --> 05:21:15,760
you don't have an interactive session there, which is a benefit because you can then close

2562
05:21:15,760 --> 05:21:22,000
a laptop and closer connection, nothing will break. It will run remotely there, but you want

2563
05:21:22,000 --> 05:21:31,120
to monitor the output and that's why you have the output files. Yeah, okay. And the last one I wanted

2564
05:21:31,120 --> 05:21:40,720
to note, which can I find it from here, is the difference between sbatch and srun and bash directly.

2565
05:21:40,720 --> 05:21:50,720
So sbatch will take a script file and hand it off to slurm to run it sometime later non-interactively.

2566
05:21:51,600 --> 05:21:58,080
srun when used directly from the command line will try to run something through slurm but right now

2567
05:21:58,640 --> 05:22:05,440
attached to your terminal and it doesn't read the different sbatch comments that are inside of a

2568
05:22:05,440 --> 05:22:12,720
shell script. And finally if you run something with bash only it doesn't know anything about

2569
05:22:12,720 --> 05:22:23,520
slurm and will just run it where you are directly. So this is something that

2570
05:22:25,600 --> 05:22:29,600
well you don't have time to go much more into depth than this now but if you read a little

2571
05:22:29,600 --> 05:22:36,800
bit more, you'll see us discuss this a bit more in the notes. Also, I mean, we're out of time now,

2572
05:22:37,360 --> 05:22:47,920
and there is, like, this was very fast. Like we said at the beginning, it's impossible to give

2573
05:22:47,920 --> 05:22:53,600
a course that will teach you everything about the cluster, about Linux, about the shell,

2574
05:22:53,600 --> 05:22:58,240
about version control, about the data storage within 10 hours.

2575
05:22:58,240 --> 05:23:00,240
So we aren't even trying to do that.

2576
05:23:00,240 --> 05:23:02,560
Instead, we're trying to give the broad overview

2577
05:23:02,560 --> 05:23:05,120
and show some demos and have good materials for you

2578
05:23:05,120 --> 05:23:07,680
to follow up on just the parts you need later.

2579
05:23:07,680 --> 05:23:10,480
Because also, everyone needs different parts

2580
05:23:10,480 --> 05:23:13,600
for their own work in the future.

2581
05:23:13,600 --> 05:23:17,200
So not everyone can sit through weeks of courses

2582
05:23:17,200 --> 05:23:21,600
to learn all the details.

2583
05:23:21,600 --> 05:23:28,880
So don't feel overwhelmed if it's overwhelming. I mean, yes, it is overwhelming. We know that,

2584
05:23:28,880 --> 05:23:34,000
but that doesn't mean that you personally need to feel overwhelmed. It just means that you are

2585
05:23:37,280 --> 05:23:43,040
learning things. With that being said, is there anything else we should talk about,

2586
05:23:43,040 --> 05:23:45,440
[name], before I go to the final notes of the day?

2587
05:23:45,440 --> 05:23:52,600
Yeah, I'll add that there was a good question of, like, is it not possible to write the

2588
05:23:52,600 --> 05:23:56,200
commands directly on the command line instead of writing them as scripts?

2589
05:23:56,200 --> 05:24:01,240
And yeah, like that's of course an option, but that requires then you to have the terminal

2590
05:24:01,240 --> 05:24:05,600
open and writing them and remembering to write them in the correct order.

2591
05:24:05,600 --> 05:24:11,400
And that's like extra effort that I don't personally want to do.

2592
05:24:11,400 --> 05:24:17,560
So that's why usually you write the scripts because they tell exactly what to do.

2593
05:24:17,560 --> 05:24:22,800
They tell the computer exactly what you want the computer to do.

2594
05:24:22,800 --> 05:24:27,440
And then you can tell the computer that, hey, do this for me.

2595
05:24:27,440 --> 05:24:31,720
And it will run those for you, run the commands that you specify for you.

2596
05:24:31,720 --> 05:24:37,200
And you can later see that, okay, these were the commands I used to run my code.

2597
05:24:37,200 --> 05:24:43,360
was the actual, like, what was needed to run my code. And you don't have to be there typing

2598
05:24:43,360 --> 05:24:48,240
the commands, because the computer basically, the queue basically types those commands for you.

2599
05:24:48,240 --> 05:24:54,720
Like, when it gets the job reservation, it will type those commands in the Slurm script into

2600
05:24:54,720 --> 05:25:00,240
the terminal, and it will run those. Yeah, like, for example, there have been

2601
05:25:00,240 --> 05:25:06,240
times I needed to use the cluster. I had one thing I needed to run that uses 200 megabyte,

2602
05:25:06,240 --> 05:25:08,280
or 200 gigabytes of memory.

2603
05:25:08,280 --> 05:25:11,200
So there, I'll go and I'll run it direct from the terminal.

2604
05:25:11,200 --> 05:25:13,360
I'll load the data, do a quick calculation,

2605
05:25:13,360 --> 05:25:16,560
and be done with it, because it's only a single thing.

2606
05:25:16,560 --> 05:25:20,080
But when I need to do something 100 times,

2607
05:25:20,080 --> 05:25:22,440
because I have 100 different data files,

2608
05:25:22,440 --> 05:25:24,680
then I want to make scripts for it.

2609
05:25:24,680 --> 05:25:30,600
So yeah, it's what's it called?

2610
05:25:30,600 --> 05:25:33,080
Spectrum of ways you use things.

2611
05:25:36,240 --> 05:25:47,640
Yeah, so for tomorrow we covered what was on the schedule and if you look on the schedule

2612
05:25:47,640 --> 05:25:55,320
there's the same stuff, links to it, in tutorial format that has more information.

2613
05:25:55,320 --> 05:26:05,380
Yeah, so you can read that and catch up, learn more, whatever.

2614
05:26:05,380 --> 05:26:07,420
we know you might need more time for the exercises,

2615
05:26:07,420 --> 05:26:10,180
so keep working on it later

2616
05:26:10,180 --> 05:26:14,180
or for the rest of the day today, tomorrow, whatever.

2617
05:26:14,180 --> 05:26:17,200
Maybe we can even make a Zoom session in the morning

2618
05:26:17,200 --> 05:26:21,960
to review things for those in Finland.

2619
05:26:22,920 --> 05:26:27,140
Or ask your colleagues, your friends, whoever for help.

2620
05:26:27,140 --> 05:26:29,020
I mean, a lot of the things here,

2621
05:26:29,020 --> 05:26:30,640
it's hard to do by yourself,

2622
05:26:30,640 --> 05:26:32,180
but if you have another pair of eyes

2623
05:26:32,180 --> 05:26:34,300
who knows things looking at it with you,

2624
05:26:34,300 --> 05:26:35,380
they can help you quite a bit.

2625
05:26:35,380 --> 05:26:38,100
So find that person who will help you.

2626
05:26:38,100 --> 05:26:39,940
And what we did today is needed

2627
05:26:39,940 --> 05:26:41,660
in order to continue tomorrow.

2628
05:26:41,660 --> 05:26:43,900
But also that means what we do tomorrow

2629
05:26:43,900 --> 05:26:45,940
will help to review what we did today.

2630
05:26:45,940 --> 05:26:48,900
So if it doesn't completely make sense now, it's okay.

2631
05:26:48,900 --> 05:26:51,820
Take it for the day, digest it a bit, think about it.

2632
05:26:51,820 --> 05:26:53,420
When you come back tomorrow,

2633
05:26:53,420 --> 05:26:56,180
we'll start again from the beginning.

2634
05:26:56,180 --> 05:27:00,700
Well, beginning like, you know, what's it called?

2635
05:27:00,700 --> 05:27:03,980
You'll see new examples starting from the beginning.

2636
05:27:03,980 --> 05:27:06,300
and that may help to put things into perspective

2637
05:27:06,300 --> 05:27:09,340
and understand the power of what we do here.

2638
05:27:09,340 --> 05:27:11,660
For example, we'll take the Gutenberg books

2639
05:27:11,660 --> 05:27:14,580
and run it for every book in parallel,

2640
05:27:14,580 --> 05:27:17,300
and it will be really easy and very fast.

2641
05:27:18,900 --> 05:27:23,660
And please do fill out the feedback poll here.

2642
05:27:25,660 --> 05:27:29,620
There is, if you don't tell us what went wrong,

2643
05:27:29,620 --> 05:27:33,920
it's hard to improve it for later.

2644
05:27:33,920 --> 05:27:38,920
I'm glad that things are mostly looking okay here.

2645
05:27:39,840 --> 05:27:42,640
And yeah, we realized that we need better instructions

2646
05:27:42,640 --> 05:27:44,080
for what we do before the lecture.

2647
05:27:44,080 --> 05:27:46,900
So we've recently created a new example.

2648
05:27:46,900 --> 05:27:50,640
Before our example was calculating pi, now it's Gutenberg,

2649
05:27:50,640 --> 05:27:53,480
and all the written material isn't updated for it.

2650
05:27:53,480 --> 05:27:57,040
So that makes it just a little bit, well.

2651
05:27:58,320 --> 05:28:02,000
Yeah, we didn't have a good thing to point you to.

2652
05:28:02,000 --> 05:28:09,120
conundrum with this course is that if the example is way too of a toy example, it doesn't reflect

2653
05:28:09,120 --> 05:28:15,680
the real situation. And if it's closer to the real situation, it can become more complicated.

2654
05:28:15,680 --> 05:28:23,520
And we try to adapt everything all the time. But yeah, sometimes, especially when we are doing

2655
05:28:23,520 --> 05:28:29,080
doing a switch from one example to another,

2656
05:28:29,080 --> 05:28:32,640
the material doesn't necessarily follow immediately.

2657
05:28:32,640 --> 05:28:36,000
So yeah, that's unfortunate.

2658
05:28:36,000 --> 05:28:39,760
We'll definitely improve that in the next iteration.

2659
05:28:42,920 --> 05:28:44,520
Yeah.

2660
05:28:44,520 --> 05:28:46,440
Should we just end now?

2661
05:28:46,440 --> 05:28:50,200
We will keep, there's a question somewhere up above.

2662
05:28:50,200 --> 05:28:52,320
Do we have homework for tomorrow?

2663
05:28:52,320 --> 05:28:58,320
the homework is just to try what we did, read stuff. I mean, basically the homework is to

2664
05:28:58,320 --> 05:29:04,800
keep reading and trying stuff until you feel comfortable with it. There's no strict homework

2665
05:29:04,800 --> 05:29:11,280
like, you know, you're not going to be graded or whatever. You're only here for your own benefit.

2666
05:29:14,560 --> 05:29:17,200
And don't forget, if you're not coming back a future day,

2667
05:29:17,200 --> 05:29:23,200
Once you're done with this course, come to our garage if you're at Alto and ask for help.

2668
05:29:23,200 --> 05:29:26,200
We're here to help you to see you through all of these steps.

2669
05:29:26,200 --> 05:29:27,200
You're not alone.

2670
05:29:31,200 --> 05:29:32,200
Yeah, okay.

2671
05:29:32,200 --> 05:29:34,200
Should we go then?

2672
05:29:34,200 --> 05:29:35,200
Yeah.

2673
05:29:35,200 --> 05:29:36,200
Okay.

2674
05:29:36,200 --> 05:29:39,200
See you tomorrow.

2675
05:29:39,200 --> 05:29:41,200
Same time.

2676
05:29:41,200 --> 05:29:48,720
I just heard Saul in chat that yes, we can have a Zoom session before the day starts

2677
05:29:48,720 --> 05:29:49,720
tomorrow.

2678
05:29:49,720 --> 05:29:53,600
So if you're one of the Finland people that has access to the Zoom, stay tuned for an

2679
05:29:53,600 --> 05:29:56,040
email to come and get help then.

2680
05:29:56,040 --> 05:29:57,680
Okay, now let's go for real.

2681
05:29:57,680 --> 05:29:58,680
Okay, bye.

2682
05:29:58,680 --> 05:29:59,180
Bye.

2683
05:30:11,200 --> 05:30:13,260
you

2684
05:30:41,200 --> 05:30:43,260
you

2685
05:31:11,200 --> 05:31:13,260
you

2686
05:31:41,200 --> 05:31:43,260
you

2687
05:32:11,200 --> 05:32:13,260
you

