1
00:00:02,020 --> 00:00:07,020
So from the notes that [name] was very kind to explain

2
00:00:07,020 --> 00:00:13,100
that [name] was very kind to explain.

3
00:00:13,340 --> 00:00:16,380
There's this link access request report which is also very well explained in the email

4
00:00:16,380 --> 00:00:22,460
and there are links. So you should go to this report

5
00:00:22,460 --> 00:00:26,940
and open a new issue. So what you should say is that

6
00:00:26,940 --> 00:00:31,020
please add me as a collaborator. That's the only thing we need.

7
00:00:31,020 --> 00:00:34,860
The reason that we are going to do is to get your username. So once you get the

8
00:00:34,860 --> 00:00:38,460
username,

9
00:00:46,300 --> 00:00:49,340
so we are going to work as a team or

10
00:00:49,340 --> 00:00:53,260
have this feeling that if you are in a

11
00:00:53,260 --> 00:00:55,100
team or that you want to contribute to

12
00:00:55,100 --> 00:00:56,860
something that you don't have access.

13
00:00:56,860 --> 00:00:58,540
So please open an issue if you have not

14
00:00:58,540 --> 00:01:00,940
opened it yet and our Code Refinery

15
00:01:00,940 --> 00:01:02,940
colleagues because I'm not I'm going to

16
00:01:02,940 --> 00:01:05,740
to now switch my tab.

17
00:01:05,740 --> 00:01:07,340
I might not see the issues.

18
00:01:07,340 --> 00:01:11,260
So I'll be very grateful if you could help me

19
00:01:11,260 --> 00:01:15,620
to add new people if they come.

20
00:01:15,620 --> 00:01:17,460
Does that explain, [name]?

21
00:01:17,460 --> 00:01:19,460
Yes, so one thing I want to add is

22
00:01:19,460 --> 00:01:22,540
if you are working as a team, that you don't need

23
00:01:22,540 --> 00:01:25,620
to send an access request here.

24
00:01:25,620 --> 00:01:27,900
So there you will be working with your team

25
00:01:27,900 --> 00:01:32,500
and your team leader will create a repository for you to work.

26
00:01:32,500 --> 00:01:38,420
that's if you're an individual learner this is what you would we would like you to do

27
00:01:39,060 --> 00:01:46,980
to participate in the collaborative exercise okay then maybe in the notes our colleagues could help

28
00:01:48,820 --> 00:01:54,980
include that task for the voting as well like if there isn't a team i'm in the background here and

29
00:01:54,980 --> 00:01:57,940
and accepting requests.

30
00:01:57,940 --> 00:01:59,900
Thank you very much.

31
00:01:59,900 --> 00:02:02,060
Thanks, [name].

32
00:02:02,060 --> 00:02:05,500
And then from the collaborative document

33
00:02:05,500 --> 00:02:07,660
or from the Code Refinery website,

34
00:02:07,660 --> 00:02:10,260
you have today's course, the September course.

35
00:02:10,260 --> 00:02:13,980
And we are already done with day one and two.

36
00:02:13,980 --> 00:02:18,420
We really hope you got some new knowledge from this

37
00:02:18,420 --> 00:02:20,980
and enjoyed what you learned.

38
00:02:20,980 --> 00:02:22,540
So we are in day three.

39
00:02:22,540 --> 00:02:26,220
So I'm in this collaborative distributed virtual control

40
00:02:26,220 --> 00:02:28,780
first part, one of two.

41
00:02:28,780 --> 00:02:32,500
So that is where I am here.

42
00:02:32,500 --> 00:02:37,820
So on the first page, we are summarizing some introductions

43
00:02:37,820 --> 00:02:43,780
and summaries about the things we are going to learn.

44
00:02:43,780 --> 00:02:47,780
And on the menu side, you could jump into different sections.

45
00:02:47,780 --> 00:02:51,020
But what I'm going to do is click the Next button

46
00:02:51,020 --> 00:02:54,860
to start the new lesson.

47
00:02:54,860 --> 00:02:57,500
So the concept around collaboration.

48
00:02:57,500 --> 00:02:59,500
So what are the motivation?

49
00:02:59,500 --> 00:03:01,940
Why do we need to learn this?

50
00:03:01,940 --> 00:03:04,140
So as mentioned here, someone has given you

51
00:03:04,140 --> 00:03:07,420
access to a repository online, and you want to contribute.

52
00:03:07,420 --> 00:03:12,540
Let's say the Code Refinery website.

53
00:03:12,540 --> 00:03:13,740
It's also in Git.

54
00:03:13,740 --> 00:03:17,140
And myself, and [name], and [name], and [name],

55
00:03:17,140 --> 00:03:20,980
and everybody, they were invited to contribute.

56
00:03:20,980 --> 00:03:25,780
So we became contributors in that.

57
00:03:25,780 --> 00:03:30,380
But it might be not that it's not you who created it.

58
00:03:30,380 --> 00:03:32,980
It's somebody who created, maybe it's an organization created,

59
00:03:32,980 --> 00:03:34,940
and you've been invited.

60
00:03:34,940 --> 00:03:39,860
And we'll learn how to make copies of repositories.

61
00:03:39,860 --> 00:03:44,340
So let's say there are so many instances that you

62
00:03:44,340 --> 00:03:46,300
might want to have a copy.

63
00:03:46,300 --> 00:03:49,300
So let's say if you're working on your laptop

64
00:03:49,300 --> 00:03:52,560
or your local computer and you want to modify the code,

65
00:03:52,560 --> 00:03:55,320
then you have to get it down to your computer.

66
00:03:55,320 --> 00:04:00,760
That one example. There are other examples that we talk a little later.

67
00:04:00,760 --> 00:04:05,420
Then [name], this Git as a technology,

68
00:04:05,420 --> 00:04:08,160
there are different companies are involved.

69
00:04:08,160 --> 00:04:09,700
For example, the GitHub,

70
00:04:09,700 --> 00:04:12,700
you have the GitLab, there was GitBucket,

71
00:04:12,700 --> 00:04:16,500
and so many other smaller companies.

72
00:04:16,500 --> 00:04:20,340
And also, you could have this Git hosted on your institute.

73
00:04:20,340 --> 00:04:21,780
For example, in University of Oslo,

74
00:04:21,780 --> 00:04:25,700
we have our own Git, which is github.uio.no.

75
00:04:25,700 --> 00:04:27,540
In our entries organization that we work,

76
00:04:27,540 --> 00:04:30,220
we have gitlab.sigma2.no.

77
00:04:30,220 --> 00:04:32,420
So there are different places.

78
00:04:32,420 --> 00:04:35,180
So because of these different companies,

79
00:04:35,180 --> 00:04:38,780
you might find slight variations of the terminology.

80
00:04:38,780 --> 00:04:42,580
For example, we will be using the word pool request.

81
00:04:42,580 --> 00:04:50,100
another company might, GitLab would use merge request. So pool merge, we might switch between

82
00:04:51,060 --> 00:04:59,460
these terms when we move between companies, but because we are mostly following up in GitHub,

83
00:04:59,460 --> 00:05:09,540
we will use GitHub terminology more in this lesson. So once we know how to contribute,

84
00:05:09,540 --> 00:05:14,140
We will be going through a concept called code review.

85
00:05:14,140 --> 00:05:19,940
So this is to make sure that something that, for example,

86
00:05:19,940 --> 00:05:24,300
I want to contribute something, but I unknowingly

87
00:05:24,300 --> 00:05:25,740
broke something.

88
00:05:25,740 --> 00:05:28,840
And then we don't want to go that into production.

89
00:05:28,840 --> 00:05:32,980
There should be some other people just having a look.

90
00:05:32,980 --> 00:05:35,180
For example, [name], in newspapers,

91
00:05:35,180 --> 00:05:37,300
people publish a lot of articles.

92
00:05:37,300 --> 00:05:38,780
So this has got to an editor.

93
00:05:38,780 --> 00:05:40,860
and there's some proof-checking going on.

94
00:05:40,860 --> 00:05:43,700
So it's something like that, but it's

95
00:05:43,700 --> 00:05:51,380
more a peer-assisted process, like you

96
00:05:51,380 --> 00:05:54,500
have your co-developers, or maybe a supervisor is doing

97
00:05:54,500 --> 00:05:56,740
that, or maybe one of your peers doing that.

98
00:05:56,740 --> 00:05:58,820
So we'll talk about that as well.

99
00:05:58,820 --> 00:06:01,540
Does that cover the things that you're going to do,

100
00:06:01,540 --> 00:06:06,180
the reason for learning Git collaboration today, [name]?

101
00:06:06,180 --> 00:06:08,740
Or do you have anything else to add?

102
00:06:08,740 --> 00:06:13,940
Yeah, you covered most of it. Thanks. And I just want to mention all these workflows.

103
00:06:14,740 --> 00:06:20,980
You mentioned about GitLab, BigBucket, and GitHub, everything, and there are slight variations in

104
00:06:20,980 --> 00:06:27,780
the terminology, but the workflow is same for all this version control cloud in web interfaces. So

105
00:06:28,500 --> 00:06:35,780
when you learn Git, today we are going to discuss on GitHub web interface, but the workflow you are

106
00:06:35,780 --> 00:06:39,220
learning would be applicable to other.

107
00:06:39,220 --> 00:06:42,500
If your university, if your organization having a GitLab,

108
00:06:42,500 --> 00:06:47,740
then you can implement all you learned today on that as well.

109
00:06:47,740 --> 00:06:50,300
So there is not much changes, slight variation

110
00:06:50,300 --> 00:06:51,300
in the terminology.

111
00:06:51,300 --> 00:06:53,380
That's what I want to mention.

112
00:06:53,380 --> 00:06:54,460
That's a great point.

113
00:06:54,460 --> 00:06:56,700
Like, if you know the core concepts,

114
00:06:56,700 --> 00:06:59,020
you can apply it across different companies.

115
00:06:59,020 --> 00:07:01,580
And I will try to explain a little bit about the terms,

116
00:07:01,580 --> 00:07:04,580
[name], so you have to help me that I don't go over time.

117
00:07:04,580 --> 00:07:07,700
Because the main focus of this lesson

118
00:07:07,700 --> 00:07:11,220
is for you to practice, so the learners to practice.

119
00:07:11,220 --> 00:07:14,220
And this lesson is redesigned, actually.

120
00:07:14,220 --> 00:07:18,500
I think it has matured very well since we started.

121
00:07:18,500 --> 00:07:21,020
That learn by doing, and then we discuss.

122
00:07:21,020 --> 00:07:24,300
So it's not about me talking a lot,

123
00:07:24,300 --> 00:07:28,700
but we tell you, inform you the things you need to know.

124
00:07:28,700 --> 00:07:31,980
And then you have to learn a bit more by yourself.

125
00:07:31,980 --> 00:07:35,220
So please help me to keep track of my time

126
00:07:35,220 --> 00:07:37,020
because these two could go into tangents

127
00:07:37,020 --> 00:07:38,820
and we could discuss so many things.

128
00:07:41,900 --> 00:07:43,280
Now we are in the third day.

129
00:07:43,280 --> 00:07:46,980
So if you had followed the course already up to now

130
00:07:46,980 --> 00:07:48,780
or you're just joining today,

131
00:07:48,780 --> 00:07:50,220
you know a little bit quick.

132
00:07:52,220 --> 00:07:57,220
The concept that we're gonna talk,

133
00:07:57,220 --> 00:08:01,980
We expect you to know a little bit of Git by this time,

134
00:08:01,980 --> 00:08:05,180
which means that you have followed the course last two days or you are joining today,

135
00:08:05,180 --> 00:08:07,740
but you have some knowledge.

136
00:08:07,740 --> 00:08:09,620
So a repository.

137
00:08:09,620 --> 00:08:11,460
So when you mean a repository,

138
00:08:11,460 --> 00:08:14,220
it means it contains all the data,

139
00:08:14,220 --> 00:08:18,540
the history, the commits that you might now remember what a commit is,

140
00:08:18,540 --> 00:08:21,580
the branches, everything included.

141
00:08:21,580 --> 00:08:24,020
This is the complete package.

142
00:08:24,020 --> 00:08:33,620
Then a commit would be that the snapshots you saved with a message that you remember that

143
00:08:34,260 --> 00:08:45,220
hash is included to sort of unambiguously identify the commit. And then you could tag it,

144
00:08:45,220 --> 00:08:53,220
you could give some label or like some placeholder that you can find later.

145
00:08:54,020 --> 00:08:56,740
And then other terms that we might focus more,

146
00:08:56,740 --> 00:08:58,780
cloning and forking.

147
00:08:58,780 --> 00:09:03,740
So these terms, I don't think memorizing

148
00:09:03,740 --> 00:09:05,100
would help these terms.

149
00:09:05,100 --> 00:09:09,860
But when you work, you get it naturally,

150
00:09:09,860 --> 00:09:13,180
get into your muscle memory, what these things are

151
00:09:13,180 --> 00:09:14,780
and how you do things.

152
00:09:14,780 --> 00:09:17,020
So I'm not going to spend too much time

153
00:09:17,020 --> 00:09:19,740
on describing each term.

154
00:09:19,740 --> 00:09:23,420
And also, [name] with Git, what I found out

155
00:09:23,420 --> 00:09:26,980
is that rather than learning what is a commit is,

156
00:09:26,980 --> 00:09:29,020
learning the overall process and find out

157
00:09:29,020 --> 00:09:32,460
where a commit fits helps me to understand better.

158
00:09:32,460 --> 00:09:34,060
For example, now we're going to talk

159
00:09:34,060 --> 00:09:36,780
cloning and forking and using templates

160
00:09:36,780 --> 00:09:40,740
and copying repositories.

161
00:09:40,740 --> 00:09:45,980
All this we will try to kind of learn together,

162
00:09:45,980 --> 00:09:49,180
but there are different concepts.

163
00:09:49,180 --> 00:09:52,820
So there are many ways to get a copy.

164
00:09:52,820 --> 00:09:56,100
So one way is to get a clone.

165
00:09:56,100 --> 00:09:59,380
So that is how you work specifically

166
00:09:59,380 --> 00:10:01,220
when you want to get a copy of something

167
00:10:01,220 --> 00:10:03,100
to your local computer.

168
00:10:03,100 --> 00:10:06,060
I could give you two examples.

169
00:10:06,060 --> 00:10:10,980
One is that I want to get some code from computer code

170
00:10:10,980 --> 00:10:16,420
from somebody who is hosting on the web on GitHub.

171
00:10:16,420 --> 00:10:18,780
And then I want to do some modifications.

172
00:10:18,780 --> 00:10:20,820
And I want to maybe contribute back.

173
00:10:20,820 --> 00:10:23,460
or maybe for my use, I need to do some modification,

174
00:10:23,460 --> 00:10:28,660
then I need to get this code to my computer.

175
00:10:28,660 --> 00:10:31,780
When I want to, when we're preparing for this lesson,

176
00:10:31,780 --> 00:10:36,540
when we want to modify some text on CodeRefiner website,

177
00:10:36,540 --> 00:10:41,340
I made a clone of the CodeRefiner website to my laptop.

178
00:10:41,340 --> 00:10:46,220
I made the change, and I send it back requesting,

179
00:10:46,220 --> 00:10:49,700
can you please incorporate this?

180
00:10:49,700 --> 00:10:52,980
you could do the same thing in the cloud,

181
00:10:52,980 --> 00:10:56,820
which means that without cloning to your laptop,

182
00:10:56,820 --> 00:11:00,620
you could clone it inside GitHub itself

183
00:11:00,620 --> 00:11:03,180
and have the copy in the cloud.

184
00:11:03,180 --> 00:11:05,740
So the way I kind of understand the difference

185
00:11:05,740 --> 00:11:10,100
between a clone and a fork that we'll talk next

186
00:11:10,100 --> 00:11:14,180
is that the clone is in your computer,

187
00:11:14,180 --> 00:11:16,180
but if the clone is in the GitHub itself,

188
00:11:16,180 --> 00:11:18,740
it's we call it fork.

189
00:11:18,740 --> 00:11:21,180
So when you have it on your local computer,

190
00:11:21,180 --> 00:11:24,780
there's total disconnect while you work,

191
00:11:24,780 --> 00:11:30,100
unless you explicitly take measures to synchronize it.

192
00:11:30,100 --> 00:11:33,340
But in a fork, because it's inside GitHub,

193
00:11:33,340 --> 00:11:36,540
these repositories somehow have some knowledge of each other.

194
00:11:36,540 --> 00:11:42,060
So you could, like, if the upstream, which

195
00:11:42,060 --> 00:11:45,900
means where we copied the repository from,

196
00:11:45,900 --> 00:11:49,500
If there's an update, it could inform,

197
00:11:49,500 --> 00:11:52,500
GitHub inform that it has happened.

198
00:11:52,500 --> 00:11:54,460
And in addition, issues.

199
00:11:54,460 --> 00:11:57,740
So when we talk about issues a little later on,

200
00:11:57,740 --> 00:12:01,980
these issues could be referenced from your fork.

201
00:12:01,980 --> 00:12:04,260
So there is some kind of a connection

202
00:12:04,260 --> 00:12:06,020
because it's in the same place, same cloud.

203
00:12:06,020 --> 00:12:08,140
There's more connection between the copy

204
00:12:08,140 --> 00:12:09,340
that we make in the cloud

205
00:12:09,340 --> 00:12:11,420
than the copy we have in our laptop.

206
00:12:11,420 --> 00:12:12,820
Does that make sense, Daryan?

207
00:12:12,820 --> 00:12:21,620
Yes, I just want to mention I will clone some repository if there is some program I want

208
00:12:21,620 --> 00:12:23,820
to just run.

209
00:12:23,820 --> 00:12:24,820
It's my data.

210
00:12:24,820 --> 00:12:27,620
So I sometimes I won't contribute back.

211
00:12:27,620 --> 00:12:33,180
I just want to have that program with if that's a library or public repository, I will clone

212
00:12:33,180 --> 00:12:39,540
it and do my work myself with this different data maybe.

213
00:12:39,540 --> 00:12:40,540
That's a very good point.

214
00:12:40,540 --> 00:12:45,420
we want your software, let's say if you want to compile it, compile software on our systems,

215
00:12:45,420 --> 00:12:48,860
we clone it. And that is a very good example of a clone. Yes.

216
00:12:51,660 --> 00:13:01,740
And then when you want to create a repository, but you don't want everything, but you want to

217
00:13:01,740 --> 00:13:07,420
create something that looks like something else. So these folks and clones, they could

218
00:13:07,420 --> 00:13:10,960
they could make entire copies.

219
00:13:10,960 --> 00:13:13,640
But don't worry too much,

220
00:13:13,640 --> 00:13:15,400
but if you know a little bit Git,

221
00:13:15,400 --> 00:13:17,640
I would also like to mention something

222
00:13:17,640 --> 00:13:20,940
that you could actually explicitly define

223
00:13:20,940 --> 00:13:22,640
how deep the copy is.

224
00:13:22,640 --> 00:13:25,280
For example, you don't have to copy all the branches.

225
00:13:25,280 --> 00:13:27,280
You don't have to copy all the comments.

226
00:13:28,400 --> 00:13:32,160
So I'm just trying to place some commands

227
00:13:32,160 --> 00:13:34,880
in the HCI documents later on.

228
00:13:34,880 --> 00:13:36,920
You have commands like depth.

229
00:13:36,920 --> 00:13:39,640
No, you could define, even in forking and cloning,

230
00:13:39,640 --> 00:13:43,280
you could also define how much of,

231
00:13:43,280 --> 00:13:45,580
how much, how deep you want the copy to be.

232
00:13:46,600 --> 00:13:51,600
But when you don't want to like explicitly mention that,

233
00:13:51,600 --> 00:13:54,280
you could use something like a template,

234
00:13:54,280 --> 00:13:58,880
which means the example given here is the cookie cutter.

235
00:13:58,880 --> 00:14:00,640
So what is a cookie cutter, [name]?

236
00:14:01,680 --> 00:14:03,840
I tried to have the same shapes of the cookies,

237
00:14:03,840 --> 00:14:04,680
I would say.

238
00:14:04,680 --> 00:14:07,280
Like I can make cookies without cookie cutter,

239
00:14:07,280 --> 00:14:11,760
but if I want the same kind of pattern in my cookies,

240
00:14:11,760 --> 00:14:14,680
I will use this cookie cutter.

241
00:14:14,680 --> 00:14:18,420
So I will get the same shapes.

242
00:14:18,420 --> 00:14:21,840
Okay, so what does this mean in Git world?

243
00:14:23,120 --> 00:14:28,120
Git world, you take a similar kind of pattern

244
00:14:30,600 --> 00:14:32,080
in your repository.

245
00:14:32,080 --> 00:14:35,040
if you're taking from a template,

246
00:14:35,040 --> 00:14:39,360
you get the repository, you take a template,

247
00:14:39,360 --> 00:14:42,520
it will be similar, but the history will be flattened.

248
00:14:44,360 --> 00:14:46,280
That's what I would say.

249
00:14:46,280 --> 00:14:48,960
But I think we will go through this.

250
00:14:48,960 --> 00:14:51,160
If you are working with a team,

251
00:14:51,160 --> 00:14:55,040
you will take a template from our CR

252
00:14:56,120 --> 00:15:01,120
collaborative workshop repository.

253
00:15:01,120 --> 00:15:02,120
Yeah.

254
00:15:02,120 --> 00:15:13,120
So we will have it in our exercise, but there is one question about question number six.

255
00:15:13,120 --> 00:15:14,120
You want to take it?

256
00:15:14,120 --> 00:15:19,480
Maybe we will come back to it when we have the exercise, but do you want to mention it

257
00:15:19,480 --> 00:15:20,480
[name]?

258
00:15:20,480 --> 00:15:21,480
What was that, Dhani?

259
00:15:21,480 --> 00:15:25,520
Because I want to finish it in four or five minutes now, but if you can read me the question,

260
00:15:25,520 --> 00:15:26,960
we could see what it is.

261
00:15:26,960 --> 00:15:31,360
Yeah, how to push us to local fork compared to synchronizing to the upstream source where

262
00:15:31,360 --> 00:15:36,000
you fork from? Is there a way to commit and push to the place one forked from?

263
00:15:37,440 --> 00:15:42,000
So a good question, very good question. And it has become much easier to do that now,

264
00:15:42,000 --> 00:15:48,880
but we will demonstrate that later. And then I would say that as a question you could ask,

265
00:15:48,880 --> 00:15:52,640
if you don't know, maybe one of our instructors, our colleagues could ask as well.

266
00:15:52,640 --> 00:15:57,920
There's a command called squash, so that command we need to, it's good to understand when we

267
00:15:58,960 --> 00:16:02,880
talk about templates, the command called squash, we could discuss a little bit in the

268
00:16:05,520 --> 00:16:11,440
HackMD. So here we get a copy. What if, [name], let's say we talked about different companies.

269
00:16:12,080 --> 00:16:16,800
You have something in GitHub, but you want to transfer it to GitLab. And you said in the

270
00:16:16,800 --> 00:16:21,600
morning that if you learn the concept, it's easier to move between these things.

271
00:16:22,640 --> 00:16:28,120
Is it possible to move something from GitHub to GitLab?

272
00:16:28,120 --> 00:16:30,400
I assume so, yes.

273
00:16:30,400 --> 00:16:31,520
Yes, yeah.

274
00:16:31,520 --> 00:16:38,360
So for that, you could use commands like import.

275
00:16:38,360 --> 00:16:41,840
So it's possible to import a GitHub repository to GitLab.

276
00:16:41,840 --> 00:16:43,680
But there might be functionalities

277
00:16:43,680 --> 00:16:48,640
that will not be fully copied.

278
00:16:48,640 --> 00:16:54,040
And things which are metadata, like issue connections,

279
00:16:54,040 --> 00:16:59,800
that might get not copied, but they could also synchronize.

280
00:16:59,800 --> 00:17:01,600
Because, [name], as we said in the morning,

281
00:17:01,600 --> 00:17:06,720
our main attempt today is to learn by doing.

282
00:17:06,720 --> 00:17:09,360
So what we'll do is we go to an exercise.

283
00:17:09,360 --> 00:17:12,480
Would you be kind enough to maybe take my screen

284
00:17:12,480 --> 00:17:16,720
and explain what we are planning to do

285
00:17:16,720 --> 00:17:21,680
and the timing, and a little bit about the exercises.

286
00:17:21,680 --> 00:17:25,320
Yes, I will try to take over the screen.

287
00:17:34,600 --> 00:17:37,880
Yeah, my screen looks OK.

288
00:17:40,720 --> 00:17:44,280
So I had to stop my sharing now to [name].

289
00:17:44,280 --> 00:17:45,960
Is it safe for me to stop the sharing?

290
00:17:46,720 --> 00:17:53,440
Can [name] just take it over without you stopping?

291
00:17:53,440 --> 00:17:56,080
I am sharing from my side.

292
00:17:56,080 --> 00:17:57,080
Can you?

293
00:17:57,080 --> 00:17:58,080
Okay.

294
00:17:58,080 --> 00:17:59,080
Then maybe Sarpreet should stop.

295
00:17:59,080 --> 00:18:00,080
Zoom changed.

296
00:18:00,080 --> 00:18:01,080
Yeah.

297
00:18:01,080 --> 00:18:02,080
Okay.

298
00:18:02,080 --> 00:18:03,080
There it goes.

299
00:18:03,080 --> 00:18:04,080
Yeah.

300
00:18:04,080 --> 00:18:05,080
Okay.

301
00:18:05,080 --> 00:18:06,080
Yeah.

302
00:18:06,080 --> 00:18:12,360
So, we are going to prepare for the exercise, but you have had a lot of them in the last

303
00:18:12,360 --> 00:18:16,840
15 minutes, commit branches, pull request,

304
00:18:16,840 --> 00:18:20,320
or merge request, template and everything.

305
00:18:20,320 --> 00:18:22,160
Don't worry, don't get overwhelmed.

306
00:18:22,160 --> 00:18:24,480
And we are going to really do the hands-on

307
00:18:24,480 --> 00:18:26,520
and then we get the practice.

308
00:18:28,520 --> 00:18:31,160
So now what we are going to do is

309
00:18:31,160 --> 00:18:32,600
we are going to collaborate.

310
00:18:34,800 --> 00:18:39,800
Last two days, you did your own repository examples

311
00:18:39,800 --> 00:18:43,340
and you try to fork or clone.

312
00:18:43,340 --> 00:18:45,460
So today is as a team,

313
00:18:45,460 --> 00:18:50,000
we are collaborating on this code refinery workshop,

314
00:18:51,580 --> 00:18:54,160
collaborative workshop repository.

315
00:18:54,160 --> 00:18:56,140
So if you are,

316
00:18:56,140 --> 00:19:00,180
there are two ways to participate in this exercise.

317
00:19:00,180 --> 00:19:02,140
One as a team,

318
00:19:02,140 --> 00:19:05,000
and you, I assume you are in an exercise room.

319
00:19:05,000 --> 00:19:08,840
And if you have a team member, team leader, that's great.

320
00:19:08,840 --> 00:19:11,120
if not, assign someone as the team leader

321
00:19:11,120 --> 00:19:14,960
so that they can create a template for you to collaborate.

322
00:19:16,680 --> 00:19:19,560
So what we are going to do is,

323
00:19:19,560 --> 00:19:22,000
if you are in a team or an individual learner,

324
00:19:22,000 --> 00:19:25,580
we will contribute to a repository via a pull request

325
00:19:25,580 --> 00:19:26,880
that [name] mentioned.

326
00:19:27,960 --> 00:19:29,280
Pull request, I would say,

327
00:19:29,280 --> 00:19:31,720
is the way to communicate between,

328
00:19:32,800 --> 00:19:36,980
pull and push are some words I would use to communicate,

329
00:19:36,980 --> 00:19:39,980
and pull request is suggest changes.

330
00:19:39,980 --> 00:19:41,620
And someone, as [name] mentioned,

331
00:19:41,620 --> 00:19:45,380
someone will review it and accept it

332
00:19:45,380 --> 00:19:48,780
so that your changes are there in the repository.

333
00:19:48,780 --> 00:19:50,620
That's what we are going to do that.

334
00:19:51,540 --> 00:19:56,540
So if you are in a group, if you have a team leader,

335
00:19:57,180 --> 00:19:59,700
there are some work for the team leader to do

336
00:19:59,700 --> 00:20:03,100
is only one person.

337
00:20:03,100 --> 00:20:05,900
If you don't have a team leader assigned,

338
00:20:05,900 --> 00:20:12,540
one person can take the role and create a template from here.

339
00:20:12,540 --> 00:20:16,220
We have these screenshots here, and you

340
00:20:16,220 --> 00:20:22,100
can create the template, use the template,

341
00:20:22,100 --> 00:20:26,100
and then add everyone in your group in that repository.

342
00:20:26,100 --> 00:20:29,180
So you will have a repository under when

343
00:20:29,180 --> 00:20:32,500
you create a template from this repository,

344
00:20:32,500 --> 00:20:35,940
you will have one repository under your namespace

345
00:20:35,940 --> 00:20:37,380
as a team leader.

346
00:20:37,380 --> 00:20:40,780
Then what you have to do is other team members

347
00:20:40,780 --> 00:20:44,420
have to give their username to the team leader

348
00:20:44,420 --> 00:20:46,780
and the team leader should give access

349
00:20:46,780 --> 00:20:48,980
to your team members to the repository

350
00:20:48,980 --> 00:20:53,980
and then you will be able to contribute.

351
00:20:55,180 --> 00:20:58,940
So that's one preparation as a team leader you have to do.

352
00:20:58,940 --> 00:21:01,980
And I will come back to you about a little bit more

353
00:21:02,500 --> 00:21:14,300
it, but please create a template first. Then we have many individual learners. We are here.

354
00:21:14,300 --> 00:21:20,460
What you are going to do is you are collaborating with us. So, we are a collaborator, and there

355
00:21:20,460 --> 00:21:27,340
are two repositories. One is not recorded and recorded. Recorded is what we will show

356
00:21:27,340 --> 00:21:36,020
on the stream, and if you don't want to show your usernames and things on stream, you use

357
00:21:36,020 --> 00:21:41,660
the not recorded one, and the recorded one is for those we will show on the stream.

358
00:21:41,660 --> 00:21:46,220
But the first thing is you have to have access to this repository.

359
00:21:46,220 --> 00:21:52,100
That's what we were mentioning in the beginning, that please ask for access, and we will give

360
00:21:52,100 --> 00:21:53,100
you access.

361
00:21:53,100 --> 00:21:59,740
you are the team member of this repository, and you can collaborate. That's what, as an individual

362
00:21:59,740 --> 00:22:05,980
learner, if you want to do this exercise, you have to do, if you already haven't done it.

363
00:22:08,060 --> 00:22:18,380
So, yeah, if you did that, when you accept, you will get an email notification, and on this

364
00:22:18,380 --> 00:22:25,180
this same email you have GitHub know about your username.

365
00:22:25,180 --> 00:22:27,140
So you will need to accept it.

366
00:22:27,140 --> 00:22:31,420
Then only you become part of the collaborative repository.

367
00:22:31,420 --> 00:22:34,940
So just send an access request.

368
00:22:34,940 --> 00:22:37,380
Then you get an email notification.

369
00:22:37,380 --> 00:22:39,420
You have to accept it.

370
00:22:39,420 --> 00:22:42,420
And there was something more.

371
00:22:42,420 --> 00:22:46,900
It's both for the team leaders, teams,

372
00:22:46,900 --> 00:22:51,900
and also for the individual learners,

373
00:22:52,180 --> 00:22:56,060
that you are supposed to watch this.

374
00:22:56,060 --> 00:23:00,260
If I can go to my GitHub and you see that

375
00:23:01,700 --> 00:23:05,700
there is an eye icon with watch,

376
00:23:05,700 --> 00:23:09,740
you can click on the participating and mentioning.

377
00:23:09,740 --> 00:23:12,300
Otherwise, if you have it as all activities,

378
00:23:12,300 --> 00:23:15,340
there will be more emails coming to you.

379
00:23:15,340 --> 00:23:23,460
It might be overwhelming for you and I, do you think that is a good idea to have an all

380
00:23:23,460 --> 00:23:24,460
activity?

381
00:23:24,460 --> 00:23:25,460
[name]?

382
00:23:25,460 --> 00:23:26,460
Yeah.

383
00:23:26,460 --> 00:23:33,980
So the, because we, because there might be a lot of learners, we are doing a lot of,

384
00:23:33,980 --> 00:23:36,560
many people are joining at the same time, there might be overwhelming.

385
00:23:36,560 --> 00:23:39,180
So what you recommended is better.

386
00:23:39,180 --> 00:23:40,180
Yeah.

387
00:23:40,180 --> 00:23:44,060
So that you can do as a team lead,

388
00:23:45,780 --> 00:23:48,540
also you can mentioning the participating and mention

389
00:23:48,540 --> 00:23:53,300
that then you will get notified when there is an activity

390
00:23:53,300 --> 00:23:54,740
on that you are involved in,

391
00:23:54,740 --> 00:23:57,940
or someone mentioned you on one of the issues

392
00:23:57,940 --> 00:24:01,580
or pull request or something.

393
00:24:01,580 --> 00:24:06,580
So we expect that you take only the participating

394
00:24:07,460 --> 00:24:08,880
and mentions.

395
00:24:08,880 --> 00:24:12,420
Otherwise, it's not a problem, but you will get a lot of notification.

396
00:24:13,140 --> 00:24:14,580
That's why this is recommended.

397
00:24:15,960 --> 00:24:23,760
So these are the setup we are expecting for you to check before that.

398
00:24:23,820 --> 00:24:29,080
But when you are added, I wanted to give you some information about the

399
00:24:29,080 --> 00:24:34,740
background, what we are going to do about it, this is the recorded repository

400
00:24:34,740 --> 00:24:37,980
that we are going to show you on screen.

401
00:24:37,980 --> 00:24:46,780
So, if you go to the settings option, there is collaborators and teams.

402
00:24:46,780 --> 00:24:53,740
Stream exercise participant is where we add all of you who request access to this repository.

403
00:24:53,740 --> 00:24:58,620
And I will change the role, the default role is read.

404
00:24:58,620 --> 00:24:59,620
So we will...

405
00:24:59,620 --> 00:25:04,220
So, [name], before you go, you show that settings menu how to come in.

406
00:25:04,220 --> 00:25:07,260
So if you are working on a smaller screen,

407
00:25:07,260 --> 00:25:08,380
this might be hidden.

408
00:25:08,380 --> 00:25:12,100
So you might have to zoom out or zoom in.

409
00:25:12,100 --> 00:25:15,620
Sometimes the menus could be hidden, but those are there.

410
00:25:15,620 --> 00:25:16,740
Yes, yeah.

411
00:25:16,740 --> 00:25:18,820
Good point, [name].

412
00:25:18,820 --> 00:25:23,460
That's one reason I am a bit zoomed out,

413
00:25:23,460 --> 00:25:25,980
because I wanted to show the settings part.

414
00:25:25,980 --> 00:25:29,540
So the default role is read, but we

415
00:25:29,540 --> 00:25:33,460
wanted everyone to collaborate, all these members

416
00:25:33,460 --> 00:25:36,820
and the stream exercise participants.

417
00:25:36,820 --> 00:25:38,820
We have 44 members now.

418
00:25:38,820 --> 00:25:43,020
So if you haven't done it yet, you can give it.

419
00:25:43,020 --> 00:25:47,140
This is something the team leaders also should do.

420
00:25:47,140 --> 00:25:49,980
When they accept members, they have

421
00:25:49,980 --> 00:25:53,340
to give the right access to those members.

422
00:25:53,340 --> 00:25:57,180
So go to Settings and Collaborates and Teams.

423
00:25:57,180 --> 00:26:00,980
Then you find your members and give right access.

424
00:26:00,980 --> 00:26:05,140
It's default, it will be read access.

425
00:26:05,140 --> 00:26:12,140
And the other point is you have to protect your main branch.

426
00:26:12,140 --> 00:26:15,700
So you have to create a rule for your,

427
00:26:15,700 --> 00:26:19,700
we already create one rule for our main branch.

428
00:26:19,700 --> 00:26:20,660
You can edit it.

429
00:26:20,660 --> 00:26:27,700
And what it means is you cannot forcefully push changes to it.

430
00:26:27,700 --> 00:26:32,460
you have to have a pull request before merging it

431
00:26:32,460 --> 00:26:37,540
to the repository so that the maintainers or other people

432
00:26:37,540 --> 00:26:41,860
can review the changes and approve it and then merge it.

433
00:26:41,860 --> 00:26:46,420
So otherwise, if main branch is not protected,

434
00:26:46,420 --> 00:26:49,900
anyone can push changes directly to the main branches.

435
00:26:49,900 --> 00:26:54,660
That's not a good workflow when you collaborate together.

436
00:26:54,660 --> 00:26:57,340
Anything you want to add, [name]?

437
00:26:57,340 --> 00:26:58,860
Yeah, you explain it very well.

438
00:26:58,860 --> 00:27:03,780
So the main branch or the master branch, sometimes it's called.

439
00:27:03,780 --> 00:27:08,220
Or in some companies, they have this production branch,

440
00:27:08,220 --> 00:27:10,740
where the actual product goes out.

441
00:27:10,740 --> 00:27:12,740
So there are some branches that are protected.

442
00:27:12,740 --> 00:27:16,660
People can't, without anybody else knowing,

443
00:27:16,660 --> 00:27:18,140
just make a modification.

444
00:27:18,140 --> 00:27:23,980
So when you protect it, other people

445
00:27:23,980 --> 00:27:30,540
must be made aware in order to have this accepted and integrated. So it's become like a

446
00:27:30,540 --> 00:27:38,620
team awareness protocol rather than kind of policing things. It's not like making

447
00:27:38,620 --> 00:27:44,380
things difficult, but it is to make sure that all changes go through some review process.

448
00:27:45,260 --> 00:27:52,380
Yeah, good. We have already done this for you, those who are individual learners

449
00:27:52,380 --> 00:27:59,860
and participating with us. But the team members, if you're working with a team, the team leader

450
00:27:59,860 --> 00:28:08,060
is expected to do this on their repository. So we are working on this workflow exercise

451
00:28:08,060 --> 00:28:14,660
recorded version on stream. The individual learners, they don't need to do anything.

452
00:28:14,660 --> 00:28:20,060
We already have done it. But if you're working with a team, the team leader or the responsible

453
00:28:20,060 --> 00:28:28,140
person who would create the template from the CodeRefinery repository. You are expected to

454
00:28:28,140 --> 00:28:37,500
protect your main branch and also give right access to your collaborators. Yeah. So I think

455
00:28:37,500 --> 00:28:44,460
we have the setup mentioned, and then after you have done this setup, that's what we are going

456
00:28:44,460 --> 00:28:50,460
to do is we are going to collaborate. We have all these terms explained, but you can find,

457
00:28:52,060 --> 00:28:57,580
if you create the commit locally, how to do that, and everything is linked in the exercise part. So,

458
00:28:58,380 --> 00:29:05,100
if you don't remember things, that's okay. You can go back and see. But what we expected you to

459
00:29:05,100 --> 00:29:14,140
do during this exercise is that you open an issue where you describe the changes you want

460
00:29:14,140 --> 00:29:22,220
to make, for example, on this for the individual learners, you can create an issue here and

461
00:29:22,940 --> 00:29:29,660
then create a new branch from there and make changes in your branch, commit there and push

462
00:29:29,660 --> 00:29:35,420
your new branch to the repository you are working on. So, [name], when you said issue,

463
00:29:36,060 --> 00:29:40,300
you explained this. I'm just trying to iterate it just to make sure people understand it.

464
00:29:40,300 --> 00:29:43,700
people could work on three places now, isn't it?

465
00:29:43,700 --> 00:29:46,140
So they could work on our centralized workflow

466
00:29:46,140 --> 00:29:48,940
recorded, where their names will be visible.

467
00:29:48,940 --> 00:29:52,020
And then they could work on centralized workflow not

468
00:29:52,020 --> 00:29:56,460
recorded version, where they'll not be shown in our videos.

469
00:29:56,460 --> 00:29:58,300
Or they will work on the repository

470
00:29:58,300 --> 00:30:00,900
their team leader creates.

471
00:30:00,900 --> 00:30:03,420
So they have to select where they work,

472
00:30:03,420 --> 00:30:06,220
and then the issue should be created in that location.

473
00:30:06,220 --> 00:30:07,020
Is that correct?

474
00:30:07,020 --> 00:30:09,260
Yes.

475
00:30:09,260 --> 00:30:12,300
So yeah, for those individual learners,

476
00:30:12,300 --> 00:30:15,980
you create an issue on this workshop exercise

477
00:30:15,980 --> 00:30:19,180
recorded or non-recorded according to your preferences.

478
00:30:19,180 --> 00:30:23,300
And this is what you want to change.

479
00:30:23,300 --> 00:30:26,580
And then create a branch, make the changes,

480
00:30:26,580 --> 00:30:32,020
and push your new branch to the repository you are working on.

481
00:30:32,020 --> 00:30:36,180
Then open a pull request after pushing your branch.

482
00:30:36,180 --> 00:30:43,140
Then you can see somebody else pull request there.

483
00:30:43,140 --> 00:30:45,380
You can review it if you have enough time.

484
00:30:47,940 --> 00:30:52,300
And then we will come back, and we will review it together here

485
00:30:52,300 --> 00:30:53,340
as well on the stream.

486
00:30:56,380 --> 00:31:01,420
At least we expected to do that until step five.

487
00:31:01,420 --> 00:31:03,940
OK, so when you create a branch, [name],

488
00:31:03,940 --> 00:31:05,980
there could be different ways to do that as well.

489
00:31:05,980 --> 00:31:08,940
Maybe people can do it in the GitHub itself.

490
00:31:08,940 --> 00:31:10,980
They could use VS Code.

491
00:31:10,980 --> 00:31:13,300
They could clone it and create a branch.

492
00:31:13,300 --> 00:31:16,020
So there could be multiple workflows people follow.

493
00:31:16,020 --> 00:31:19,660
So there's no exactly one way to achieve this.

494
00:31:19,660 --> 00:31:22,580
But the concept that we are going to learn

495
00:31:22,580 --> 00:31:26,700
is to open the issue and make your changes in the branch,

496
00:31:26,700 --> 00:31:28,140
not in the main branch.

497
00:31:28,140 --> 00:31:31,180
Because now the main branch is actually so protected.

498
00:31:31,180 --> 00:31:33,500
So wherever that you are going to work,

499
00:31:33,500 --> 00:31:38,580
on the terminal, on the web, on ID,

500
00:31:38,580 --> 00:31:40,380
like integrated development environment

501
00:31:40,380 --> 00:31:44,180
like some other program, you could

502
00:31:44,180 --> 00:31:47,060
follow this, the same things.

503
00:31:47,060 --> 00:31:51,500
And maybe, [name], it's better to create a new file,

504
00:31:51,500 --> 00:31:55,500
I mean like a new recipe, than editing an existing file

505
00:31:55,500 --> 00:31:57,940
because multiple people might edit it.

506
00:31:57,940 --> 00:32:00,300
So that's a good concept to learn

507
00:32:00,300 --> 00:32:02,460
if you know a little bit Git.

508
00:32:02,460 --> 00:32:06,060
But in order to learn today's concepts about contributing,

509
00:32:06,060 --> 00:32:10,340
and maybe we could try to avoid little bit complications

510
00:32:10,340 --> 00:32:15,300
like conflicts, for example, which is OK to happen.

511
00:32:15,300 --> 00:32:17,620
Those are good concepts in Git.

512
00:32:17,620 --> 00:32:22,020
But while we learn the basics, it's

513
00:32:22,020 --> 00:32:23,460
better to maybe create a new file.

514
00:32:23,460 --> 00:32:24,620
What do you think?

515
00:32:24,620 --> 00:32:26,340
Yeah.

516
00:32:26,340 --> 00:32:31,180
But I really like if someone changes something also.

517
00:32:31,180 --> 00:32:34,660
but that's a good thing if you want to review

518
00:32:34,660 --> 00:32:37,340
and add a new file is a good thing.

519
00:32:37,340 --> 00:32:42,340
But in reality, you will have sometimes some conflict,

520
00:32:42,420 --> 00:32:45,180
but the best part is if you create an issue

521
00:32:45,180 --> 00:32:48,900
and you describe the changes you want to make,

522
00:32:48,900 --> 00:32:51,900
and if you're working on it, assign it to yourself.

523
00:32:51,900 --> 00:32:54,820
So then the other people know that you're working on it.

524
00:32:55,740 --> 00:32:57,660
So mention it, but we will come back to it,

525
00:32:57,660 --> 00:33:00,140
how to show it after the exercise.

526
00:33:00,140 --> 00:33:05,140
But now we expect at least until step five

527
00:33:05,540 --> 00:33:06,980
in the next 20 minutes.

528
00:33:06,980 --> 00:33:08,260
What do you think [name]?

529
00:33:08,260 --> 00:33:11,300
We will give it 20 minutes to exercise time.

530
00:33:11,300 --> 00:33:13,420
Yes, 20 minutes and we'll have like a poll.

531
00:33:13,420 --> 00:33:16,300
If you want five minutes more, it's okay to take it.

532
00:33:16,300 --> 00:33:18,420
But in the shared document,

533
00:33:18,420 --> 00:33:20,260
we will ask whether you are finished or not.

534
00:33:20,260 --> 00:33:23,340
If many people want more time, it's okay.

535
00:33:23,340 --> 00:33:24,420
We can be a little flexible

536
00:33:24,420 --> 00:33:27,420
because exercise are the most important thing.

537
00:33:27,420 --> 00:33:28,260
We'll do that.

538
00:33:28,260 --> 00:33:32,460
And [name], one thing is now we're going to break for exercise, which means that we're

539
00:33:32,460 --> 00:33:37,820
going to stop talking and the learner is supposed to do the exercise and there'll be some microphone

540
00:33:37,820 --> 00:33:38,820
silence.

541
00:33:38,820 --> 00:33:44,620
Yeah, and actively contribute to this collaborative document and let us know how it goes.

542
00:33:44,620 --> 00:33:47,620
It's very important for us to get your feedback.

543
00:33:47,620 --> 00:33:57,620
Maybe we could write the exercise time, 20 minutes until 10 here, at least.

544
00:33:57,620 --> 00:33:58,620
Yes.

545
00:33:58,620 --> 00:33:59,620
Yes, please.

546
00:33:59,620 --> 00:34:04,700
Please also mention our colleague who's editing it that if they want more time, please ask.

547
00:34:04,700 --> 00:34:08,660
So it's no point like rushing or like doing it halfway.

548
00:34:08,660 --> 00:34:09,660
Yeah.

549
00:34:09,660 --> 00:34:10,660
Yeah.

550
00:34:10,660 --> 00:34:16,060
So 20 minutes is the sort of target, but if you want a little bit more, we can adjust.

551
00:34:16,060 --> 00:34:18,480
[name], I think we should give them some time now

552
00:34:18,480 --> 00:34:23,260
to wrap this around and then do the exercise.

553
00:34:23,260 --> 00:34:27,780
And we'll see you on the other end in that case.

554
00:34:27,780 --> 00:34:29,860
Do you want to keep your screen shared, [name]?

555
00:34:29,860 --> 00:34:33,340
Or do you want somebody else to take it?

556
00:34:33,340 --> 00:34:36,100
OK, we'll do [name], probably, share the notes.

557
00:34:39,900 --> 00:34:42,020
Yes, I'm ready to do that.

558
00:34:42,020 --> 00:34:43,180
Thank you.

559
00:34:43,180 --> 00:34:44,940
Say bye when you're ready.

560
00:34:46,060 --> 00:34:46,900
Bye.

561
00:34:49,000 --> 00:34:53,020
Yes, welcome back.

562
00:34:53,020 --> 00:34:59,020
I see that most of you have done the exercise and we have received a lot of cool results

563
00:34:59,020 --> 00:35:01,380
requests.

564
00:35:01,380 --> 00:35:03,580
[name], what we do now is that we are

565
00:35:03,580 --> 00:35:05,060
to discuss the answers a little bit

566
00:35:05,060 --> 00:35:08,740
and also the questions in the shared document.

567
00:35:08,740 --> 00:35:11,980
First, we shall have a break now.

568
00:35:11,980 --> 00:35:15,140
I mean, break means you should stop working and walk around

569
00:35:15,140 --> 00:35:18,020
and maybe have some coffee or tea.

570
00:35:18,020 --> 00:35:19,420
And then we'll be back.

571
00:35:19,420 --> 00:35:22,140
How long should we take, [name]?

572
00:35:22,140 --> 00:35:23,140
10 minutes break.

573
00:35:23,140 --> 00:35:23,780
10 minutes?

574
00:35:23,780 --> 00:35:25,340
OK.

575
00:35:25,340 --> 00:35:30,260
So we're going to break for 10 minutes,

576
00:35:30,260 --> 00:35:34,740
and then we meet here again to discuss.

577
00:35:34,740 --> 00:35:37,000
So see you in 10 minutes.

578
00:35:37,000 --> 00:35:45,900
Welcome back, [name], did you have some rest or were you working?

579
00:35:45,900 --> 00:35:48,300
Yeah, I took my break.

580
00:35:48,300 --> 00:35:50,580
OK.

581
00:35:50,580 --> 00:35:56,020
So [name], before I go into this, the request,

582
00:35:56,020 --> 00:36:00,140
the viewing the pull requests, I forgot

583
00:36:00,140 --> 00:36:03,500
to show that this insight.

584
00:36:03,500 --> 00:36:07,260
So that's something very exciting to see sometime.

585
00:36:07,260 --> 00:36:12,180
So on the inside, you have something called the network.

586
00:36:12,180 --> 00:36:16,740
Here, it will show what's going on in a graphical view.

587
00:36:16,740 --> 00:36:19,420
So these are the people who are these different colors

588
00:36:19,420 --> 00:36:22,740
are like different branches.

589
00:36:22,740 --> 00:36:26,660
And then they work, for example, this yellow branch.

590
00:36:26,660 --> 00:36:29,180
Let me make sure that I'm in the recorded version.

591
00:36:29,180 --> 00:36:31,140
Yes, I'm in the recorded repo.

592
00:36:31,140 --> 00:36:34,060
So this yellow change now incorporated

593
00:36:34,060 --> 00:36:37,020
into the main branch, white one.

594
00:36:37,020 --> 00:36:38,460
So the green one also here.

595
00:36:38,460 --> 00:36:42,140
So the purple one is also here.

596
00:36:42,140 --> 00:36:44,900
So the yellow and the purple are not the same

597
00:36:44,900 --> 00:36:47,140
because they are two different recipes,

598
00:36:47,140 --> 00:36:49,040
but both of them are now in main.

599
00:36:50,340 --> 00:36:53,500
And once we accept pull requests,

600
00:36:53,500 --> 00:36:54,940
this one is not accepted yet,

601
00:36:54,940 --> 00:36:57,300
so this will also go back into the production.

602
00:36:59,020 --> 00:37:04,020
So [name], our aim is to contribute to a repository

603
00:37:06,060 --> 00:37:08,460
that you have access to,

604
00:37:08,460 --> 00:37:12,100
but not without modifying the main branch.

605
00:37:12,100 --> 00:37:14,740
So a pull request was sent, as you described,

606
00:37:14,740 --> 00:37:16,300
and people have sent the pull request.

607
00:37:16,300 --> 00:37:17,980
And I have sent the request as well.

608
00:37:17,980 --> 00:37:19,540
I see that you have also sent it.

609
00:37:22,100 --> 00:37:25,940
I'll just give a quick glance of what is next.

610
00:37:25,940 --> 00:37:32,300
So that is the code review that we'll talk a little later.

611
00:37:32,300 --> 00:37:37,300
But [name], while we are here, in this exercise,

612
00:37:37,300 --> 00:37:39,300
we'll talk a little bit about the review as well,

613
00:37:39,300 --> 00:37:41,020
and then summarize later on.

614
00:37:41,020 --> 00:37:42,820
Is that OK?

615
00:37:42,820 --> 00:37:45,020
Yes, and I just want to say thank you

616
00:37:45,020 --> 00:37:48,900
to all the requests as well as all the issues created.

617
00:37:48,900 --> 00:37:50,780
That was very good to see.

618
00:37:50,780 --> 00:37:53,980
And we will discuss some of the questions here as well, [name],

619
00:37:53,980 --> 00:37:56,340
that I suppose we will have time.

620
00:37:56,340 --> 00:37:58,540
OK, OK, let's do that.

621
00:37:58,540 --> 00:38:02,620
Is there anything very interesting to take first?

622
00:38:02,620 --> 00:38:06,260
Very important?

623
00:38:06,260 --> 00:38:07,860
All these I see an answer.

624
00:38:07,860 --> 00:38:14,700
OK, so there are some technical questions.

625
00:38:14,700 --> 00:38:18,580
Our colleagues, do you see anything

626
00:38:18,580 --> 00:38:21,700
that we should discuss here?

627
00:38:21,700 --> 00:38:23,540
OK, working in the areas code.

628
00:38:26,580 --> 00:38:30,460
OK, so this is also a very specific technical question

629
00:38:30,460 --> 00:38:33,860
that has been answered.

630
00:38:33,860 --> 00:38:35,540
Yeah.

631
00:38:35,540 --> 00:38:42,100
And there are some questions about where can you add that source answer fixes that we will show.

632
00:38:43,700 --> 00:38:44,200
OK.

633
00:38:51,780 --> 00:38:56,420
Yeah, so if this happens, sometimes you clone it and you start working on it,

634
00:38:57,380 --> 00:39:04,260
and then you realize you're in the main branch. So the answer given by our colleague is to

635
00:39:05,540 --> 00:39:11,860
Yeah, so the two things are given.

636
00:39:11,860 --> 00:39:15,660
So I like the second way that because you are not

637
00:39:15,660 --> 00:39:18,740
saying your request yet, although it is your main

638
00:39:18,740 --> 00:39:22,140
branch, you could create a branch from that main branch

639
00:39:22,140 --> 00:39:25,140
and send it to the pull request.

640
00:39:25,140 --> 00:39:31,420
And then if you send only the branch

641
00:39:31,420 --> 00:39:35,140
that you want to be evaluated in the pull request,

642
00:39:35,140 --> 00:39:36,860
it will not make a difference.

643
00:39:36,860 --> 00:39:40,300
You could also reset and do again, yes.

644
00:39:40,300 --> 00:39:44,100
VS Code, to be honest, [name], I don't use regularly.

645
00:39:44,100 --> 00:39:45,500
I know how it works.

646
00:39:45,500 --> 00:39:48,220
So if there's any questions, we need some help

647
00:39:48,220 --> 00:39:51,420
from our colleagues with that.

648
00:39:51,420 --> 00:39:58,940
And if you see in our documents, we have these tabs.

649
00:39:58,940 --> 00:40:01,260
For example, this is VS Code, and this is command line.

650
00:40:01,260 --> 00:40:04,540
So we give the side-by-side comparison.

651
00:40:04,540 --> 00:40:06,420
So if you show something in the command line,

652
00:40:06,420 --> 00:40:08,340
it shows how to do it in VS Code.

653
00:40:08,340 --> 00:40:09,700
It doesn't mean that you are doing

654
00:40:09,700 --> 00:40:11,260
VS Code and command line.

655
00:40:11,260 --> 00:40:15,140
You can select which one to follow.

656
00:40:15,140 --> 00:40:17,460
One thing I want to mention is if you

657
00:40:17,460 --> 00:40:20,020
are working on command line and VS Code,

658
00:40:20,020 --> 00:40:24,580
you have to authenticate with your SSH key to push the changes.

659
00:40:24,580 --> 00:40:30,980
Otherwise, you will have permission issues.

660
00:40:30,980 --> 00:40:34,340
Do you want to comment on that, [name]?

661
00:40:34,340 --> 00:40:36,180
Can you describe a little bit, [name]?

662
00:40:36,180 --> 00:40:39,140
So if you are working on command line

663
00:40:39,140 --> 00:40:41,260
and you push your changes to the repository,

664
00:40:41,260 --> 00:40:45,260
if your SSH authentication is not right,

665
00:40:45,260 --> 00:40:49,300
you will not be able to push the changes to the repository.

666
00:40:49,300 --> 00:40:50,180
Yes, yes.

667
00:40:50,180 --> 00:40:54,060
So I think if they have set up the keys, it should be OK.

668
00:40:54,060 --> 00:40:57,380
If you face such an issue, please ask here

669
00:40:57,380 --> 00:40:59,700
and we'll try to solve this for you.

670
00:40:59,700 --> 00:41:01,380
Yeah, two things you need to have.

671
00:41:01,380 --> 00:41:08,820
you need to have a permission to push it to this repository

672
00:41:08,820 --> 00:41:11,180
where you have to be a collaborator

673
00:41:11,180 --> 00:41:14,300
to push the changes from your local command line.

674
00:41:14,300 --> 00:41:20,500
And the other thing is you have SSH set up.

675
00:41:20,500 --> 00:41:21,260
OK.

676
00:41:21,260 --> 00:41:24,380
So I see that somebody got this error

677
00:41:24,380 --> 00:41:28,900
as which means that they are not requested that access issue.

678
00:41:28,900 --> 00:41:31,660
They are not open the issue that we discussed.

679
00:41:31,660 --> 00:41:33,460
So they are open an issue asking access.

680
00:41:36,700 --> 00:41:40,660
And then another thing is it doesn't matter really

681
00:41:40,660 --> 00:41:43,060
what you call the branch.

682
00:41:43,060 --> 00:41:47,860
But for myself, the pull request I sent,

683
00:41:47,860 --> 00:41:51,220
let's see if I can find it.

684
00:41:51,220 --> 00:41:54,300
I used the branch I used.

685
00:41:54,300 --> 00:41:58,380
I used my name in front and some indication.

686
00:41:58,380 --> 00:41:59,900
Because it's easier for me to find,

687
00:41:59,900 --> 00:42:03,900
and maybe it's easier to locate with that.

688
00:42:03,900 --> 00:42:08,380
So the default, the name that was used

689
00:42:08,380 --> 00:42:12,980
is that unfinished work, new branch, something.

690
00:42:12,980 --> 00:42:15,180
The branch name doesn't really matter,

691
00:42:15,180 --> 00:42:21,580
but it should kind of indicate what this is about.

692
00:42:21,580 --> 00:42:25,380
Then shall we go through your pull request?

693
00:42:25,380 --> 00:42:26,500
[name], are you ready?

694
00:42:26,500 --> 00:42:32,020
Yes and I have added one more person to the reviewer and I got a nice comment on that but

695
00:42:32,020 --> 00:42:41,700
you can review again [name] and accept it. Where is it? Your 31 was it? Yeah it would be a chia seed pudding.

696
00:42:42,580 --> 00:42:52,100
Okay so I think it's close maybe. Okay. Let's see. Open. I'll just try to get it with the

697
00:42:52,100 --> 00:42:57,100
the number because I think it's the other random reviewer.

698
00:42:59,320 --> 00:43:00,160
Yeah.

699
00:43:00,160 --> 00:43:01,400
Okay, it's merged.

700
00:43:01,400 --> 00:43:03,560
So now, [name], we are in a predicament.

701
00:43:03,560 --> 00:43:06,160
So we have like a unplanned event now.

702
00:43:06,160 --> 00:43:07,080
It's been accepted.

703
00:43:07,080 --> 00:43:10,640
So I can't, you know, I could open it and do it.

704
00:43:10,640 --> 00:43:12,960
But would you like to take my screen

705
00:43:12,960 --> 00:43:16,240
and review my pull request instead?

706
00:43:16,240 --> 00:43:18,240
Yeah, that I can do.

707
00:43:18,240 --> 00:43:20,640
Yeah, when you're ready, just grab it.

708
00:43:20,640 --> 00:43:21,480
Okay.

709
00:43:22,100 --> 00:43:34,340
It's not a random person, maybe it's one of our learners.

710
00:43:34,340 --> 00:43:35,340
So thank you for doing that.

711
00:43:35,340 --> 00:43:36,340
Yes.

712
00:43:36,340 --> 00:43:37,340
And thank you for the comment.

713
00:43:37,340 --> 00:43:40,340
That's not something we were just going to discuss.

714
00:43:40,340 --> 00:43:45,100
Where is your pull request, [name]?

715
00:43:45,100 --> 00:43:46,100
My pull request?

716
00:43:46,100 --> 00:43:49,300
I think [name] needs to stop screen sharing now.

717
00:43:49,300 --> 00:43:50,300
Okay.

718
00:43:50,300 --> 00:43:55,300
So I will stop and my request is 16, pull request number 16.

719
00:43:57,900 --> 00:44:01,220
Sorry, the issue is 16, pull request 26.

720
00:44:03,320 --> 00:44:04,160
Okay, yeah.

721
00:44:04,160 --> 00:44:04,980
Yeah, yeah.

722
00:44:07,140 --> 00:44:09,860
So I see you made some changes

723
00:44:09,860 --> 00:44:14,740
and from your pull request I said made it sweeter

724
00:44:14,740 --> 00:44:17,980
and there is fixes 16 and 26.

725
00:44:17,980 --> 00:44:23,700
You created some issues, I assume.

726
00:44:23,700 --> 00:44:27,540
Shall we go to the issues just to see that what is it?

727
00:44:27,540 --> 00:44:29,340
Or you want to?

728
00:44:29,340 --> 00:44:31,180
No, you could go to the issue.

729
00:44:31,180 --> 00:44:33,780
And before that, I would like to mention

730
00:44:33,780 --> 00:44:35,420
that we should have actually mentioned.

731
00:44:35,420 --> 00:44:37,260
So this is public.

732
00:44:37,260 --> 00:44:40,940
And we were supposed to follow the code of conduct

733
00:44:40,940 --> 00:44:44,740
and make sure that what we type here and where to send

734
00:44:44,740 --> 00:44:50,780
is ethically correct and not sort of breaks those rules.

735
00:44:50,780 --> 00:44:55,260
So I hope you already knew and you did that.

736
00:44:55,260 --> 00:44:58,460
So sorry, we should have mentioned that before,

737
00:44:58,460 --> 00:45:02,180
to be considerate about what's being shown on the internet.

738
00:45:02,180 --> 00:45:03,300
Yes, I opened an issue.

739
00:45:03,300 --> 00:45:05,940
Why is it needed to open an issue, [name]?

740
00:45:05,940 --> 00:45:08,140
What do you think is the?

741
00:45:08,140 --> 00:45:11,220
I just wanted to see what you are going to fix it.

742
00:45:11,220 --> 00:45:17,780
I can check the file changes and see, but maybe what was the issue?

743
00:45:17,780 --> 00:45:25,660
So the issue, the reason I opened the issue, [name], is that to inform the developers or

744
00:45:25,660 --> 00:45:28,980
the people who are involved that I'm working on it.

745
00:45:28,980 --> 00:45:32,140
One thing that could happen is, let's say I'm going to suggest this thing, but it's

746
00:45:32,140 --> 00:45:38,340
not necessarily in the plan, so that doesn't necessarily fit the main repository or the

747
00:45:38,340 --> 00:45:41,460
the main developer's plan or the team's plan.

748
00:45:41,460 --> 00:45:44,500
So I don't want to work on something for a long time

749
00:45:44,500 --> 00:45:46,180
and then send it.

750
00:45:46,180 --> 00:45:48,480
And then just to say, you know, this doesn't fit.

751
00:45:48,480 --> 00:45:53,480
So start early, before even like making this first change,

752
00:45:54,500 --> 00:45:59,240
open an issue, say that, you know, I have this idea,

753
00:45:59,240 --> 00:46:02,340
I'm going to start working on it.

754
00:46:02,340 --> 00:46:06,640
So that has two, maybe more advantages,

755
00:46:06,640 --> 00:46:09,520
but two advantages are there.

756
00:46:09,520 --> 00:46:11,840
One is people will know that I'm working on it.

757
00:46:11,840 --> 00:46:14,700
If somebody really think doesn't work,

758
00:46:14,700 --> 00:46:16,080
they should mention it.

759
00:46:16,080 --> 00:46:19,520
And the other thing is if another person,

760
00:46:19,520 --> 00:46:20,880
if another developer, another colleague

761
00:46:20,880 --> 00:46:22,520
planning to do the work,

762
00:46:22,520 --> 00:46:24,680
that person could collaborate instead of,

763
00:46:24,680 --> 00:46:27,760
you know, starting on their own thing.

764
00:46:27,760 --> 00:46:29,720
So now it is well-informed.

765
00:46:29,720 --> 00:46:31,680
Okay, the issue is here.

766
00:46:31,680 --> 00:46:34,400
And this will also create some metadata

767
00:46:34,400 --> 00:46:35,880
about what we're going to do.

768
00:46:35,880 --> 00:46:38,780
So later on, this will remain forever.

769
00:46:38,780 --> 00:46:40,840
So it can be closed, but it will be there.

770
00:46:40,840 --> 00:46:44,800
So in later on, you could come and check,

771
00:46:44,800 --> 00:46:47,880
you know, what things happen in a chronological order.

772
00:46:47,880 --> 00:46:49,160
You know, these are submitted.

773
00:46:49,160 --> 00:46:51,200
There was some, were there any changes

774
00:46:51,200 --> 00:46:53,600
who accepted the pull request?

775
00:46:53,600 --> 00:46:54,800
In addition to the pull request,

776
00:46:54,800 --> 00:46:57,200
there'll be some documentation or a paper trail,

777
00:46:57,200 --> 00:46:58,680
we call it, you know, the issue.

778
00:46:58,680 --> 00:47:00,080
So the issue was open.

779
00:47:00,080 --> 00:47:01,680
Yes, then that was it.

780
00:47:01,680 --> 00:47:08,380
And one thing I can add is that you can open an issue if you find something is wrong or

781
00:47:08,380 --> 00:47:12,540
something is there and you are not working on it, but let your other members know that

782
00:47:12,540 --> 00:47:14,060
there is an issue.

783
00:47:14,060 --> 00:47:18,860
So you don't need to assign it to yourself, but if you find something needs to change,

784
00:47:18,860 --> 00:47:22,060
there is something we can fix.

785
00:47:22,060 --> 00:47:23,380
You don't need to fix it.

786
00:47:23,380 --> 00:47:26,580
Someone else can fix it to let that there is an issue.

787
00:47:26,580 --> 00:47:28,860
So that way also you can open an issue.

788
00:47:28,860 --> 00:47:35,820
not necessary that you need to work on that issue that you open. Yes, and also the word issue,

789
00:47:35,820 --> 00:47:41,100
it doesn't really mean something broken, it could be improvement. So on the GitHub world,

790
00:47:41,100 --> 00:47:45,980
we have issues. In the GitLab world, if you're working with lab world, you have issues and

791
00:47:45,980 --> 00:47:54,060
incidents. Now, there are slightly different ways to indicate what you're doing. The main thing is

792
00:47:54,060 --> 00:47:57,980
the word issue does not mean that, you know, there's a problem, it could be an improvement,

793
00:47:57,980 --> 00:48:01,980
it could be some new feature, it could be something broken as well. So it's not just

794
00:48:01,980 --> 00:48:09,420
for reporting bugs. Go ahead, [name]. And I could show that the issue that you are

795
00:48:09,420 --> 00:48:18,220
having a sweeter version of sweet pumpkin pie. I assume that there is a sweet pumpkin pie

796
00:48:18,780 --> 00:48:23,500
somewhere and you want to add a sweeter version of that. Yes. So what do you think about this?

797
00:48:23,500 --> 00:48:25,300
is like, is it enough information here?

798
00:48:25,300 --> 00:48:29,900
No, unfortunately, I have to assume many things here.

799
00:48:29,900 --> 00:48:30,900
Yes.

800
00:48:30,900 --> 00:48:38,020
So if one thing I can ask you, if I see that you haven't

801
00:48:38,020 --> 00:48:41,140
assigned it here, but if you want to work on it,

802
00:48:41,140 --> 00:48:43,740
you can assign to yourself here.

803
00:48:43,740 --> 00:48:47,260
And there are some levels we could add.

804
00:48:47,260 --> 00:48:50,380
If it is bulk documentation enhancement,

805
00:48:50,380 --> 00:48:54,860
I assume that you are supposed to enhance something already there.

806
00:48:55,420 --> 00:48:55,740
Yeah.

807
00:48:55,820 --> 00:49:01,900
So there's also a good way to add here, assign labels and et cetera.

808
00:49:01,940 --> 00:49:07,580
And if I don't find things, maybe provide a bit more context on this.

809
00:49:07,740 --> 00:49:12,820
I, we can have a conversation if it is not, if you are not working on it also,

810
00:49:12,820 --> 00:49:18,100
but on an issue, as a collaborator, we can have a discussion and find out a

811
00:49:18,100 --> 00:49:23,900
common ground to further develop this problem or improvement

812
00:49:23,900 --> 00:49:25,260
or anything.

813
00:49:25,260 --> 00:49:30,700
So now you found my issue, and the quality of the issue

814
00:49:30,700 --> 00:49:31,420
is not that good.

815
00:49:31,420 --> 00:49:32,900
It's not descriptive.

816
00:49:32,900 --> 00:49:34,500
So that should be more mentioning.

817
00:49:34,500 --> 00:49:37,700
And you found that it's better to add a label itself.

818
00:49:37,700 --> 00:49:40,300
So could you add a label for me, a suitable label,

819
00:49:40,300 --> 00:49:41,620
so it will be the next person who

820
00:49:41,620 --> 00:49:44,220
will see the issue as better?

821
00:49:44,220 --> 00:49:47,820
Yes, and I just want to mention that this label

822
00:49:47,820 --> 00:49:50,580
is different for projects, you can edit labels.

823
00:49:50,580 --> 00:49:54,500
You can add labels according to your project needs.

824
00:49:54,500 --> 00:49:58,540
So you can add like in progress or whatever you want,

825
00:49:58,540 --> 00:50:00,860
that there is an option to edit labels,

826
00:50:00,860 --> 00:50:03,580
but this is already mentioned some labels.

827
00:50:03,580 --> 00:50:05,700
So I will use an enhancement.

828
00:50:07,020 --> 00:50:12,020
Maybe I will ask [name] to give more context to this.

829
00:50:13,380 --> 00:50:17,620
I can mention him here.

830
00:50:17,620 --> 00:50:20,780
So [name] will get notified whenever I mention

831
00:50:20,780 --> 00:50:21,860
and comment it here.

832
00:50:21,860 --> 00:50:23,580
So we can have a conversation.

833
00:50:26,740 --> 00:50:29,420
And then one more thing that might be a little confusing

834
00:50:29,420 --> 00:50:31,900
is that the question 21,

835
00:50:34,420 --> 00:50:37,940
the question that asked about this permission issues,

836
00:50:37,940 --> 00:50:40,980
opening an issue will not give you permission on this repo.

837
00:50:40,980 --> 00:50:43,740
So what I mentioned in the beginning about opening issue

838
00:50:43,740 --> 00:50:45,020
was there was this repository

839
00:50:45,020 --> 00:50:48,580
that we were giving permissions, adding you to a group.

840
00:50:48,580 --> 00:50:51,420
So you had to open issue there, so we can manually

841
00:50:51,420 --> 00:50:53,860
take your username and give you permission.

842
00:50:53,860 --> 00:50:56,100
So opening an issue in this report

843
00:50:56,100 --> 00:50:58,460
does not mean you get permission to push.

844
00:50:58,460 --> 00:50:59,900
So just a clarification.

845
00:50:59,900 --> 00:51:02,780
Yeah, good point, [shari].

846
00:51:02,780 --> 00:51:05,740
So we can have a conversation here,

847
00:51:05,740 --> 00:51:09,420
but just let us go to your full request.

848
00:51:09,420 --> 00:51:11,980
Yeah.

849
00:51:11,980 --> 00:51:18,900
So I can see that you have one commit and one file changed.

850
00:51:18,900 --> 00:51:20,300
Shall we go?

851
00:51:20,300 --> 00:51:22,460
Yes.

852
00:51:22,460 --> 00:51:26,460
So I purposefully made it extremely sweet.

853
00:51:26,460 --> 00:51:28,700
So maybe it doesn't fit.

854
00:51:28,700 --> 00:51:31,900
Maybe you could see whether that's OK.

855
00:51:31,900 --> 00:51:36,900
And I could change if it doesn't.

856
00:51:36,900 --> 00:51:39,660
So this is now we are actually in the review process, which

857
00:51:39,660 --> 00:51:43,700
is the next topic that we're going to talk about.

858
00:51:43,700 --> 00:51:46,260
But we'll start from now itself.

859
00:51:46,260 --> 00:51:50,100
So how do you make a suggestion, [name],

860
00:51:50,100 --> 00:51:55,340
in addition to being polite and being considerate?

861
00:51:55,340 --> 00:51:59,220
Yeah, mostly I see that this is all these plus signs.

862
00:51:59,220 --> 00:52:05,100
That means it's only addition to these changes.

863
00:52:05,100 --> 00:52:06,980
Normally, if there is plus lines,

864
00:52:06,980 --> 00:52:09,660
I will not have much to look at it.

865
00:52:09,660 --> 00:52:11,180
That's how I work, because it's.

866
00:52:13,900 --> 00:52:16,380
But if you have some changes here,

867
00:52:16,380 --> 00:52:22,260
then you will see that there is a red color rather than

868
00:52:22,260 --> 00:52:24,500
a green color, right?

869
00:52:24,500 --> 00:52:26,260
That's a good point, [name].

870
00:52:26,260 --> 00:52:30,340
So if it is an existing file, and it has a difference,

871
00:52:30,340 --> 00:52:34,140
the things added will be green, things deleted will be red.

872
00:52:34,140 --> 00:52:38,580
But because this is a new file that Kit didn't know before,

873
00:52:38,580 --> 00:52:39,820
everything is green.

874
00:52:39,820 --> 00:52:43,620
Yeah, you can see that here, plus 37 lines added,

875
00:52:43,620 --> 00:52:45,820
there is no line changed.

876
00:52:45,820 --> 00:52:49,780
This is something I will look into it first.

877
00:52:49,780 --> 00:52:53,660
Mostly there is something changed.

878
00:52:53,660 --> 00:52:56,180
Then what about line 17?

879
00:52:56,180 --> 00:52:59,100
What do you think in this file?

880
00:52:59,100 --> 00:53:00,620
40 cups sugar.

881
00:53:00,620 --> 00:53:02,420
Yeah.

882
00:53:02,420 --> 00:53:04,780
So yes.

883
00:53:04,780 --> 00:53:08,700
Yeah, I will click on this plus sign or on this line,

884
00:53:08,700 --> 00:53:11,460
and I will.

885
00:53:11,460 --> 00:53:14,820
OK, yeah, it's too sweet, isn't it?

886
00:53:18,620 --> 00:53:23,460
Then when you, yeah, so just send me the,

887
00:53:23,460 --> 00:53:25,660
when you click the button, I'll also get the message

888
00:53:25,660 --> 00:53:27,020
that you informed that.

889
00:53:32,420 --> 00:53:44,940
Yeah, so I see that you're using like maybe words like maybe, could, you know, the feedback

890
00:53:44,940 --> 00:53:51,740
should be, you know, it should be, you know, positive in a way that, you know, the changes

891
00:53:51,740 --> 00:53:56,700
are sent, but it should start kind of like a negative conversation saying, you know,

892
00:53:56,700 --> 00:53:57,700
this is bad.

893
00:53:57,700 --> 00:53:58,700
Can we change it?

894
00:53:58,700 --> 00:54:00,540
You could use the same thing.

895
00:54:00,540 --> 00:54:02,860
You could convey the message that it

896
00:54:02,860 --> 00:54:05,100
has to be changed in the polite language.

897
00:54:05,100 --> 00:54:12,500
I see that you are being extremely polite.

898
00:54:12,500 --> 00:54:13,620
What does beta mean?

899
00:54:13,620 --> 00:54:14,580
Oh, by the way.

900
00:54:14,580 --> 00:54:17,140
Yeah, OK.

901
00:54:17,140 --> 00:54:19,100
Yeah, thanks for the recipe.

902
00:54:19,100 --> 00:54:24,420
And then I will add this single comment or start review.

903
00:54:24,420 --> 00:54:25,660
Where do you do?

904
00:54:25,660 --> 00:54:26,540
What do you do?

905
00:54:26,540 --> 00:54:27,820
So you could start the review.

906
00:54:27,820 --> 00:54:30,980
So, yes.

907
00:54:30,980 --> 00:54:35,380
Yeah, so then let me check whether I got that message.

908
00:54:41,620 --> 00:54:42,540
Let me see.

909
00:54:42,540 --> 00:54:43,780
Yes, you have done that.

910
00:54:46,900 --> 00:54:48,300
Slight delay on my part.

911
00:54:48,300 --> 00:54:49,300
I'm still waiting.

912
00:54:55,580 --> 00:54:56,080
OK.

913
00:54:57,820 --> 00:55:08,780
Yes, I've still not got it.

914
00:55:08,780 --> 00:55:15,380
But until that, my side refreshes.

915
00:55:15,380 --> 00:55:18,460
Let's say if you want to make a change directly, how would you do that?

916
00:55:18,460 --> 00:55:23,240
So I will answer this, the 40 cups sugar in a moment.

917
00:55:23,240 --> 00:55:26,400
But let's say if you want to change, for example,

918
00:55:26,400 --> 00:55:29,240
salt amount, is it possible as a reviewer

919
00:55:29,240 --> 00:55:32,040
for you to suggest a change directly in addition

920
00:55:32,040 --> 00:55:33,400
to asking me?

921
00:55:33,400 --> 00:55:35,640
Yeah, I can directly suggest that.

922
00:55:35,640 --> 00:55:41,400
For that, I usually go to the branch and do the changes.

923
00:55:41,400 --> 00:55:44,240
But there is the, yeah, go ahead, Sudhir.

924
00:55:44,240 --> 00:55:50,040
Yeah, so I mean, during the review process,

925
00:55:50,040 --> 00:55:52,080
that let's say if you want to change something,

926
00:55:52,080 --> 00:55:57,080
you don't have to necessarily like open a new pull request

927
00:55:57,100 --> 00:55:57,940
or close it.

928
00:55:57,940 --> 00:55:59,720
So that's what you are trying to say maybe.

929
00:55:59,720 --> 00:56:02,920
Yes, yes, yeah, that's right.

930
00:56:02,920 --> 00:56:06,120
So if I'm a collaborator,

931
00:56:06,120 --> 00:56:11,120
I have this permission to edit [name]'s branch

932
00:56:11,280 --> 00:56:14,160
that he put, that's this pull request.

933
00:56:14,160 --> 00:56:17,480
You can see that main from [name] sweet pumpkin.

934
00:56:17,480 --> 00:56:19,560
So I can go and edit that.

935
00:56:19,560 --> 00:56:21,520
So I will have the commit there.

936
00:56:23,040 --> 00:56:26,560
And then the pull request will be updated accordingly.

937
00:56:26,560 --> 00:56:31,560
There is no need for me to change anything there.

938
00:56:31,560 --> 00:56:32,680
Yes.

939
00:56:32,680 --> 00:56:38,480
Another thing we can do in the interface itself,

940
00:56:38,480 --> 00:56:41,600
I see that because I'm not getting this, because you

941
00:56:41,600 --> 00:56:43,560
are not finished your review.

942
00:56:43,560 --> 00:56:47,880
Maybe we could, in that, yes.

943
00:56:47,880 --> 00:56:52,040
If you can finish the review and make a commit

944
00:56:52,040 --> 00:56:55,440
without approving it, then I might get the message.

945
00:56:55,440 --> 00:56:57,040
So that is also a good thing that we

946
00:56:57,040 --> 00:57:00,200
so that until you finish it, I don't get the message just

947
00:57:00,200 --> 00:57:02,400
by answering that question.

948
00:57:02,400 --> 00:57:04,280
So I can make this change?

949
00:57:04,280 --> 00:57:04,780
Yeah.

950
00:57:12,680 --> 00:57:13,180
Yeah?

951
00:57:15,880 --> 00:57:16,400
Yes.

952
00:57:16,400 --> 00:57:17,600
So you could submit that.

953
00:57:23,280 --> 00:57:26,560
Okay, now I got it. So I'm going to.

954
00:57:39,120 --> 00:57:42,960
Meanwhile, I will check if there is some questions that we need to answer.

955
00:57:46,400 --> 00:57:59,800
Yeah, so then I, I replied to that, did you, did you see my reply?

956
00:57:59,800 --> 00:58:04,280
Maybe a refresh of the pull request itself.

957
00:58:04,280 --> 00:58:06,280
Yeah.

958
00:58:06,280 --> 00:58:08,280
Okay.

959
00:58:08,280 --> 00:58:14,640
Okay, so then somebody else has mentioned that as well.

960
00:58:14,640 --> 00:58:32,640
What I'm saying here is that, okay, no, thank you, indeed, you know, you've found it, but I'm on a flight, you know, this is this internet on the flight. So let's see later whether you could change it for me. So the way, you know, the web interface that we could you do this easily as a reviewer is that if you go back to the file itself.

961
00:58:38,640 --> 00:58:41,640
If you go to that 40, the number 17

962
00:58:41,640 --> 00:58:54,040
Maybe on the on the last, yeah, yes, okay, when you click that, what happens?

963
00:58:54,040 --> 00:58:55,040
Nothing happens.

964
00:58:55,040 --> 00:58:56,040
That's strange.

965
00:58:56,040 --> 00:58:57,040
Okay.

966
00:58:57,040 --> 00:58:58,040
Yeah.

967
00:58:58,040 --> 00:59:01,860
So that's, that's another another good catch as well.

968
00:59:01,860 --> 00:59:08,640
So what I will do is that maybe if you go further downward, you see, yeah, so it's other

969
00:59:08,640 --> 00:59:09,720
part of this fight.

970
00:59:09,720 --> 00:59:14,720
So what I will do is, I will resolve this conversation.

971
00:59:14,720 --> 00:59:16,200
You want to take over the screen?

972
00:59:16,200 --> 00:59:16,960
No, no, no, no.

973
00:59:16,960 --> 00:59:19,480
We have to find out how to do it properly,

974
00:59:19,480 --> 00:59:22,760
because it's not happening as I expected,

975
00:59:22,760 --> 00:59:25,120
but we'll figure it out.

976
00:59:25,120 --> 00:59:26,160
If you refresh it again.

977
00:59:30,840 --> 00:59:37,000
OK, now if you go to plus again, the yeah.

978
00:59:37,000 --> 00:59:40,560
And you see that you have Google,

979
00:59:40,560 --> 00:59:41,860
not that one, the plus.

980
00:59:42,920 --> 00:59:46,520
And then after right, you have the button called review.

981
00:59:46,520 --> 00:59:47,920
After that, you have this plus sign.

982
00:59:47,920 --> 00:59:49,080
You go to right again.

983
00:59:50,380 --> 00:59:53,100
After review, you find a small button.

984
00:59:54,520 --> 00:59:59,520
If you click that, you could actually change from 40 to four

985
01:00:02,960 --> 01:00:04,720
if you, yes, you could do a space

986
01:00:04,720 --> 01:00:07,720
and then you could start the review.

987
01:00:07,720 --> 01:00:12,720
Or like, you know, you could actually add the comment there.

988
01:00:13,000 --> 01:00:18,000
And then you could finish up the review process.

989
01:00:21,320 --> 01:00:22,480
You could actually approve it now

990
01:00:22,480 --> 01:00:24,080
because now you have changed it.

991
01:00:30,240 --> 01:00:34,000
Then now what happened is that

992
01:00:34,000 --> 01:00:36,240
without even going to the terminal,

993
01:00:36,240 --> 01:00:38,080
so you managed to find some issue

994
01:00:38,080 --> 01:00:40,040
and you informed with me in a very polite

995
01:00:40,040 --> 01:00:44,960
and very positive way, the positive feedback.

996
01:00:44,960 --> 01:00:48,200
And then I couldn't change it for some reason.

997
01:00:48,200 --> 01:00:51,480
And then as a reviewer, you managed to do the change

998
01:00:51,480 --> 01:00:54,200
without even making a branch or anything.

999
01:00:54,200 --> 01:00:55,160
You were in the same branch,

1000
01:00:55,160 --> 01:00:58,040
were in the same pull request, same narrative,

1001
01:00:58,040 --> 01:01:03,040
the same discussions going on,

1002
01:01:03,040 --> 01:01:05,160
on, the issue would be updated.

1003
01:01:05,160 --> 01:01:06,520
We did that there.

1004
01:01:06,520 --> 01:01:07,020
Yes.

1005
01:01:07,020 --> 01:01:09,120
And I need to commit the suggestion.

1006
01:01:09,120 --> 01:01:11,400
Correct.

1007
01:01:11,400 --> 01:01:13,440
Yeah.

1008
01:01:13,440 --> 01:01:15,800
And you could have a commit message there,

1009
01:01:15,800 --> 01:01:18,560
saying this was actually [name] who

1010
01:01:18,560 --> 01:01:25,680
tried to make it sick, not sick, too sweet.

1011
01:01:25,680 --> 01:01:30,200
So we had to reduce the sugar amount.

1012
01:01:30,200 --> 01:01:31,600
And oh, maybe it was a typo.

1013
01:01:34,960 --> 01:01:37,440
OK.

1014
01:01:37,440 --> 01:01:39,200
Assuming.

1015
01:01:39,200 --> 01:01:40,480
Yeah.

1016
01:01:40,480 --> 01:01:41,680
And then commit changes.

1017
01:01:45,240 --> 01:01:48,080
So one thing I want to show you here,

1018
01:01:48,080 --> 01:01:50,480
earlier it was only one commit.

1019
01:01:50,480 --> 01:01:54,160
And I did change this suggestion commit.

1020
01:01:54,160 --> 01:01:56,640
You can see that there are two commits.

1021
01:01:56,640 --> 01:01:58,840
And let's go and see that.

1022
01:02:00,200 --> 01:02:07,280
So first, once [name] mentioned and in that commit [name] mentioned the issue as well

1023
01:02:07,280 --> 01:02:14,440
that he was working on and then I fix, I committed the suggestion that I made.

1024
01:02:14,440 --> 01:02:15,440
Okay.

1025
01:02:15,440 --> 01:02:19,440
Shall we go back and merge it?

1026
01:02:19,440 --> 01:02:22,280
Yes, please.

1027
01:02:22,280 --> 01:02:28,080
So do you have, you have mentioned two issues here and let's see what happens when we merge

1028
01:02:28,080 --> 01:02:29,080
the pull request.

1029
01:02:29,080 --> 01:02:29,580
to the issue.

1030
01:02:29,580 --> 01:02:32,000
Have I mentioned two issues?

1031
01:02:32,000 --> 01:02:33,720
I think.

1032
01:02:33,720 --> 01:02:36,000
Uh-huh, yes.

1033
01:02:36,000 --> 01:02:37,240
That's actually a typo.

1034
01:02:37,240 --> 01:02:42,040
So before you close that, let me edit that title a little bit.

1035
01:02:45,360 --> 01:02:48,120
So you can do that with the edit?

1036
01:02:48,120 --> 01:02:52,000
No, actually, it is actually the, yeah.

1037
01:02:52,000 --> 01:02:53,760
So yeah, so that's a good point.

1038
01:02:53,760 --> 01:02:55,760
So it is not actually referring to two issues.

1039
01:02:55,760 --> 01:02:58,200
That means that it is the pull request number 26.

1040
01:02:58,200 --> 01:02:58,700
Oh, yeah.

1041
01:02:58,700 --> 01:03:02,700
In the title, I have mentioned the issue.

1042
01:03:02,700 --> 01:03:05,300
Yeah, yeah, of course.

1043
01:03:05,300 --> 01:03:07,260
Yeah, that's a good point.

1044
01:03:07,260 --> 01:03:08,180
Yes.

1045
01:03:08,180 --> 01:03:10,020
Yes, and I reviewed.

1046
01:03:10,020 --> 01:03:13,780
And maybe what you usually do, you say thank you message.

1047
01:03:13,780 --> 01:03:16,020
And I see [name] all the time saying thank you.

1048
01:03:16,020 --> 01:03:18,940
And he mentioned something.

1049
01:03:18,940 --> 01:03:20,380
Yeah, so he's too polite.

1050
01:03:20,380 --> 01:03:22,900
So yeah, we could mention that.

1051
01:03:22,900 --> 01:03:23,820
OK, now it's solved.

1052
01:03:23,820 --> 01:03:24,500
Thank you.

1053
01:03:24,500 --> 01:03:25,740
Yes.

1054
01:03:25,740 --> 01:03:27,660
And there are some questions in the HackMD,

1055
01:03:27,660 --> 01:03:30,540
The shared document, we'll come back to that a little later.

1056
01:03:30,540 --> 01:03:33,420
I see a lot of discussions going on with our colleagues.

1057
01:03:33,420 --> 01:03:33,940
OK.

1058
01:03:33,940 --> 01:03:35,420
Yeah, that's where we'll come back.

1059
01:03:38,580 --> 01:03:40,820
Now it's done.

1060
01:03:40,820 --> 01:03:41,500
So it's done.

1061
01:03:41,500 --> 01:03:43,820
And maybe we could just delete the branch as well,

1062
01:03:43,820 --> 01:03:46,980
because otherwise it'll collect a lot of unnecessary branches.

1063
01:03:46,980 --> 01:03:47,740
Yes.

1064
01:03:47,740 --> 01:03:48,380
That's done.

1065
01:03:48,380 --> 01:03:49,180
It's gone.

1066
01:03:49,180 --> 01:03:52,460
Deleting the branch doesn't lose any information,

1067
01:03:52,460 --> 01:03:53,980
because everything in that branch

1068
01:03:53,980 --> 01:03:56,820
is now integrated into the main branch.

1069
01:03:56,820 --> 01:04:00,180
Yeah, I just want to check what happened to the issue you created.

1070
01:04:03,780 --> 01:04:04,820
Yeah, it's closed.

1071
01:04:05,700 --> 01:04:09,380
If you click on the closed one and click on number 16.

1072
01:04:12,260 --> 01:04:16,740
Yeah, take one issue and type 16 at the end in the URL, maybe it's easier to

1073
01:04:19,540 --> 01:04:21,460
anything and at the end type 16.

1074
01:04:22,100 --> 01:04:24,100
Yeah, because it's a bit difficult for me.

1075
01:04:24,100 --> 01:04:25,100
Okay.

1076
01:04:25,100 --> 01:04:26,100
Okay.

1077
01:04:26,100 --> 01:04:27,100
Let me see.

1078
01:04:27,100 --> 01:04:28,100
Closed.

1079
01:04:28,100 --> 01:04:31,100
Yeah, it's further down now, under closed, yes.

1080
01:04:31,100 --> 01:04:34,100
Yeah, you have one closed tissue.

1081
01:04:34,100 --> 01:04:35,100
Yes.

1082
01:04:35,100 --> 01:04:37,100
So I can get it.

1083
01:04:37,100 --> 01:04:38,100
Yes.

1084
01:04:38,100 --> 01:04:39,100
That's a good.

1085
01:04:39,100 --> 01:04:40,100
Okay.

1086
01:04:40,100 --> 01:04:43,100
Can you, can you briefly explain what, how you found that again?

1087
01:04:43,100 --> 01:04:44,100
Yeah, I can.

1088
01:04:44,100 --> 01:04:52,660
issue. So I filter it. Yes, that's a good. Can you briefly explain how you found that again?

1089
01:04:53,380 --> 01:05:01,460
Yeah, I can. So we have issues and I was trying to see if [name]'s issue is here and I was not

1090
01:05:01,460 --> 01:05:09,860
able to find it. So I know that [name] was created with the issue. So he is the author. So I clicked

1091
01:05:14,100 --> 01:05:20,080
His name and I see there is no open issue on under his name and one closed issue.

1092
01:05:20,080 --> 01:05:25,000
So this is the one I found it like that.

1093
01:05:25,000 --> 01:05:32,240
You can use GitHub for many other like this, but it's not necessary that you need to find

1094
01:05:32,240 --> 01:05:33,240
everything today.

1095
01:05:33,240 --> 01:05:39,840
This is for you to have a hands on and we will.

1096
01:05:39,840 --> 01:05:43,280
I think when we do things only, we will find many ways.

1097
01:05:43,280 --> 01:05:48,200
I think I have to find many functions on the GitHub yet,

1098
01:05:48,200 --> 01:05:50,880
because I use GitLab every day.

1099
01:05:50,880 --> 01:05:54,400
Sometimes it's a bit difficult to find it here.

1100
01:05:54,400 --> 01:05:56,680
But that's OK.

1101
01:05:56,680 --> 01:06:00,440
It's the matter of time that you practice.

1102
01:06:00,440 --> 01:06:01,360
Yes.

1103
01:06:01,360 --> 01:06:03,320
And you can also see in the issue, [name],

1104
01:06:03,320 --> 01:06:06,440
the commit message, the commit that you did,

1105
01:06:06,440 --> 01:06:08,640
the hash for the commit, and also the merge request.

1106
01:06:08,640 --> 01:06:09,640
Everything is linked.

1107
01:06:09,640 --> 01:06:11,720
So you have some paper trail here as well.

1108
01:06:11,720 --> 01:06:13,000
Yeah.

1109
01:06:13,000 --> 01:06:13,800
Yes, OK.

1110
01:06:13,800 --> 01:06:20,000
I think that sort of summarizes what

1111
01:06:20,000 --> 01:06:26,000
we will plan to do for that part of the exercise.

1112
01:06:26,000 --> 01:06:29,520
Shall we have a look at the shared document as you add it

1113
01:06:29,520 --> 01:06:30,520
and see?

1114
01:06:30,520 --> 01:06:34,120
Let me check our chat to see whether our colleagues found

1115
01:06:34,120 --> 01:06:34,920
out something.

1116
01:06:34,920 --> 01:06:35,420
Yes.

1117
01:06:39,640 --> 01:06:42,120
There was supposed to be a mic option like yesterday,

1118
01:06:42,120 --> 01:06:43,600
And I didn't see that, so.

1119
01:06:47,080 --> 01:06:48,200
Question number 20.

1120
01:06:48,200 --> 01:06:50,000
Can you score what was it about?

1121
01:06:50,000 --> 01:06:51,200
Let's see.

1122
01:06:51,200 --> 01:06:54,240
Our colleague [name] is mentioning about it.

1123
01:06:54,240 --> 01:06:54,740
OK.

1124
01:06:54,740 --> 01:06:55,480
Interaction.

1125
01:06:58,600 --> 01:07:01,880
How to push and pull from local repository to GitHub, maybe.

1126
01:07:04,840 --> 01:07:05,340
OK.

1127
01:07:05,340 --> 01:07:12,460
So I think what I'll do is I can show that,

1128
01:07:12,460 --> 01:07:16,700
because we were doing on the terminal a lot.

1129
01:07:16,700 --> 01:07:19,340
Sorry, on the web page, because we

1130
01:07:19,340 --> 01:07:21,260
want to make it a little simple.

1131
01:07:21,260 --> 01:07:26,300
But I can show how to do that on the terminal,

1132
01:07:26,300 --> 01:07:27,180
if that makes sense.

1133
01:07:27,180 --> 01:07:29,220
How are we on time, Daniel?

1134
01:07:29,220 --> 01:07:32,940
I think we have almost 18 minutes till lunch break.

1135
01:07:32,940 --> 01:07:34,260
OK.

1136
01:07:34,260 --> 01:07:41,460
So is the next one we are starting after the lunch?

1137
01:07:41,460 --> 01:07:42,180
Yeah.

1138
01:07:42,180 --> 01:07:44,980
But I would like to discuss a little bit on the review

1139
01:07:44,980 --> 01:07:47,540
process and things.

1140
01:07:47,540 --> 01:07:52,860
Would be nice that we talk a little bit about the review.

1141
01:07:52,860 --> 01:07:55,820
So do you expect that if we collaborate,

1142
01:07:55,820 --> 01:07:59,340
only the owner or admin will review?

1143
01:07:59,340 --> 01:08:02,700
Or how do you explain the reviewing?

1144
01:08:02,700 --> 01:08:07,060
because I reviewed it, and I just want to say that all of you

1145
01:08:07,060 --> 01:08:09,820
can review each other's pull request

1146
01:08:09,820 --> 01:08:11,300
and comment it just like that.

1147
01:08:11,300 --> 01:08:14,340
It is not any hierarchy here.

1148
01:08:14,340 --> 01:08:17,700
And this is, we all are collaborators

1149
01:08:17,700 --> 01:08:20,100
in a collaborating repository.

1150
01:08:20,100 --> 01:08:22,460
So there is no senior, junior,

1151
01:08:22,460 --> 01:08:26,420
no differences with reviewing.

1152
01:08:26,420 --> 01:08:29,020
And you can see that what I was doing,

1153
01:08:30,020 --> 01:08:32,220
you learn by reviewing many things.

1154
01:08:32,700 --> 01:08:38,660
So, actively participate in code reviewing, that's somewhere you can learn a lot and it

1155
01:08:38,660 --> 01:08:48,380
should not be anything role-based or any supervisor or anyone.

1156
01:08:48,380 --> 01:08:53,420
Any collaborator should be able to review things and have a conversation and one thing

1157
01:08:53,420 --> 01:09:00,380
to make sure what I would suggest is to have a good collaborative environment on your repository.

1158
01:09:00,380 --> 01:09:03,660
being polite what we said.

1159
01:09:07,020 --> 01:09:10,460
Anything you want to add [name] regarding that?

1160
01:09:10,460 --> 01:09:13,580
Yeah, I think that's a perfect explanation.

1161
01:09:13,580 --> 01:09:17,580
The

1162
01:09:19,420 --> 01:09:23,020
one thing actually like in companies

1163
01:09:23,020 --> 01:09:26,620
also like in the working environments like we are

1164
01:09:26,620 --> 01:09:30,300
is that it's okay for a junior person to review let's say if there's

1165
01:09:30,300 --> 01:09:34,380
as a new colleague, that person could review experienced

1166
01:09:34,380 --> 01:09:36,020
persons' commits as well.

1167
01:09:36,020 --> 01:09:39,020
So that's also a learning experience.

1168
01:09:39,020 --> 01:09:41,740
So I set up my terminal, [name].

1169
01:09:41,740 --> 01:09:44,500
So I could just show these things

1170
01:09:44,500 --> 01:09:48,020
because there's a very specific question about it.

1171
01:09:48,020 --> 01:09:48,740
Yes.

1172
01:09:48,740 --> 01:09:49,940
I'll take over the screen.

1173
01:09:57,380 --> 01:09:59,540
Let me fix my terminal a little bit.

1174
01:09:59,540 --> 01:10:02,060
Is my terminal font visible?

1175
01:10:02,060 --> 01:10:06,940
Is it enough or should I make it a little bigger?

1176
01:10:06,940 --> 01:10:08,060
OK.

1177
01:10:08,060 --> 01:10:09,780
I am sharing, so.

1178
01:10:09,780 --> 01:10:12,380
Yeah, [name], you need to stop.

1179
01:10:12,380 --> 01:10:14,380
OK.

1180
01:10:14,380 --> 01:10:15,940
After [name] stops, I'll do that.

1181
01:10:15,940 --> 01:10:19,100
So the question is that this pooling and pushing

1182
01:10:19,100 --> 01:10:21,860
and the terms that we used.

1183
01:10:21,860 --> 01:10:25,860
We used the browser to show you the setup,

1184
01:10:25,860 --> 01:10:27,220
so we didn't come to the terminal.

1185
01:10:27,220 --> 01:10:29,740
but what we can do is that,

1186
01:10:29,740 --> 01:10:31,900
let me adjust my screen a little bit.

1187
01:10:35,180 --> 01:10:36,980
So I don't want to show my desktop.

1188
01:10:36,980 --> 01:10:37,820
Yeah.

1189
01:10:41,440 --> 01:10:43,140
So this is the repository we have.

1190
01:10:43,140 --> 01:10:48,140
So here I go to the recorded one

1191
01:10:48,420 --> 01:10:52,940
because I don't want to show the private one.

1192
01:10:52,940 --> 01:10:59,580
centralized template for centralized workflow.

1193
01:10:59,580 --> 01:11:03,580
So this is the exercise report that we had.

1194
01:11:03,580 --> 01:11:04,540
So there's an issue.

1195
01:11:04,540 --> 01:11:08,980
So I open another issue.

1196
01:11:13,700 --> 01:11:15,780
I'll be a little quick,

1197
01:11:15,780 --> 01:11:17,660
but these are not good comments.

1198
01:11:17,660 --> 01:11:22,660
We have to, so I opened an issue and then submit it,

1199
01:11:28,180 --> 01:11:32,380
but that we do it in the GitHub interface,

1200
01:11:32,380 --> 01:11:33,220
not on the terminal.

1201
01:11:33,220 --> 01:11:34,120
So that's done.

1202
01:11:37,500 --> 01:11:39,220
And then I go to the code.

1203
01:11:40,380 --> 01:11:44,140
I take the SSH and I clone it, copy.

1204
01:11:44,140 --> 01:11:52,340
And I could also show one more thing here is that I already cloned that repository before.

1205
01:11:52,340 --> 01:11:54,620
So I have something with the same name.

1206
01:11:54,620 --> 01:12:08,260
So what I will do is I will clone it, but I'll give a new name.

1207
01:12:08,260 --> 01:12:13,100
So when you are cloning it, you could specify which name to give.

1208
01:12:13,100 --> 01:12:16,740
If you don't do that, it'll use the name of the repository.

1209
01:12:16,740 --> 01:12:20,800
So I have two folders now.

1210
01:12:20,800 --> 01:12:22,040
So that is the cloning process.

1211
01:12:22,040 --> 01:12:25,600
I got a copy down to my laptop.

1212
01:12:25,600 --> 01:12:29,520
So I go to my new repository.

1213
01:12:31,280 --> 01:12:32,840
Let me go up a little bit

1214
01:12:32,840 --> 01:12:34,840
so I have more real estate to show you.

1215
01:12:37,160 --> 01:12:38,360
So I have these folders.

1216
01:12:38,360 --> 01:12:41,080
Maybe I'll go to deserts.

1217
01:12:41,080 --> 01:12:45,400
So I went to that desert and I'll check the branch.

1218
01:12:48,360 --> 01:12:50,720
Git branch, this commands we learn.

1219
01:12:50,720 --> 01:12:52,440
So I'm in the main branch.

1220
01:12:52,440 --> 01:12:54,580
I will check the git status.

1221
01:12:55,720 --> 01:12:57,160
So status is clean.

1222
01:12:57,160 --> 01:13:00,360
So there was the, one other question was to accidentally

1223
01:13:01,720 --> 01:13:04,440
start working on the main branch and what to do.

1224
01:13:04,440 --> 01:13:07,600
So I will imagine that, you know,

1225
01:13:07,600 --> 01:13:11,020
I forgot to create a branch, but I start working.

1226
01:13:11,080 --> 01:13:16,080
Let's see, I'll copy the chickpeas recipe

1227
01:13:16,700 --> 01:13:19,460
because I don't want to create a new one, new chickpeas.

1228
01:13:21,340 --> 01:13:24,500
So this simulates that I create a new file.

1229
01:13:26,060 --> 01:13:27,520
Then I edit that.

1230
01:13:31,220 --> 01:13:32,340
Let's make it two.

1231
01:13:33,660 --> 01:13:36,540
And when you edit that,

1232
01:13:36,540 --> 01:13:39,300
my muscle memory opened the Vim editor.

1233
01:13:39,300 --> 01:13:41,460
So you could be the editor of your choice

1234
01:13:41,460 --> 01:13:43,980
that we learned yesterday.

1235
01:13:43,980 --> 01:13:46,860
And now I did something on the main branch.

1236
01:13:46,860 --> 01:13:49,820
But there's still more time to create a new branch.

1237
01:13:49,820 --> 01:13:52,540
So I ask git status.

1238
01:13:52,540 --> 01:13:56,740
There is a modified file here.

1239
01:13:56,740 --> 01:14:00,020
But I could still create git.

1240
01:14:00,020 --> 01:14:02,860
If you learned the commands, the practice yesterday,

1241
01:14:02,860 --> 01:14:05,540
you could do this in one command, actually.

1242
01:14:05,540 --> 01:14:09,140
I'm going to check out.

1243
01:14:09,140 --> 01:14:24,340
a new branch called, I'll call it the piece, with an S to make it a little funnier.

1244
01:14:25,620 --> 01:14:29,060
Then I'm in the new branch, git status.

1245
01:14:32,980 --> 01:14:38,180
So it says that command was not found because I misspelled it, status.

1246
01:14:38,180 --> 01:14:40,860
So a new file is still there.

1247
01:14:40,860 --> 01:14:44,380
I will ask git branch.

1248
01:14:44,380 --> 01:14:45,820
So I'm in the correct branch.

1249
01:14:45,820 --> 01:14:46,900
Now I can commit.

1250
01:14:46,900 --> 01:14:52,540
So I created the file while I'm in the main branch, but still there's room to switch to

1251
01:14:52,540 --> 01:14:53,740
a new branch.

1252
01:14:53,740 --> 01:15:07,740
I will git add new this video learn, then git commit with a message, this fixes issue

1253
01:15:07,740 --> 01:15:09,660
42.

1254
01:15:09,660 --> 01:15:11,900
So I did that.

1255
01:15:11,900 --> 01:15:22,100
So then I ask it status, again wrong spellings, status, now everything is clean.

1256
01:15:22,100 --> 01:15:25,860
but I can do is do that push. I pull

1257
01:15:26,660 --> 01:15:35,460
push it again, git push origin. So the origin is the

1258
01:15:36,500 --> 01:15:42,260
the place I copied from. So there's a label given to that origin. I want to do it upstream.

1259
01:15:42,820 --> 01:15:47,380
It depends on your setup on your local computer, but this is safer to make mention

1260
01:15:47,380 --> 01:15:51,540
that, you know, I had to send upstream

1261
01:16:09,940 --> 01:16:16,340
a pull request now in order to incorporate it. So we pulled it to a local computer,

1262
01:16:16,340 --> 01:16:20,100
we made the changes, we pushed it, and then we're going to send compare pull request.

1263
01:16:21,700 --> 01:16:29,380
Then I will send fixes. Okay, I'm going to get it here.

1264
01:16:29,380 --> 01:16:49,540
I think I spelled it wrongly, but I can check the spellings because Git is good at checking

1265
01:16:49,540 --> 01:16:52,500
the spellings.

1266
01:16:52,500 --> 01:16:55,660
So now that thing happened in the title

1267
01:16:55,660 --> 01:17:03,180
will not happen now with more details.

1268
01:17:03,180 --> 01:17:04,140
Create a pull request.

1269
01:17:04,140 --> 01:17:06,660
So we're seeing the word pull again.

1270
01:17:06,660 --> 01:17:09,940
But in GitLab, you will see the merge word.

1271
01:17:09,940 --> 01:17:12,500
So two different uses of that.

1272
01:17:12,500 --> 01:17:14,900
But this is a pull request, and earlier was a pull.

1273
01:17:14,900 --> 01:17:19,900
So that's what we meant by push and pull.

1274
01:17:19,900 --> 01:17:23,740
So, our colleagues, is that clear enough?

1275
01:17:28,220 --> 01:17:31,900
Yeah, I think it answers the question.

1276
01:17:31,900 --> 01:17:34,260
And what are we going to do next, [name]?

1277
01:17:34,260 --> 01:17:35,660
Are we going for a break or?

1278
01:17:38,380 --> 01:17:41,140
We are supposed to have a lunch break,

1279
01:17:41,140 --> 01:17:43,940
but do you want to take, we have some time left for that,

1280
01:17:43,940 --> 01:17:47,020
but do you want to take some question?

1281
01:17:47,020 --> 01:17:48,220
Yes, yes.

1282
01:17:48,220 --> 01:17:54,620
You still see my screen, so I'm going to open the notes.

1283
01:17:54,620 --> 01:18:01,780
I'll hide the terminal, so we don't need that anymore for the time being.

1284
01:18:01,780 --> 01:18:12,940
Maybe I can show you one more thing before I close the terminal, [name], is that, you

1285
01:18:12,940 --> 01:18:17,860
know, now we mentioned that the disconnection, the clone.

1286
01:18:17,860 --> 01:18:22,860
So now our local repository, main branch is,

1287
01:18:23,100 --> 01:18:28,100
I will clear this, we are in the git branch.

1288
01:18:29,900 --> 01:18:33,300
Again, I'm typing wrong spellings.

1289
01:18:33,300 --> 01:18:37,820
I mean this, my branch, but if I go to git checkout main,

1290
01:18:40,900 --> 01:18:44,460
main branch, my main branch would not have the same recipe

1291
01:18:44,460 --> 01:18:49,460
as the file I sent.

1292
01:18:49,940 --> 01:18:54,260
For example, let's see, was it in the cheat piece?

1293
01:18:54,260 --> 01:18:57,700
But if you see the file, what was that name?

1294
01:18:57,700 --> 01:18:59,820
I'll go back to my branch, let's just see.

1295
01:19:04,160 --> 01:19:07,080
So you see there's a new cheat piece,

1296
01:19:07,080 --> 01:19:08,880
it's not in the main branch.

1297
01:19:08,880 --> 01:19:13,880
So what I should do is I should go to the main branch

1298
01:19:14,460 --> 01:19:17,820
branch and do a git pull again.

1299
01:19:17,820 --> 01:19:22,540
Git pull, origin, main.

1300
01:19:22,540 --> 01:19:26,260
I'll increase the terminal a little bit.

1301
01:19:26,260 --> 01:19:29,820
So you see, what I'm going to do is get down

1302
01:19:29,820 --> 01:19:31,100
all the changes to main.

1303
01:19:31,100 --> 01:19:36,020
And then that command would bring down that change.

1304
01:19:36,020 --> 01:19:39,140
So this is how you synchronize on the terminal.

1305
01:19:39,140 --> 01:19:40,060
Yeah.

1306
01:19:40,060 --> 01:19:41,580
Just a comment on that.

1307
01:19:41,580 --> 01:19:43,860
You have seen push and pull.

1308
01:19:43,860 --> 01:19:48,460
That's something we use to communicate with the GitHub

1309
01:19:48,460 --> 01:19:50,700
repository from the command line.

1310
01:19:50,700 --> 01:19:53,100
But pull request is something different,

1311
01:19:53,100 --> 01:19:54,460
where you suggest the changes.

1312
01:19:57,620 --> 01:19:59,700
Sometimes it might be a bit confused.

1313
01:19:59,700 --> 01:20:01,420
You have pull and pull request.

1314
01:20:01,420 --> 01:20:03,860
So pull is the communication way.

1315
01:20:03,860 --> 01:20:06,580
Pull request is you are suggesting the changes

1316
01:20:06,580 --> 01:20:08,980
to the repository.

1317
01:20:08,980 --> 01:20:09,460
Yes.

1318
01:20:09,460 --> 01:20:13,900
So we are actually asking the owner to pull from me.

1319
01:20:13,900 --> 01:20:17,060
So I pull from the owner first, I push back,

1320
01:20:17,060 --> 01:20:20,700
and then the pull request is the request,

1321
01:20:20,700 --> 01:20:22,500
can you pull from me?

1322
01:20:22,500 --> 01:20:24,980
So I give you this, pull it up.

1323
01:20:27,380 --> 01:20:31,300
So any other questions that we want to mention?

1324
01:20:31,300 --> 01:20:32,140
Let's see.

1325
01:20:33,220 --> 01:20:37,860
About what type of files can be tracked, okay.

1326
01:20:37,860 --> 01:20:39,900
Which question is about file tracking?

1327
01:20:45,300 --> 01:20:48,740
Let's see, can somebody give me the number of the question?

1328
01:20:53,420 --> 01:20:54,260
29, thank you.

1329
01:20:54,260 --> 01:20:55,100
29.

1330
01:20:55,100 --> 01:20:56,300
Yeah.

1331
01:20:56,300 --> 01:20:57,980
Yeah, the word files.

1332
01:21:07,860 --> 01:21:08,860
Yes.

1333
01:21:08,860 --> 01:21:14,940
So the thing with the word files, [name], and also the colleague who asked the question,

1334
01:21:14,940 --> 01:21:19,660
is that the word file to the computer is not the word file the human sees.

1335
01:21:19,660 --> 01:21:21,500
So there's a lot of metadata.

1336
01:21:21,500 --> 01:21:25,620
So if you create a word file, and if you try to look at it on a terminal, for example,

1337
01:21:25,620 --> 01:21:30,420
with a less or a cat command, it will show so many things.

1338
01:21:30,420 --> 01:21:32,520
So it's possible to track it.

1339
01:21:32,520 --> 01:21:40,720
But let's say a small change of making a text bold would change a lot.

1340
01:21:40,720 --> 01:21:46,840
So it is not that convenient to track that.

1341
01:21:46,840 --> 01:21:52,440
But if you're using Word, then you could use, you know, people ask whether they could use

1342
01:21:52,440 --> 01:21:53,440
Git.

1343
01:21:53,440 --> 01:21:58,560
You know, it's okay to use Git, you know, to have it version control.

1344
01:21:58,560 --> 01:22:00,980
For example, you can go back into certain versions.

1345
01:22:00,980 --> 01:22:09,860
So you don't necessarily need to read the code, the bytes,

1346
01:22:09,860 --> 01:22:11,020
in order to do that.

1347
01:22:11,020 --> 01:22:13,060
But you can't do a diff, for example.

1348
01:22:13,060 --> 01:22:15,620
So let's say if I have a Word file,

1349
01:22:15,620 --> 01:22:19,260
and if I made a bold text, and I save it and commit it,

1350
01:22:19,260 --> 01:22:22,260
the difference between the two commits,

1351
01:22:22,260 --> 01:22:25,460
very difficult to see it's a bolding text,

1352
01:22:25,460 --> 01:22:27,300
no bolding character.

1353
01:22:27,300 --> 01:22:30,620
So for that reason, you could use other version system

1354
01:22:30,620 --> 01:22:33,900
that Word is good at, for example, Microsoft 365,

1355
01:22:33,900 --> 01:22:37,220
or upload it to Google.

1356
01:22:37,220 --> 01:22:42,100
And Google Docs, there are other setups.

1357
01:22:42,100 --> 01:22:44,300
These are really personal opinions.

1358
01:22:44,300 --> 01:22:46,460
So there could be many opinions.

1359
01:22:46,460 --> 01:22:49,300
So it's better not to do that.

1360
01:22:49,300 --> 01:22:53,220
But you could do that technically.

1361
01:22:53,220 --> 01:22:57,340
Yeah, and text files and all the code, R script or Python,

1362
01:22:57,340 --> 01:23:00,580
Everything works quite well with the version control.

1363
01:23:00,580 --> 01:23:03,020
Markdown is kind of a text file, but it

1364
01:23:03,020 --> 01:23:09,180
has a specific, what you call, speciality with the headings

1365
01:23:09,180 --> 01:23:11,780
and all other marking.

1366
01:23:11,780 --> 01:23:16,580
You can just have similar text files and readme files.

1367
01:23:16,580 --> 01:23:20,220
Those are simple text files.

1368
01:23:20,220 --> 01:23:27,140
And ASCII data sets, that's very good with the version control.

1369
01:23:27,140 --> 01:23:28,980
Yes.

1370
01:23:28,980 --> 01:23:30,140
Let's see, anything else?

1371
01:23:34,580 --> 01:23:36,220
Commits in a conversation.

1372
01:23:41,100 --> 01:23:43,100
Yes, so you could.

1373
01:23:43,100 --> 01:23:45,540
Yeah, so this is actually a good question

1374
01:23:45,540 --> 01:23:48,340
that we have an answer for that.

1375
01:23:48,340 --> 01:23:52,300
So how to mention a commit.

1376
01:23:52,300 --> 01:23:53,700
This is a good answer.

1377
01:23:53,700 --> 01:23:56,180
Another way, like I would say, you

1378
01:23:56,180 --> 01:23:58,180
have to think a little bit opposite way.

1379
01:23:58,180 --> 01:24:01,220
When you think of like this, you showed that, [name],

1380
01:24:01,220 --> 01:24:06,900
is that you could mention a commit.

1381
01:24:06,900 --> 01:24:11,020
But let's say if you're referring to a certain commit,

1382
01:24:11,020 --> 01:24:16,220
and it's even better to be more specific.

1383
01:24:16,220 --> 01:24:21,180
So you could specifically refer to the line

1384
01:24:21,180 --> 01:24:22,460
that you are mentioning.

1385
01:24:22,460 --> 01:24:25,700
Or you could have this commit text.

1386
01:24:25,700 --> 01:24:30,180
Let me go to the recorded version.

1387
01:24:30,180 --> 01:24:35,220
And then when you see the, because my screen

1388
01:24:35,220 --> 01:24:40,540
is a little shrink, I had to find the commits.

1389
01:24:40,540 --> 01:24:43,660
That hash number, that you get the short number,

1390
01:24:43,660 --> 01:24:46,500
so that git is capable of figuring it out.

1391
01:24:46,500 --> 01:24:49,580
So if you can copy that, copy to the mouse

1392
01:24:49,580 --> 01:24:51,500
or right click or Control-C, as mentioned,

1393
01:24:51,500 --> 01:24:54,820
you could always use that.

1394
01:24:54,820 --> 01:24:57,260
But usually, what we do is the opposite.

1395
01:24:57,260 --> 01:24:58,740
So as I mentioned in the beginning,

1396
01:24:58,740 --> 01:25:02,140
rather than mentioning copying the commit to an issue,

1397
01:25:02,140 --> 01:25:08,900
we refer to an issue in a commit with a hash.

1398
01:25:13,700 --> 01:25:14,420
Yes.

1399
01:25:14,420 --> 01:25:17,900
So I think, [name], we should go for the break now,

1400
01:25:17,900 --> 01:25:19,940
the lunch break.

1401
01:25:19,940 --> 01:25:23,540
Yeah, I just want to mention thank you for all this push,

1402
01:25:23,540 --> 01:25:25,540
pull request, and creating the issue,

1403
01:25:25,540 --> 01:25:28,980
and actively participating on the stream,

1404
01:25:28,980 --> 01:25:33,540
as well as I assume that you are participating as a team.

1405
01:25:33,540 --> 01:25:36,820
But if you have questions, please keep it coming.

1406
01:25:36,820 --> 01:25:40,140
And next, what we are going to do, [name],

1407
01:25:40,140 --> 01:25:43,860
we are going to have a forking exercise, right?

1408
01:25:43,860 --> 01:25:44,980
After the lunch.

1409
01:25:44,980 --> 01:25:46,380
Yes.

1410
01:25:46,380 --> 01:25:48,580
But before the lunch, there's some technical issue

1411
01:25:48,580 --> 01:25:50,460
that I need to solve with the director.

1412
01:25:53,380 --> 01:25:54,100
Let's see.

1413
01:25:57,300 --> 01:26:01,900
Is [name] still around, or is [name] around?

1414
01:26:01,900 --> 01:26:03,820
Yes, I'm here.

1415
01:26:03,820 --> 01:26:06,140
So we are going for the break now, [name].

1416
01:26:06,140 --> 01:26:08,100
OK.

1417
01:26:08,100 --> 01:26:11,180
And then let me say it's mentioned.

1418
01:26:11,180 --> 01:26:14,900
Yeah, maybe [name] can help us to mention the break.

1419
01:26:14,900 --> 01:26:17,660
I couldn't find it here still.

1420
01:26:17,660 --> 01:26:21,340
It's until an hour break, right?

1421
01:26:21,340 --> 01:26:21,840
Yeah.

1422
01:26:25,860 --> 01:26:27,100
Was it one hour, 15 minutes?

1423
01:26:27,100 --> 01:26:28,780
How?

1424
01:26:28,780 --> 01:26:29,740
One hour.

1425
01:26:29,740 --> 01:26:30,620
One hour, OK.

1426
01:26:30,620 --> 01:26:31,940
Yeah, so we'll meet again.

1427
01:26:31,940 --> 01:26:36,660
And yeah, so then have a break, have a great lunch.

1428
01:26:36,660 --> 01:26:38,780
And we will meet afterwards.

1429
01:26:38,780 --> 01:26:41,980
And we will work with the repository

1430
01:26:41,980 --> 01:26:44,420
that you will not get access.

1431
01:26:44,420 --> 01:26:47,060
How would you contribute?

1432
01:26:47,060 --> 01:26:48,900
Anything else, [name], before we break?

1433
01:26:48,900 --> 01:26:49,620
No, thank you.

1434
01:26:49,620 --> 01:26:50,980
OK, see you then.

1435
01:26:50,980 --> 01:26:52,540
See you.

1436
01:26:53,000 --> 01:27:00,060
Welcome back. Did you have a good lunch or good rest?

1437
01:27:00,060 --> 01:27:07,060
Yes, yes. I just finished my lunch and get ready for more GIT for dessert.

1438
01:27:07,060 --> 01:27:12,060
Okay, you will get some more dessert today for sure.

1439
01:27:12,060 --> 01:27:17,060
Thank you for participating earlier.

1440
01:27:17,060 --> 01:27:21,380
Now, we collaborated earlier in one repository.

1441
01:27:21,380 --> 01:27:31,620
And you know how to create an issue and pull a pull request

1442
01:27:31,620 --> 01:27:33,900
and how to record a new code review.

1443
01:27:33,900 --> 01:27:36,060
Do you want to comment on anything on that, Sabdee,

1444
01:27:36,060 --> 01:27:39,580
before we go for the next session?

1445
01:27:39,580 --> 01:27:41,620
No, I think it's all good.

1446
01:27:41,620 --> 01:27:44,620
Some questions are answered.

1447
01:27:44,620 --> 01:27:46,980
I think we can go for the next one.

1448
01:27:46,980 --> 01:27:53,980
So now we are going to contribute changes to a repository that belongs to others.

1449
01:27:53,980 --> 01:27:57,980
Earlier you had write access to the repository where you contributed,

1450
01:27:57,980 --> 01:28:04,980
and now there are many, many open source repositories that you might use,

1451
01:28:04,980 --> 01:28:07,980
and you might find some bugs or some improvement,

1452
01:28:07,980 --> 01:28:09,980
and you are not a member.

1453
01:28:09,980 --> 01:28:13,980
You don't have write access, and you want to contribute, and how to do that.

1454
01:28:13,980 --> 01:28:19,740
That's what we are going to see, and [name] will mention the exercise setup before we

1455
01:28:19,740 --> 01:28:29,420
go for the exercise, but I just want to show you how, given initial thoughts on it, how

1456
01:28:29,420 --> 01:28:30,420
it works.

1457
01:28:30,420 --> 01:28:36,340
I will go to my repositories, and you can see that I have a lot of fork.

1458
01:28:36,340 --> 01:28:45,660
So when you want to contribute to someone's repository where you don't have to access,

1459
01:28:45,660 --> 01:28:51,020
you don't have the access, somebody mentioned that you fork into your namespace.

1460
01:28:51,020 --> 01:28:55,580
And you could see that I have many repositories which I forked.

1461
01:28:55,580 --> 01:28:59,900
I will just show you that JAX, for example.

1462
01:28:59,900 --> 01:29:04,540
So, [name], you mentioned that the term namespace, what does it mean?

1463
01:29:04,540 --> 01:29:09,060
Oh, yeah, that namespace here means it's under my namespace.

1464
01:29:09,060 --> 01:29:10,060
That's a good question.

1465
01:29:10,060 --> 01:29:13,500
I shouldn't have used that new, new intents.

1466
01:29:13,500 --> 01:29:17,740
So the actual repository, that's the upstream repository,

1467
01:29:17,740 --> 01:29:21,340
is under Google's namespace, I would say.

1468
01:29:21,340 --> 01:29:26,580
But when I fork it, it's under my namespace.

1469
01:29:26,580 --> 01:29:29,340
Does that answer your question?

1470
01:29:29,340 --> 01:29:32,260
Yes, so this is a copy of what Google has,

1471
01:29:32,260 --> 01:29:34,220
but it's in your repository.

1472
01:29:34,220 --> 01:29:36,580
You can edit and do whatever you want,

1473
01:29:36,580 --> 01:29:40,580
but the Google will not see it unless you explicitly ask.

1474
01:29:40,580 --> 01:29:41,460
Yes.

1475
01:29:41,460 --> 01:29:45,460
And I just want to show you that this is what you see.

1476
01:29:45,460 --> 01:29:47,020
That's what I forked.

1477
01:29:47,020 --> 01:29:51,340
And you could see that I forked from Google Jax.

1478
01:29:51,340 --> 01:29:54,100
And if I want to contribute, what should I do?

1479
01:29:54,100 --> 01:30:00,500
And I will go to this Google Jax, the original repository.

1480
01:30:00,500 --> 01:30:02,580
And there are issues.

1481
01:30:02,580 --> 01:30:04,140
You could see many issues.

1482
01:30:04,140 --> 01:30:11,980
and it's an open repository, and I created just like what we did when we were collaborating.

1483
01:30:14,220 --> 01:30:20,700
So, this is what we are going to do and how to do it. We will have this exercise set up

1484
01:30:23,100 --> 01:30:26,140
and we will fork it from our code refinery,

1485
01:30:26,140 --> 01:30:31,820
a forking-recorded repository and we'll work on it.

1486
01:30:31,820 --> 01:30:34,220
Where you don't have any write access,

1487
01:30:34,220 --> 01:30:36,140
you will fork it and make changes

1488
01:30:36,140 --> 01:30:41,700
and make a pull request to us the upstream repository.

1489
01:30:41,700 --> 01:30:45,220
Upstream means the original repository where you fork from.

1490
01:30:45,220 --> 01:30:48,300
Is there something you want to add on that subject,

1491
01:30:48,300 --> 01:30:57,300
that the motivation, or are you muted?

1492
01:30:57,300 --> 01:30:58,260
Can you hear me?

1493
01:30:58,260 --> 01:31:02,260
Sorry, I just lost my sound a little bit.

1494
01:31:02,260 --> 01:31:03,900
What were you asking?

1495
01:31:03,900 --> 01:31:05,820
Is there anything you want to add on it

1496
01:31:05,820 --> 01:31:09,820
about the motivation of something?

1497
01:31:09,820 --> 01:31:10,580
Not necessarily.

1498
01:31:10,580 --> 01:31:12,100
I think you explained it.

1499
01:31:12,100 --> 01:31:14,900
It's just that you can't edit because you are not

1500
01:31:14,900 --> 01:31:16,500
part of that organization.

1501
01:31:16,500 --> 01:31:21,420
And it's unlikely that unless you are a heavy contributor

1502
01:31:21,420 --> 01:31:25,300
that you become a part of that organization.

1503
01:31:25,300 --> 01:31:29,740
And you don't have to be part of Google in order to contribute.

1504
01:31:29,740 --> 01:31:32,020
I mean, not contribute, suggest contributions.

1505
01:31:32,020 --> 01:31:35,700
So I think you made yourself clear.

1506
01:31:35,700 --> 01:31:36,460
Yeah.

1507
01:31:36,460 --> 01:31:42,620
And you could find about all this, your repository

1508
01:31:42,620 --> 01:31:45,540
and your teams under your namespace,

1509
01:31:45,540 --> 01:31:55,060
which organization you are part of. I'm not part of many on GitHub. You could see which

1510
01:31:55,060 --> 01:32:02,900
organization you are part of. But what we are going to do is we are going to contribute

1511
01:32:02,900 --> 01:32:08,820
some changes to a repository. We don't have write access. You can read the repository,

1512
01:32:08,820 --> 01:32:13,140
but you want to suggest some changes,

1513
01:32:13,140 --> 01:32:16,740
and the maintainer or admin of the repository

1514
01:32:16,740 --> 01:32:18,180
will review the changes.

1515
01:32:19,140 --> 01:32:20,500
That's we are going to practice.

1516
01:32:20,500 --> 01:32:23,300
And this is the way that open source software

1517
01:32:23,300 --> 01:32:24,580
developed so much.

1518
01:32:24,580 --> 01:32:30,260
So this is something we always want to contribute back

1519
01:32:30,980 --> 01:32:32,340
whatever we use it.

1520
01:32:32,340 --> 01:32:34,260
Do you do that mostly, [name]?

1521
01:32:34,260 --> 01:32:44,220
I mean, I have contributed for certain projects, but you know, not much.

1522
01:32:44,220 --> 01:32:53,340
So one thing I would like to mention is that when you fork a repository, it could go stale.

1523
01:32:53,340 --> 01:32:58,060
I mean, I see a lot of repositories here, maybe they are not properly synchronized with

1524
01:32:58,060 --> 01:32:59,060
the original version.

1525
01:32:59,060 --> 01:33:04,220
Yeah, that we will maybe come back or you want me to show it now how to synchronize

1526
01:33:04,220 --> 01:33:08,820
with my original upstream repository or?

1527
01:33:08,820 --> 01:33:13,220
Yeah, yeah, maybe we can show that after the exercise.

1528
01:33:13,220 --> 01:33:14,700
Okay, yeah.

1529
01:33:14,700 --> 01:33:17,140
You will see that if it is on sync or not.

1530
01:33:17,140 --> 01:33:21,140
So you can see that I didn't look

1531
01:33:21,140 --> 01:33:26,140
into it for a long time, so I'm 794 commits behind.

1532
01:33:27,420 --> 01:33:31,020
But this is the option, you can sync fork,

1533
01:33:31,020 --> 01:33:36,580
But [name] will show you later when we do the exercise.

1534
01:33:36,580 --> 01:33:40,220
Shall we go for the preparation for the exercise?

1535
01:33:40,220 --> 01:33:42,860
Or do we have any questions to take before that?

1536
01:33:46,380 --> 01:33:50,140
So there's this question about why fork instead of cloning.

1537
01:33:50,140 --> 01:33:54,340
Maybe we can touch that a little bit.

1538
01:33:54,340 --> 01:34:02,140
So a cloning will involve even if you fork.

1539
01:34:02,140 --> 01:34:09,580
So if you clone directly from this Google's JAX repository,

1540
01:34:09,580 --> 01:34:11,340
you can make changes locally.

1541
01:34:11,340 --> 01:34:16,820
But you can't send your changes back to Google,

1542
01:34:16,820 --> 01:34:20,380
because then it will be rejected,

1543
01:34:20,380 --> 01:34:22,660
which will say that you don't have right access.

1544
01:34:22,660 --> 01:34:24,980
Because you are not a collaborator there.

1545
01:34:24,980 --> 01:34:25,480
Yes.

1546
01:34:25,480 --> 01:34:27,460
In the teaching material, we have some screenshots

1547
01:34:27,460 --> 01:34:30,420
of what exact message you get.

1548
01:34:30,420 --> 01:34:33,140
Because of that, you should make a copy in the cloud itself.

1549
01:34:33,140 --> 01:34:39,220
You fork it in your namespace, and then clone it, and make

1550
01:34:39,220 --> 01:34:42,300
your modification, and send the pull request via the fork.

1551
01:34:45,940 --> 01:34:49,020
OK, shall we go to the preparation of the exercise?

1552
01:34:49,020 --> 01:34:51,660
And shall we have our hands on it?

1553
01:34:52,660 --> 01:34:55,860
Yes, so I think we should go for the exercise.

1554
01:34:55,860 --> 01:34:56,740
I could explain that.

1555
01:34:56,740 --> 01:34:59,260
And I have a slight problem with the sound.

1556
01:34:59,260 --> 01:35:03,780
Maybe if I lose my voice a little bit,

1557
01:35:03,780 --> 01:35:07,740
you might have to explain if you don't hear me.

1558
01:35:07,740 --> 01:35:11,980
I'm going to start sharing the screen.

1559
01:35:11,980 --> 01:35:12,980
You could stop.

1560
01:35:12,980 --> 01:35:15,500
Then maybe my screen will show up.

1561
01:35:15,500 --> 01:35:16,500
Yes, I see that.

1562
01:35:20,220 --> 01:35:21,820
Let's see one more time the questions.

1563
01:35:21,820 --> 01:35:24,980
Just please keep the questions coming.

1564
01:35:24,980 --> 01:35:33,260
And we are in this, let me go up very slowly, this we did.

1565
01:35:33,260 --> 01:35:37,580
And we move on to this lesson called

1566
01:35:37,580 --> 01:35:39,980
how to contribute changes to repositories

1567
01:35:39,980 --> 01:35:42,820
that belong to others.

1568
01:35:42,820 --> 01:35:45,700
So if others give you permission, that's fine.

1569
01:35:45,700 --> 01:35:50,420
But this is how you would contribute when you are not

1570
01:35:50,420 --> 01:35:52,900
part of that organization.

1571
01:35:52,900 --> 01:35:54,940
As with the previous exercise, there

1572
01:35:54,940 --> 01:35:58,340
are two main workflows here.

1573
01:35:58,340 --> 01:36:01,500
The first workflow is that you are part of a team.

1574
01:36:01,500 --> 01:36:04,460
As before, you are in a group somewhere,

1575
01:36:04,460 --> 01:36:11,340
and you have a team leader who will provide this repository

1576
01:36:11,340 --> 01:36:13,620
for you, created from our template,

1577
01:36:13,620 --> 01:36:18,860
and you will follow that instructions from your team.

1578
01:36:18,860 --> 01:36:21,100
The other instruction is that you don't have a team,

1579
01:36:21,100 --> 01:36:24,020
you're on your own, and you'll be in our team,

1580
01:36:24,020 --> 01:36:26,460
me, [name], and the code refinement

1581
01:36:26,460 --> 01:36:27,660
that we are going to show.

1582
01:36:27,660 --> 01:36:29,740
So we have created that repository.

1583
01:36:29,740 --> 01:36:33,700
It's called the, if you click this link,

1584
01:36:33,700 --> 01:36:37,740
you'll land in that repository.

1585
01:36:37,740 --> 01:36:41,260
Workflow exercises, I actually need

1586
01:36:41,260 --> 01:36:50,680
to show the one that is not recorded.

1587
01:36:50,680 --> 01:36:52,640
Central logs for recorded.

1588
01:36:52,640 --> 01:36:55,720
OK, so I had to show the one that is recorded.

1589
01:36:55,720 --> 01:36:57,680
The difference between the recorded one

1590
01:36:57,680 --> 01:36:59,160
and the non-recorded one, as before,

1591
01:36:59,160 --> 01:37:02,480
is that the recorded one will show up in our recordings.

1592
01:37:02,480 --> 01:37:05,000
So if you don't want your names appear here,

1593
01:37:05,000 --> 01:37:06,480
you should use this one.

1594
01:37:06,480 --> 01:37:11,480
So you will land in this report.

1595
01:37:15,560 --> 01:37:20,560
So as before, we have like two main workflows

1596
01:37:21,920 --> 01:37:23,320
and how this works.

1597
01:37:23,320 --> 01:37:24,920
And even in that workflow,

1598
01:37:24,920 --> 01:37:26,680
we have like three ways of working.

1599
01:37:26,680 --> 01:37:29,800
So one is that you have your team,

1600
01:37:29,800 --> 01:37:34,280
your team leader provides this report to fork from

1601
01:37:34,280 --> 01:37:36,200
and you fork from that

1602
01:37:36,200 --> 01:37:38,520
and you contribute, and you're on your own,

1603
01:37:38,520 --> 01:37:39,840
you're following code refinery,

1604
01:37:39,840 --> 01:37:43,680
you know, the fork that the report we created for you,

1605
01:37:43,680 --> 01:37:44,880
you fork from that.

1606
01:37:46,000 --> 01:37:49,640
If it's okay for you to show up your name in our recordings,

1607
01:37:49,640 --> 01:37:54,640
you can use the report that ends with the recorded.

1608
01:37:56,240 --> 01:37:58,920
And if you don't want your name to show up,

1609
01:37:58,920 --> 01:38:03,240
you should the one which does not have recorded at the end.

1610
01:38:03,240 --> 01:38:05,040
You should use only one.

1611
01:38:05,040 --> 01:38:08,700
And you could select and follow that procedure.

1612
01:38:11,400 --> 01:38:16,400
And then, so the idea is that you would be provided

1613
01:38:23,040 --> 01:38:25,480
with this repo that you would fork,

1614
01:38:25,480 --> 01:38:28,320
you would make a copy in the cloud,

1615
01:38:28,320 --> 01:38:33,320
but inside your own workspace or namespace.

1616
01:38:33,320 --> 01:38:37,600
And then what will happen is after you create that,

1617
01:38:37,600 --> 01:38:40,960
you're going to contribute back something.

1618
01:38:40,960 --> 01:38:44,000
Before you contribute back, as we discussed before,

1619
01:38:44,000 --> 01:38:47,080
you should open an issue and inform the developers

1620
01:38:47,080 --> 01:38:48,280
that you're going to do that.

1621
01:38:48,280 --> 01:38:52,200
So [name], the issue, do we create the issue

1622
01:38:52,200 --> 01:38:57,120
in the organization repo, or do I create it

1623
01:38:57,120 --> 01:38:59,240
in the fork that I created?

1624
01:38:59,240 --> 01:39:01,520
The upstream organization repository.

1625
01:39:01,520 --> 01:39:05,640
That's where you are telling that there is some improvement

1626
01:39:05,640 --> 01:39:09,240
or issues that you want to, or you can mention,

1627
01:39:09,240 --> 01:39:10,520
as I mentioned it earlier,

1628
01:39:10,520 --> 01:39:13,800
that issues on this open repository,

1629
01:39:13,800 --> 01:39:18,200
you can create it even though you are not working on it.

1630
01:39:18,200 --> 01:39:21,600
And it would be always on the upstream repository.

1631
01:39:21,600 --> 01:39:23,120
You need to create the issues

1632
01:39:23,120 --> 01:39:28,120
if you want to contribute back to changes to this,

1633
01:39:28,360 --> 01:39:30,200
like for example, JAX.

1634
01:39:30,200 --> 01:39:32,320
I will go to the Google Jax.

1635
01:39:32,320 --> 01:39:34,560
There, I will create an issue.

1636
01:39:34,560 --> 01:39:36,440
Yes, so you'll create the Google.

1637
01:39:36,440 --> 01:39:38,840
So although you don't have access to the repo itself,

1638
01:39:38,840 --> 01:39:40,240
you can create issues.

1639
01:39:40,240 --> 01:39:41,960
So that is where the Google people will

1640
01:39:41,960 --> 01:39:43,960
say that improvement is coming.

1641
01:39:43,960 --> 01:39:46,160
Let's say you open an issue in your repo,

1642
01:39:46,160 --> 01:39:48,160
they don't know about it.

1643
01:39:48,160 --> 01:39:51,320
So that communication never happens, although in the cloud.

1644
01:39:51,320 --> 01:39:52,760
Yeah, and one more thing.

1645
01:39:52,760 --> 01:39:56,920
Here, you don't need to ask for the access.

1646
01:39:56,920 --> 01:39:59,640
So when we were collaborating earlier,

1647
01:39:59,640 --> 01:40:04,280
we asked for access, we added your username to our team

1648
01:40:04,280 --> 01:40:06,000
and made every changes.

1649
01:40:06,000 --> 01:40:08,800
So here you don't need to do that.

1650
01:40:08,800 --> 01:40:11,960
Yes, so you don't need to do that.

1651
01:40:11,960 --> 01:40:16,400
So here, let's say the centralized workflow

1652
01:40:16,400 --> 01:40:18,840
recorded exercise.

1653
01:40:18,840 --> 01:40:22,560
So depending on how your screen setup is,

1654
01:40:22,560 --> 01:40:26,040
not every menu will be visible.

1655
01:40:26,040 --> 01:40:29,000
So there is a menu called Fork.

1656
01:40:33,600 --> 01:40:34,120
Where is it?

1657
01:40:34,120 --> 01:40:38,480
I can make it a little smaller and see whether it shows.

1658
01:40:38,480 --> 01:40:40,720
As you can see here, I don't see it.

1659
01:40:40,720 --> 01:40:46,200
But when I zoom out, I can see this fork repository.

1660
01:40:46,200 --> 01:40:52,360
So this button, where you click depends on the pathway

1661
01:40:52,360 --> 01:40:53,920
you selected in the beginning.

1662
01:40:53,920 --> 01:40:57,120
If you're in a small team, you should

1663
01:40:57,120 --> 01:41:01,240
go to that small team's repository and create fork.

1664
01:41:01,240 --> 01:41:02,640
And if you're in a code refinery,

1665
01:41:02,640 --> 01:41:05,520
and if it's OK for your name to be

1666
01:41:05,520 --> 01:41:08,280
visible in the recorded version, you could create fork.

1667
01:41:08,280 --> 01:41:10,600
So when you click the fork button,

1668
01:41:10,600 --> 01:41:12,280
you will be given an option.

1669
01:41:12,280 --> 01:41:16,680
So this is my namespace or my Git repository,

1670
01:41:16,680 --> 01:41:20,200
my organization, which I am the only member.

1671
01:41:20,200 --> 01:41:21,720
And it will give this option.

1672
01:41:21,720 --> 01:41:25,560
And you could also mention that copy the main branch only.

1673
01:41:25,560 --> 01:41:27,480
You don't have to copy all the branches.

1674
01:41:27,480 --> 01:41:30,080
Usually, when you're working with copying and forking

1675
01:41:30,080 --> 01:41:38,000
from a very highly active program, NumPy, or JAX,

1676
01:41:38,000 --> 01:41:42,960
or PyTorch, or very active projects,

1677
01:41:42,960 --> 01:41:48,440
or maybe the Linux compiler, you don't want to copy everything.

1678
01:41:48,440 --> 01:41:53,440
It will be a huge repository with a lot of commits and all.

1679
01:41:53,560 --> 01:41:56,300
So here only the main and I'll create a fork.

1680
01:41:59,020 --> 01:42:00,980
And then the fork will be created.

1681
01:42:02,480 --> 01:42:03,560
So you should do that.

1682
01:42:03,560 --> 01:42:07,600
So after the fork created, the workflow is as before.

1683
01:42:07,600 --> 01:42:11,500
Now you clone from the copy you made,

1684
01:42:11,500 --> 01:42:12,860
not from the original one.

1685
01:42:12,860 --> 01:42:17,860
So the one that creates under your name.

1686
01:42:18,440 --> 01:42:22,160
You create a fork.

1687
01:42:22,160 --> 01:42:24,080
Then you clone it, or you could, if you

1688
01:42:24,080 --> 01:42:26,520
want to edit in the GitHub itself, you can edit TASL.

1689
01:42:26,520 --> 01:42:30,720
Or if you want to clone it to your local terminal,

1690
01:42:30,720 --> 01:42:32,280
then you clone it.

1691
01:42:32,280 --> 01:42:35,400
Then you would create a branch.

1692
01:42:35,400 --> 01:42:38,000
And then you make the change, or the suggestion,

1693
01:42:38,000 --> 01:42:39,840
or the improvement.

1694
01:42:39,840 --> 01:42:45,800
And then you will add that to that new branch.

1695
01:42:45,800 --> 01:42:47,240
And then you will commit.

1696
01:42:47,240 --> 01:42:49,840
When you're committing, you can mention the issue as before.

1697
01:42:49,840 --> 01:42:52,000
But this time, you are mentioning

1698
01:42:52,000 --> 01:42:54,640
an issue which is not in the repository

1699
01:42:54,640 --> 01:42:57,680
that you are pushing to first.

1700
01:42:57,680 --> 01:43:01,080
So you are referring to an issue that's upstream,

1701
01:43:01,080 --> 01:43:05,160
which means this issue is not something in your repository,

1702
01:43:05,160 --> 01:43:12,320
but it will make sense when we merge it or accept

1703
01:43:12,320 --> 01:43:17,080
the full request in the original repository.

1704
01:43:17,080 --> 01:43:20,120
And yes?

1705
01:43:20,120 --> 01:43:22,600
These are the steps you want to mention, [name]?

1706
01:43:22,600 --> 01:43:26,760
Yes, so I think this is very clearly written

1707
01:43:26,760 --> 01:43:27,800
what you should do.

1708
01:43:27,800 --> 01:43:30,800
And if you get in trouble, and error messages

1709
01:43:30,800 --> 01:43:34,720
are also like anticipated error messages are here.

1710
01:43:34,720 --> 01:43:43,080
And let's say that something goes wrong.

1711
01:43:43,080 --> 01:43:48,080
For example, you copied, instead of copying the fork

1712
01:43:48,760 --> 01:43:51,480
you made, you accidentally copied the original one

1713
01:43:51,480 --> 01:43:56,040
from your team leader, what the team leader created,

1714
01:43:56,040 --> 01:44:01,040
or you directly clone the repo that CodeRefinery created.

1715
01:44:01,480 --> 01:44:05,640
If that happens, this recovery box tells you

1716
01:44:05,640 --> 01:44:08,120
how to fix that.

1717
01:44:08,120 --> 01:44:08,960
Yep.

1718
01:44:09,800 --> 01:44:12,000
And then as before, the pull request,

1719
01:44:12,000 --> 01:44:14,840
you have to request the pull request.

1720
01:44:14,840 --> 01:44:18,400
So this time, you would select,

1721
01:44:18,400 --> 01:44:21,560
you have to make sure that when the pull request is made,

1722
01:44:23,080 --> 01:44:26,540
that it's going from your repository,

1723
01:44:26,540 --> 01:44:31,540
your repository that you have the changes to somewhere else.

1724
01:44:34,240 --> 01:44:37,080
So this arrow would point, there's a small arrow here,

1725
01:44:37,080 --> 01:44:41,140
if you notice closely, it will show you where it's going.

1726
01:44:41,140 --> 01:44:45,300
So you have to make sure that it happens that way.

1727
01:44:45,300 --> 01:44:48,220
And then I think, without we spend too much time,

1728
01:44:48,220 --> 01:44:54,940
[name], because it's everything explained very well here,

1729
01:44:54,940 --> 01:44:56,660
we will go over the exercise now.

1730
01:44:56,660 --> 01:44:58,420
Yeah, before we go to exercise, I

1731
01:44:58,420 --> 01:45:01,660
would like to take one very interesting question, 36,

1732
01:45:01,660 --> 01:45:05,580
about the difference between issue and pull request.

1733
01:45:05,580 --> 01:45:14,820
So an issue is like a discussion thread.

1734
01:45:14,820 --> 01:45:16,780
So you discuss things.

1735
01:45:16,780 --> 01:45:19,220
The pull request itself is the change.

1736
01:45:19,220 --> 01:45:21,700
So you discuss about a change in the issue,

1737
01:45:21,700 --> 01:45:25,460
and then you send the actual change.

1738
01:45:25,460 --> 01:45:27,060
So that is the difference.

1739
01:45:27,060 --> 01:45:27,740
Yeah.

1740
01:45:27,740 --> 01:45:31,860
And if I can add issues as something,

1741
01:45:31,860 --> 01:45:39,940
can inform that there is something that can be improved. It's not always to be in discussion.

1742
01:45:39,940 --> 01:45:46,660
Sometimes you can mention there is something going on and you are going to work on it. But

1743
01:45:46,660 --> 01:45:55,220
there is no changes. It's only part of the initiation about these changes and you can

1744
01:45:56,180 --> 01:46:00,580
have some feedback, some other colleagues or someone from the organization itself.

1745
01:46:00,580 --> 01:46:11,580
And the pull request is the changes that you ask the maintainer to pull the changes from your suggestion.

1746
01:46:11,580 --> 01:46:23,580
So this question, question 37, it's asked what is the difference between if you just say quick push or like you be more specific git push upstream origin branch name.

1747
01:46:23,580 --> 01:46:26,460
So this also depends on the configuration

1748
01:46:26,460 --> 01:46:27,540
that you have in your Git.

1749
01:46:27,540 --> 01:46:28,780
So you have this Git config.

1750
01:46:28,780 --> 01:46:31,620
I think you learned it in the first few days.

1751
01:46:31,620 --> 01:46:35,260
That if you had configured default branches,

1752
01:46:35,260 --> 01:46:38,660
et cetera, et cetera, Git push will just

1753
01:46:38,660 --> 01:46:45,340
push everything to Git, what you have in the branch you are in.

1754
01:46:45,340 --> 01:46:48,580
But if you are more specific, it will

1755
01:46:48,580 --> 01:46:58,580
push the exactly, the branch that is connected in the remote and yours. So you're specifying

1756
01:46:58,580 --> 01:47:06,580
push exactly from here to exactly to there. So I always use this exact commands, not generate

1757
01:47:06,580 --> 01:47:17,740
git push, because sometimes when you're in a wrong branch or like, it's always make life

1758
01:47:17,740 --> 01:47:21,660
easier and less error prone when you're more specific in Git.

1759
01:47:21,660 --> 01:47:24,180
But you could, of course, configure your Git

1760
01:47:24,180 --> 01:47:27,140
to understand when you say Git push do this.

1761
01:47:27,140 --> 01:47:28,980
But I would recommend be specific,

1762
01:47:28,980 --> 01:47:32,700
and then you would exactly know what you are expecting,

1763
01:47:32,700 --> 01:47:37,540
and Git would understand it as it is.

1764
01:47:37,540 --> 01:47:40,380
So now, Darya, is there anything else you want to mention?

1765
01:47:40,380 --> 01:47:44,380
No, maybe we can go to exercise and come back and discuss

1766
01:47:44,380 --> 01:47:46,060
a little bit more on this.

1767
01:47:46,060 --> 01:47:47,260
Yes.

1768
01:47:47,260 --> 01:47:49,140
So the difference between last time and this time

1769
01:47:49,140 --> 01:47:51,740
is you first fork and then clone.

1770
01:47:51,740 --> 01:47:53,860
Everything else is almost the same.

1771
01:47:53,860 --> 01:47:56,940
And the issue is created in the original upstream repository,

1772
01:47:56,940 --> 01:48:00,020
not the one you copied.

1773
01:48:00,020 --> 01:48:01,820
How long do we have for the exercise, [name]?

1774
01:48:01,820 --> 01:48:03,540
Was it 15 or?

1775
01:48:03,540 --> 01:48:08,620
25 minutes, or maybe we could give it 22 minutes,

1776
01:48:08,620 --> 01:48:12,060
45 minutes past the hour.

1777
01:48:12,060 --> 01:48:12,860
We can come back.

1778
01:48:12,860 --> 01:48:16,180
OK, 45 past on the hour, we'll be back at 8.

1779
01:48:16,180 --> 01:48:18,780
So we'll be muting our microphones

1780
01:48:18,780 --> 01:48:22,900
and go back in your exercise and tell us

1781
01:48:22,900 --> 01:48:27,700
if you face any problem and also keep on asking questions.

1782
01:48:27,700 --> 01:48:29,420
Good luck.

1783
01:48:30,000 --> 01:48:39,220
Okay, I hope you had the time to do the exercise and if you need a little bit more time, you

1784
01:48:39,220 --> 01:48:43,020
can indicate here on our notes.

1785
01:48:43,020 --> 01:48:48,260
[name], shall we go through it, how we were working on it?

1786
01:48:48,260 --> 01:48:53,180
Yes, if you could show how you send the pull request

1787
01:48:53,180 --> 01:48:56,740
with the correct branch, from correct branch to the task,

1788
01:48:56,740 --> 01:48:58,140
correct target branch.

1789
01:48:58,140 --> 01:49:00,260
Yes, I can show that, and then you

1790
01:49:00,260 --> 01:49:04,620
can see how my pull request is.

1791
01:49:04,620 --> 01:49:09,180
So I am on the upstream repository

1792
01:49:09,180 --> 01:49:11,340
forking workflow exercise recorder,

1793
01:49:11,340 --> 01:49:14,580
and I am listing out the issues,

1794
01:49:14,580 --> 01:49:19,060
and you see I have two issues listed out.

1795
01:49:19,060 --> 01:49:20,140
And one of the issue,

1796
01:49:20,140 --> 01:49:22,660
there is a pull request already linked to it.

1797
01:49:22,660 --> 01:49:25,660
And here, this is the other one,

1798
01:49:25,660 --> 01:49:27,100
the other issue I am working on.

1799
01:49:27,100 --> 01:49:31,820
But I forked this repository and I created branch.

1800
01:49:31,820 --> 01:49:33,700
I made some changes.

1801
01:49:33,700 --> 01:49:37,700
Now I want to open a pull request.

1802
01:49:37,700 --> 01:49:41,660
Just wanted to show this, that when you open a pull request,

1803
01:49:41,660 --> 01:49:44,420
you are suggesting the changes

1804
01:49:44,420 --> 01:49:47,160
towards the upstream repository.

1805
01:49:47,160 --> 01:49:50,780
So if you are trying to open a pull request,

1806
01:49:50,780 --> 01:49:52,220
you see the base repository,

1807
01:49:52,220 --> 01:49:55,520
see our workshop exercise and base main,

1808
01:49:55,520 --> 01:49:57,780
and head, this is my namespace

1809
01:49:57,780 --> 01:50:02,780
and the branch I created for this changes I suggest.

1810
01:50:03,700 --> 01:50:08,700
So what it do is it will create a pull request

1811
01:50:09,460 --> 01:50:14,460
on the upstream repository where you forked your copy.

1812
01:50:15,580 --> 01:50:17,260
This is, I want to show this.

1813
01:50:17,260 --> 01:50:19,780
When you pull request, you just check it.

1814
01:50:19,780 --> 01:50:22,300
It is doing on the right path.

1815
01:50:23,940 --> 01:50:26,640
And you create a pull request.

1816
01:50:26,640 --> 01:50:29,180
Before that, allow edits by maintenance.

1817
01:50:29,180 --> 01:50:39,300
That means the maintainers can edit on your change suggestions

1818
01:50:39,300 --> 01:50:40,580
on your branch.

1819
01:50:40,580 --> 01:50:45,500
I would like to add [name] as the reviewer,

1820
01:50:45,500 --> 01:50:50,020
so I can ask for review from [name] here

1821
01:50:50,020 --> 01:50:52,020
and create a pull request.

1822
01:50:52,020 --> 01:51:02,460
So it's create a pull request on the upstream repository

1823
01:51:02,460 --> 01:51:04,140
where we fork from.

1824
01:51:04,140 --> 01:51:06,380
Shall we go to the pull request?

1825
01:51:06,380 --> 01:51:09,060
And I see that there are a lot of pull requests.

1826
01:51:09,060 --> 01:51:11,220
Ravi, you want to take over the screen

1827
01:51:11,220 --> 01:51:17,220
and review my pull request and others?

1828
01:51:17,220 --> 01:51:19,580
Yes, I'm going to start sharing.

1829
01:51:19,580 --> 01:51:23,540
Yeah, all good?

1830
01:51:23,540 --> 01:51:25,900
Yeah.

1831
01:51:25,900 --> 01:51:27,060
Then you could stop.

1832
01:51:27,060 --> 01:51:28,220
Yeah, I could see it, yes.

1833
01:51:30,980 --> 01:51:35,540
So here, I see that this is the centralized workflow

1834
01:51:35,540 --> 01:51:37,340
and the recorded version of the exercise

1835
01:51:37,340 --> 01:51:40,540
that we are going to share with you.

1836
01:51:40,540 --> 01:51:48,420
And let's see the issues a little bit first.

1837
01:51:49,580 --> 01:51:53,580
So I have a full request.

1838
01:51:53,580 --> 01:51:54,580
Okay.

1839
01:51:54,580 --> 01:52:03,660
Yeah, you are on the under your namespace, you are on the forked repository, so you don't

1840
01:52:03,660 --> 01:52:06,340
see the issues issue label there.

1841
01:52:06,340 --> 01:52:07,340
Yes.

1842
01:52:07,340 --> 01:52:13,460
So, when you when you forked it and if you want to see the full request and the issues

1843
01:52:13,460 --> 01:52:14,460
it will not be there.

1844
01:52:14,460 --> 01:52:20,660
to go to the place where I poked it from,

1845
01:52:20,660 --> 01:52:24,180
which we call upstream, right?

1846
01:52:24,180 --> 01:52:25,780
I go there.

1847
01:52:25,780 --> 01:52:27,340
And now I see some issues.

1848
01:52:27,340 --> 01:52:30,260
There's one issue.

1849
01:52:30,260 --> 01:52:34,540
You are showing the template.

1850
01:52:34,540 --> 01:52:35,860
Correct.

1851
01:52:35,860 --> 01:52:38,100
OK, so that's also a good point, actually.

1852
01:52:38,100 --> 01:52:45,180
So we created this repository from a template.

1853
01:52:45,180 --> 01:52:50,300
And from that template, I made a fork.

1854
01:52:50,300 --> 01:52:52,220
So I went two steps back.

1855
01:52:52,220 --> 01:52:54,620
So I should have stopped here.

1856
01:52:54,620 --> 01:52:57,500
So this is the place that I should have stopped.

1857
01:52:57,500 --> 01:52:59,180
And then I'll go to the issues.

1858
01:52:59,180 --> 01:53:09,180
So, do I have an issue by you or maybe closed?

1859
01:53:09,180 --> 01:53:11,180
You are in the wrong repository, [name].

1860
01:53:11,180 --> 01:53:13,180
You are centralized workflow exercise.

1861
01:53:13,180 --> 01:53:16,180
We are doing forking workflow exercise.

1862
01:53:16,180 --> 01:53:19,180
You are correct. Thank you, [name].

1863
01:53:19,180 --> 01:53:25,180
Forking workflow exercise recorded.

1864
01:53:25,180 --> 01:53:27,180
Now it looks correct?

1865
01:53:27,180 --> 01:53:28,180
Yes.

1866
01:53:28,180 --> 01:53:30,380
So maybe too much lunch.

1867
01:53:33,340 --> 01:53:35,700
Here, let me search [name]'s,

1868
01:53:38,300 --> 01:53:39,620
maybe I can find it.

1869
01:53:39,620 --> 01:53:41,680
No, maybe your username is,

1870
01:53:46,900 --> 01:53:48,340
okay, let's see again.

1871
01:53:48,340 --> 01:53:50,220
Do you remember your issue number?

1872
01:53:50,220 --> 01:53:55,220
Yeah, but what you see that you should be notified

1873
01:53:55,460 --> 01:53:56,940
when I create a review request,

1874
01:53:56,940 --> 01:53:59,740
but you can number seven.

1875
01:54:00,780 --> 01:54:03,020
Yes, so let me search again

1876
01:54:03,020 --> 01:54:05,720
because I think maybe I've wrongly spelled your name.

1877
01:54:09,100 --> 01:54:10,180
Let's see like this.

1878
01:54:11,100 --> 01:54:13,580
I think when you filter,

1879
01:54:13,580 --> 01:54:17,260
you have to filter with order or something like that.

1880
01:54:17,260 --> 01:54:19,100
So that's what I was thinking.

1881
01:54:19,100 --> 01:54:20,460
Okay, let's try that again.

1882
01:54:21,780 --> 01:54:24,700
Let's just copy your name exactly it is.

1883
01:54:26,940 --> 01:54:37,940
So if you if you click on the order down.

1884
01:54:37,940 --> 01:54:38,940
Yeah.

1885
01:54:38,940 --> 01:54:41,940
Yes, you're correct.

1886
01:54:41,940 --> 01:54:51,020
Then you can find. Yes. So you have two ratios. So I would, I would like you to review the

1887
01:54:51,020 --> 01:54:54,700
Chia seed pudding first, because the next, yes.

1888
01:54:54,700 --> 01:54:56,380
The next one is something interesting

1889
01:54:56,380 --> 01:55:00,340
about the workflow, GitLab action, but this one, okay.

1890
01:55:00,340 --> 01:55:04,500
So you have this Chia pudding request is number seven,

1891
01:55:05,620 --> 01:55:08,700
and you are talking about issue number eight.

1892
01:55:08,700 --> 01:55:12,380
So this issue number eight is in the upstream repository.

1893
01:55:16,500 --> 01:55:17,900
Yes.

1894
01:55:17,900 --> 01:55:25,700
So then I see that you have send a pull request,

1895
01:55:25,700 --> 01:55:29,140
and then your pull request has arrived

1896
01:55:29,140 --> 01:55:32,700
into the correct place.

1897
01:55:32,700 --> 01:55:38,260
And all these green buttons look green, the checks.

1898
01:55:38,260 --> 01:55:41,100
So here, what we wanted to mention

1899
01:55:41,100 --> 01:55:45,220
is that we are also showing something that is not

1900
01:55:45,220 --> 01:55:47,660
necessarily needed to understand what we are doing

1901
01:55:47,660 --> 01:55:52,100
with this cloning, forking, merging exercise

1902
01:55:52,100 --> 01:55:54,700
is that the automated testing.

1903
01:55:54,700 --> 01:55:59,700
So there are some tests that go through.

1904
01:55:59,700 --> 01:56:07,620
So when someone sends a pull request or makes a commit,

1905
01:56:07,620 --> 01:56:12,700
you could check whether it's as expected.

1906
01:56:12,700 --> 01:56:14,900
So you could do it at commit level,

1907
01:56:14,900 --> 01:56:19,660
or you could do it at merge or pull request level.

1908
01:56:19,660 --> 01:56:21,380
So time to time, I miss this word.

1909
01:56:21,380 --> 01:56:23,140
I mix this word merge and pull request

1910
01:56:23,140 --> 01:56:25,540
because I mostly work on GitLab.

1911
01:56:25,540 --> 01:56:29,740
So we use the word merge request there a lot.

1912
01:56:29,740 --> 01:56:31,900
So the pull request, when we send that,

1913
01:56:31,900 --> 01:56:33,620
you could run the test as well.

1914
01:56:33,620 --> 01:56:40,100
So what happens is your code get checked by a script.

1915
01:56:40,100 --> 01:56:44,780
So the GitHub can spin up like a virtual machine

1916
01:56:44,780 --> 01:56:49,780
with a container and it'll run some scripts to check

1917
01:56:50,540 --> 01:56:51,980
what you have submitted.

1918
01:56:51,980 --> 01:56:54,780
So here, what it means is that it's all checks are good.

1919
01:56:54,780 --> 01:56:56,940
So I'll go and check the change file.

1920
01:56:56,940 --> 01:56:58,260
So it is a new ingredient.

1921
01:56:58,260 --> 01:57:00,100
It looks all good.

1922
01:57:00,100 --> 01:57:01,940
Nothing extraordinary.

1923
01:57:04,020 --> 01:57:09,020
I would say, I would approve it saying it looks good.

1924
01:57:09,020 --> 01:57:14,020
what's good, thank you, and I submit that.

1925
01:57:20,260 --> 01:57:21,940
And in the pull request,

1926
01:57:21,940 --> 01:57:25,020
then I see this merge pull request button,

1927
01:57:25,020 --> 01:57:29,720
so I will merge it, confirm the merge.

1928
01:57:32,920 --> 01:57:37,140
So one check passed and it merged,

1929
01:57:37,140 --> 01:57:41,240
And your changes you made in your fork,

1930
01:57:41,240 --> 01:57:45,400
in the copy you made, is now in the main repository.

1931
01:57:45,400 --> 01:57:48,280
So as the maintainer of this repository,

1932
01:57:48,280 --> 01:57:53,240
I accepted your changes and there was no issue in that.

1933
01:57:53,240 --> 01:57:58,240
So the second one that you said,

1934
01:57:59,280 --> 01:58:03,120
was you sent two requests, so let's see.

1935
01:58:03,120 --> 01:58:03,960
Yeah.

1936
01:58:03,960 --> 01:58:04,800
It's chocolate pudding, is it?

1937
01:58:04,800 --> 01:58:05,640
It is.

1938
01:58:05,640 --> 01:58:06,880
Yeah.

1939
01:58:06,880 --> 01:58:09,640
So this one, no descriptions are not good.

1940
01:58:09,640 --> 01:58:11,940
So there should be some description here

1941
01:58:11,940 --> 01:58:14,200
and you send it and which issue

1942
01:58:14,200 --> 01:58:15,940
are you referring to this year?

1943
01:58:15,940 --> 01:58:17,120
Let's see.

1944
01:58:17,120 --> 01:58:20,160
The issue is not tracking here for some reason.

1945
01:58:20,160 --> 01:58:23,600
Let me go to the pull request and see.

1946
01:58:24,440 --> 01:58:27,920
Centralized workflow exercises recorded.

1947
01:58:29,680 --> 01:58:30,920
Pull requests.

1948
01:58:32,960 --> 01:58:34,440
And authors.

1949
01:58:36,880 --> 01:58:50,720
Yeah, this one. So, this one has failed. So, we could check, you know, what has failed.

1950
01:58:50,720 --> 01:58:56,640
Where should I click to see more details on this? Do you know?

1951
01:58:56,640 --> 01:59:00,440
There is already a details button. You could check details.

1952
01:59:00,440 --> 01:59:02,960
This one? Yeah.

1953
01:59:02,960 --> 01:59:08,600
I just want to specify that this test is something

1954
01:59:08,600 --> 01:59:11,800
we included in the GitLab action.

1955
01:59:11,800 --> 01:59:14,720
You will learn how to do this mostly next week.

1956
01:59:14,720 --> 01:59:18,000
We get the automated testing episodes.

1957
01:59:18,000 --> 01:59:23,360
So this is a preview of that, how it works.

1958
01:59:23,360 --> 01:59:27,440
So in the test, usually it should print some messages

1959
01:59:27,440 --> 01:59:29,880
and it shows some log files, which should

1960
01:59:29,880 --> 01:59:32,080
indicate what was exactly wrong.

1961
01:59:32,080 --> 01:59:32,640
Let me check.

1962
01:59:32,640 --> 01:59:34,640
So there are five missing ingredients section.

1963
01:59:34,640 --> 01:59:36,220
So the ingredients section is missing.

1964
01:59:36,220 --> 01:59:38,280
So that's why it failed.

1965
01:59:38,280 --> 01:59:40,320
So let me go to the pull request again.

1966
01:59:45,400 --> 01:59:47,740
Search for that.

1967
01:59:47,740 --> 01:59:56,360
And then I'll go to the files changed here.

1968
01:59:56,360 --> 02:00:01,660
So it's showing some details.

1969
02:00:01,660 --> 02:00:04,460
I can go to the review chain.

1970
02:00:04,460 --> 02:00:06,500
Okay, no, no, not yet, not yet.

1971
02:00:06,500 --> 02:00:08,860
I had to find the heading, maybe it's,

1972
02:00:08,860 --> 02:00:12,060
maybe you forgot like a hash or something in the heading.

1973
02:00:13,420 --> 02:00:18,420
No, the check was to test if there is ingredients

1974
02:00:18,900 --> 02:00:22,740
and instructions on the files,

1975
02:00:22,740 --> 02:00:25,420
but you see that I haven't done it.

1976
02:00:25,420 --> 02:00:27,980
I said recipe to be updated.

1977
02:00:27,980 --> 02:00:31,180
Aha, so here you didn't have ingredients.

1978
02:00:31,180 --> 02:00:33,020
So I don't have any recipe.

1979
02:00:33,020 --> 02:00:37,620
I just tried to push it,

1980
02:00:37,620 --> 02:00:41,420
and this is not the way it should be,

1981
02:00:41,420 --> 02:00:43,940
because when I try to add some recipe,

1982
02:00:43,940 --> 02:00:48,420
I should add ingredients and instructions.

1983
02:00:48,420 --> 02:00:51,140
That's what we put it on the test,

1984
02:00:52,660 --> 02:00:56,180
test.check.py function, right?

1985
02:00:56,180 --> 02:01:00,100
What was the name of the test?

1986
02:01:00,100 --> 02:01:03,060
The check, I can show that in a moment.

1987
02:01:03,060 --> 02:01:06,420
So it means that it figured out that this heading is missing

1988
02:01:07,740 --> 02:01:12,740
and also the instructions heading.

1989
02:01:18,340 --> 02:01:21,700
So did you have only three lines in your?

1990
02:01:21,700 --> 02:01:23,700
Yes, I had only three lines.

1991
02:01:23,700 --> 02:01:28,460
Yes, I just wanted to show this that it can be failed

1992
02:01:28,460 --> 02:01:33,460
because I didn't follow the automated testing thing.

1993
02:01:34,580 --> 02:01:37,960
So can I commit this directly to see whether it works?

1994
02:01:37,960 --> 02:01:38,800
Yeah.

1995
02:01:42,280 --> 02:01:44,240
Okay, I'm going to commit that.

1996
02:01:44,240 --> 02:01:46,400
I'll add these two lines.

1997
02:01:50,600 --> 02:01:54,160
Go to the headings.

1998
02:01:54,160 --> 02:02:05,240
So, when that happens, the pipeline will run again, and we'll go to the conversations and

1999
02:02:05,240 --> 02:02:06,840
we'll see it until it runs.

2000
02:02:06,840 --> 02:02:15,000
I think our colleague [name] is mentioning about 40, question 40, let me have a look

2001
02:02:15,000 --> 02:02:17,360
at that one first.

2002
02:02:17,360 --> 02:02:20,960
Could you explain why I have to set my fork repo as upstream

2003
02:02:20,960 --> 02:02:24,320
if I can push?

2004
02:02:24,320 --> 02:02:27,160
Current branch has no upstream branch.

2005
02:02:33,760 --> 02:02:38,820
So I think our colleagues are answering the question,

2006
02:02:38,820 --> 02:02:43,280
that one, properly.

2007
02:02:43,280 --> 02:02:47,080
So I don't see that we have to explain it much here.

2008
02:02:51,160 --> 02:02:53,120
Yes.

2009
02:02:53,120 --> 02:02:55,320
So it's about Git configuration as well.

2010
02:02:55,320 --> 02:02:57,360
How you configure Git could also change.

2011
02:02:57,360 --> 02:03:00,280
But if you're very specific, if you're explicit

2012
02:03:00,280 --> 02:03:04,440
when you do push and pulls, it will be more convenient.

2013
02:03:04,440 --> 02:03:08,000
Then we'll see the check.

2014
02:03:08,000 --> 02:03:10,920
It has passed.

2015
02:03:10,920 --> 02:03:17,280
Now, how can I check back again what has changed?

2016
02:03:17,280 --> 02:03:18,480
The file changed?

2017
02:03:18,480 --> 02:03:19,680
Yeah, file changed.

2018
02:03:19,680 --> 02:03:20,400
And the commits?

2019
02:03:20,400 --> 02:03:24,920
Also, you used last time the two commits.

2020
02:03:24,920 --> 02:03:27,800
Yes, so this is my commit and this is the original one.

2021
02:03:27,800 --> 02:03:29,880
And also file changed.

2022
02:03:29,880 --> 02:03:35,880
And now it has passed the tests.

2023
02:03:35,880 --> 02:03:41,520
Then what happens is, then I could go and approve this.

2024
02:03:41,520 --> 02:03:45,640
I don't want you to approve it, because as a matter of fact,

2025
02:03:45,640 --> 02:03:47,680
there is only ingredient and instructions,

2026
02:03:47,680 --> 02:03:51,360
but there is no real recipe for the chocolate pudding.

2027
02:03:51,360 --> 02:03:55,640
But you can suggest that, can you please

2028
02:03:55,640 --> 02:03:57,880
update the recipe or something?

2029
02:03:57,880 --> 02:03:59,920
OK.

2030
02:03:59,920 --> 02:04:03,040
Yeah, but the function we want to show

2031
02:04:03,040 --> 02:04:08,040
is that there are checks we can automate.

2032
02:04:09,400 --> 02:04:14,400
So if you see that when you do a pull request

2033
02:04:15,360 --> 02:04:18,000
and all the checks are not green,

2034
02:04:18,000 --> 02:04:20,560
that's something you have to check

2035
02:04:20,560 --> 02:04:24,760
that you follow all these checks updates.

2036
02:04:24,760 --> 02:04:26,560
Sometimes we use spell checker.

2037
02:04:26,560 --> 02:04:29,260
So if there is a spell error,

2038
02:04:29,260 --> 02:04:34,060
it will show spellchecker failed or something like that.

2039
02:04:34,060 --> 02:04:35,020
Yes.

2040
02:04:35,020 --> 02:04:38,300
But usually maybe it's like if you're developing Python,

2041
02:04:38,300 --> 02:04:40,220
for example, you might have PyTest

2042
02:04:40,220 --> 02:04:42,020
that you could check whether it pass.

2043
02:04:42,020 --> 02:04:44,100
Yeah.

2044
02:04:44,100 --> 02:04:50,300
Or if it's like C code, there might be checks alongside that.

2045
02:04:50,300 --> 02:04:53,620
So it will be more or less programmatic testing

2046
02:04:53,620 --> 02:04:54,980
in the real life.

2047
02:04:54,980 --> 02:04:55,480
Yeah.

2048
02:04:55,480 --> 02:04:58,020
More on to more about this next week.

2049
02:04:58,020 --> 02:04:59,780
Next week, okay.

2050
02:04:59,780 --> 02:05:02,780
So if you are curious about what Postgres is about,

2051
02:05:03,660 --> 02:05:06,820
you could go to this repository before next week.

2052
02:05:06,820 --> 02:05:10,100
You can click on this GitHub workflows

2053
02:05:11,540 --> 02:05:13,900
and then check this file.

2054
02:05:13,900 --> 02:05:16,700
What does, you know, how it is, you know, summoned.

2055
02:05:16,700 --> 02:05:20,380
How do you summon the check test to be done?

2056
02:05:20,380 --> 02:05:24,180
So it is a program that runs the check Python recipe.

2057
02:05:24,180 --> 02:05:27,660
This is how GitHub knows that it has to run it.

2058
02:05:27,660 --> 02:05:31,940
And then if you go back, you will see that file here.

2059
02:05:31,940 --> 02:05:34,820
Check recipe file, it's a Python code

2060
02:05:34,820 --> 02:05:38,620
that checks that there are certain things included.

2061
02:05:38,620 --> 02:05:40,820
Yeah, and yeah, it's-

2062
02:05:40,820 --> 02:05:45,820
Yeah, I will try to merge all the pull request,

2063
02:05:46,740 --> 02:05:50,300
but Saby, you have a forked version

2064
02:05:50,300 --> 02:05:51,820
under your namespace, right?

2065
02:05:51,820 --> 02:05:53,120
So since you pushed,

2066
02:05:54,180 --> 02:05:57,160
as you approved the pull request from my side,

2067
02:05:57,160 --> 02:06:00,240
there might be some changes in the upstream repository

2068
02:06:00,240 --> 02:06:03,400
that is not there in your forked one, right?

2069
02:06:03,400 --> 02:06:04,520
Let's check.

2070
02:06:07,240 --> 02:06:08,880
So, okay.

2071
02:06:08,880 --> 02:06:11,720
That fork, so I don't have a fork actually,

2072
02:06:11,720 --> 02:06:13,640
I have not created that one.

2073
02:06:13,640 --> 02:06:15,880
It was the centralized repository that I had a fork,

2074
02:06:15,880 --> 02:06:17,440
which I shouldn't have created.

2075
02:06:18,480 --> 02:06:20,840
I could create one actually now.

2076
02:06:20,840 --> 02:06:27,320
So after I created the fork from that repository,

2077
02:06:27,320 --> 02:06:31,800
you could merge so we could show the synchronization.

2078
02:06:31,800 --> 02:06:33,440
Now it's being created.

2079
02:06:33,440 --> 02:06:34,600
So now it's created.

2080
02:06:34,600 --> 02:06:43,080
Now it's in the, let me check the status of it.

2081
02:06:43,080 --> 02:07:03,720
Since I copied it like now at one past, it'll be in a frozen state from that place I copied.

2082
02:07:03,720 --> 02:07:07,240
Yeah, you can try to review some other pull request as well.

2083
02:07:07,240 --> 02:07:09,960
Yeah, let's do that. 4K exercise recorded.

2084
02:07:22,680 --> 02:07:25,960
Yeah, which looks good.

2085
02:07:37,240 --> 02:07:52,560
So, it failed. Let's see why it failed. Okay, it was some temporary glitch in Git. Let's

2086
02:07:52,560 --> 02:08:01,520
see again. Maybe you also tried to merge the same thing?

2087
02:08:01,520 --> 02:08:04,040
No, I merged something else.

2088
02:08:04,040 --> 02:08:06,040
So you can go to the urnamespace.

2089
02:08:06,040 --> 02:08:10,800
So you will see that your fork is not up to date

2090
02:08:10,800 --> 02:08:12,520
with the upstream repository.

2091
02:08:12,520 --> 02:08:14,160
Yeah, I think now it's OK.

2092
02:08:21,040 --> 02:08:22,040
Checks pass.

2093
02:08:22,040 --> 02:08:24,160
So now let's go to my fork.

2094
02:08:24,160 --> 02:08:27,760
So here, so these are the commits that I have.

2095
02:08:27,760 --> 02:08:28,760
Let's check the graph.

2096
02:08:32,480 --> 02:08:35,400
Traffic, code frequency, dependency graph.

2097
02:08:38,120 --> 02:08:41,200
Okay, that's not the one, commits maybe, yeah.

2098
02:08:41,200 --> 02:08:43,800
So I am here, four commits.

2099
02:08:44,920 --> 02:08:47,860
Yeah, if you go to the code, it says [name].

2100
02:08:49,240 --> 02:08:50,420
Sorry, which one?

2101
02:08:50,420 --> 02:08:51,680
Yeah, now you could see

2102
02:08:51,680 --> 02:08:54,120
that this branch is four commits behind.

2103
02:08:54,120 --> 02:08:55,240
Yes, yes.

2104
02:08:55,240 --> 02:09:00,240
So if you want to sync to the upstream repository,

2105
02:09:00,240 --> 02:09:02,640
repository, what you are supposed to do?

2106
02:09:02,640 --> 02:09:03,140
Yeah.

2107
02:09:03,140 --> 02:09:03,640
Yes.

2108
02:09:03,640 --> 02:09:05,400
So I could click this button, and it'll

2109
02:09:05,400 --> 02:09:09,640
synchronize with the top button.

2110
02:09:09,640 --> 02:09:10,640
I could compare also.

2111
02:09:10,640 --> 02:09:11,800
Let's see what it shows.

2112
02:09:15,520 --> 02:09:18,720
OK, so actually, I have not made any changes.

2113
02:09:18,720 --> 02:09:21,640
So let's say if I had made some changes while that happens,

2114
02:09:21,640 --> 02:09:24,920
the synchronization might probably fail.

2115
02:09:24,920 --> 02:09:34,920
Let's go back and sync fork update branch.

2116
02:09:34,920 --> 02:09:40,920
Yeah, this branch is up to date.

2117
02:09:40,920 --> 02:09:46,920
So let's say if I had done some modifications to the main branch in my fork,

2118
02:09:46,920 --> 02:09:50,920
then it might have made some issues,

2119
02:09:50,920 --> 02:09:53,800
But it's always good practice to not

2120
02:09:53,800 --> 02:09:58,240
to do it on the main branch, but on your own branch.

2121
02:09:58,240 --> 02:10:02,720
Because once after you form, you could even

2122
02:10:02,720 --> 02:10:06,520
modify your main branch if it is not protected.

2123
02:10:09,280 --> 02:10:12,360
OK, I think those are the things we are planning to mention.

2124
02:10:12,360 --> 02:10:14,760
Maybe we can see whether there are any questions that we

2125
02:10:14,760 --> 02:10:16,560
are going to take up in the stream.

2126
02:10:16,560 --> 02:10:19,320
Yeah, and thank you for all this pull request.

2127
02:10:19,320 --> 02:10:22,560
I will try to merge it later.

2128
02:10:22,560 --> 02:10:25,040
But thank you for the active participation

2129
02:10:25,040 --> 02:10:27,440
sending pull request and creating issues.

2130
02:10:27,440 --> 02:10:33,760
And I hope you had fun while creating recipes.

2131
02:10:33,760 --> 02:10:37,480
Yes, so there are some questions about how to directly do it

2132
02:10:37,480 --> 02:10:39,360
from the command line.

2133
02:10:39,360 --> 02:10:42,800
For example, send a pull request.

2134
02:10:42,800 --> 02:10:48,040
Usually, it doesn't, with the git commands itself,

2135
02:10:48,040 --> 02:10:52,160
As far as I know, you can't do it, but you could.

2136
02:10:52,160 --> 02:10:56,400
There are APIs, we call them APIs,

2137
02:10:56,400 --> 02:10:59,480
which means that you can programmatically access Git

2138
02:10:59,480 --> 02:11:03,960
and do that if that is needed using programs like Curl

2139
02:11:03,960 --> 02:11:11,920
and Git and put instructions, but not directly Git.

2140
02:11:11,920 --> 02:11:15,200
Yeah, and maybe something I usually do

2141
02:11:15,200 --> 02:11:18,680
is I try to keep my fork up to date,

2142
02:11:18,680 --> 02:11:23,120
then pull my fork when I need to update.

2143
02:11:24,920 --> 02:11:26,440
So that's what something I do,

2144
02:11:26,440 --> 02:11:30,160
but it is maybe the optimal way someone wants to do it.

2145
02:11:31,760 --> 02:11:34,400
Yes, yeah, so keeping up to date

2146
02:11:34,400 --> 02:11:36,640
without becoming stale for a long time will help.

2147
02:11:36,640 --> 02:11:40,120
Otherwise, if you're not done any changes locally,

2148
02:11:40,120 --> 02:11:42,760
you could always update.

2149
02:11:42,760 --> 02:11:44,800
But if you're keeping on updating locally

2150
02:11:44,800 --> 02:11:50,040
without syncing, it will create a lot of conflicts.

2151
02:11:50,040 --> 02:11:54,320
And then this hash and the number, that is the trigger.

2152
02:11:54,320 --> 02:11:57,400
So you could also refer to pull requests.

2153
02:11:57,400 --> 02:12:04,400
So there are about the, there's another symbol.

2154
02:12:04,400 --> 02:12:05,280
I forgot the symbol.

2155
02:12:05,280 --> 02:12:06,620
So you could say that's at the rate,

2156
02:12:06,620 --> 02:12:07,740
and there are the symbols.

2157
02:12:07,740 --> 02:12:10,280
You can refer to other commits.

2158
02:12:10,280 --> 02:12:11,360
You can refer to pulls.

2159
02:12:11,360 --> 02:12:12,620
You can pull requests.

2160
02:12:12,620 --> 02:12:16,820
you can refer to issues.

2161
02:12:16,820 --> 02:12:19,860
There seems to be many questions discussing

2162
02:12:19,860 --> 02:12:22,700
around linking between issues and PRs.

2163
02:12:26,740 --> 02:12:35,660
So I could, again, maybe test something,

2164
02:12:35,660 --> 02:12:37,700
show something here as well.

2165
02:12:37,700 --> 02:12:43,220
So the link between the issue and the pull request

2166
02:12:43,220 --> 02:12:45,980
is the issue is where you discuss the details.

2167
02:12:45,980 --> 02:12:47,420
That is a discussion.

2168
02:12:47,420 --> 02:12:53,660
The pull request is the code that you send.

2169
02:12:53,660 --> 02:12:54,860
So that's the difference.

2170
02:12:54,860 --> 02:12:57,060
And why we are linking it is that it's

2171
02:12:57,060 --> 02:13:01,740
important to have a discussion before you suggest changes.

2172
02:13:01,740 --> 02:13:05,740
that makes things, the development pipeline

2173
02:13:05,740 --> 02:13:12,860
and the workflows less, I would say, more friendly.

2174
02:13:12,860 --> 02:13:16,140
Yeah, it is when you work with many people,

2175
02:13:16,140 --> 02:13:19,380
it's always nice to have a lot of feedback

2176
02:13:19,380 --> 02:13:21,940
and let other people know about things.

2177
02:13:21,940 --> 02:13:26,060
So having issues as a workflow is very good.

2178
02:13:26,060 --> 02:13:35,540
Yeah, apart from that, I think let's see whether any other questions or go to final colleagues

2179
02:13:35,540 --> 02:13:43,460
do is there anything more that anything very specific that we don't talk during the questions

2180
02:13:43,460 --> 02:13:45,220
the shared document.

2181
02:13:51,780 --> 02:13:53,860
Yeah, I think it's all good.

2182
02:13:56,100 --> 02:13:58,820
So we have, I think, 20 minutes left, [name], is it?

2183
02:13:58,820 --> 02:14:02,020
Yes, it was supposed to be on discussion,

2184
02:14:02,020 --> 02:14:05,060
but if there is more question to discuss it,

2185
02:14:05,060 --> 02:14:05,940
that would be nice.

2186
02:14:07,620 --> 02:14:10,260
Let's see whether there's anything we can discuss more.

2187
02:14:13,460 --> 02:14:34,460
Okay.

2188
02:14:34,460 --> 02:14:42,460
Yes.

2189
02:14:42,460 --> 02:14:45,540
Maybe we could go through the whole process again,

2190
02:14:45,540 --> 02:14:48,180
because there are some questions about the issues and all.

2191
02:14:48,180 --> 02:14:49,620
Yeah.

2192
02:14:49,620 --> 02:14:54,300
So what I will do is we have this repository forking exercise,

2193
02:14:54,300 --> 02:15:01,980
but I have a copy now of that in my namespace as well.

2194
02:15:01,980 --> 02:15:05,980
I will do it again to show what's happening.

2195
02:15:05,980 --> 02:15:12,180
So before I do that, working flow exercise recorded.

2196
02:15:12,180 --> 02:15:14,540
because I have too many tabs open,

2197
02:15:14,540 --> 02:15:16,940
I just want to make sure it's the correct one.

2198
02:15:16,940 --> 02:15:21,680
So here, I'm going to open an issue.

2199
02:15:23,140 --> 02:15:23,980
New.

2200
02:15:31,460 --> 02:15:33,340
I've got the spelling all this.

2201
02:15:37,340 --> 02:15:38,180
CP.

2202
02:15:38,180 --> 02:15:43,180
Sorry, recipe, recipe.

2203
02:15:45,740 --> 02:15:50,740
So what should I, for something.

2204
02:15:55,520 --> 02:15:59,820
Okay, so this is where things started.

2205
02:15:59,820 --> 02:16:03,120
So I went through this repo and I found out

2206
02:16:03,120 --> 02:16:06,180
that there's something I want to contribute.

2207
02:16:06,180 --> 02:16:11,100
So this is start, and I submit that issue.

2208
02:16:11,100 --> 02:16:14,100
Now, this is the original repository

2209
02:16:14,100 --> 02:16:18,580
that I copied folk from, not copied, copied folk from.

2210
02:16:18,580 --> 02:16:22,540
So then I submit new issue.

2211
02:16:22,540 --> 02:16:24,100
Now, this is the discussion.

2212
02:16:24,100 --> 02:16:27,340
And then if you could, in issue 28,

2213
02:16:27,340 --> 02:16:29,980
if you could mention something, OK, please

2214
02:16:29,980 --> 02:16:31,340
go ahead or something.

2215
02:16:36,180 --> 02:16:37,180
Done?

2216
02:16:37,180 --> 02:16:38,180
Yeah.

2217
02:16:38,180 --> 02:16:41,180
I don't see it yet.

2218
02:16:41,180 --> 02:16:44,180
Did I comment it?

2219
02:16:44,180 --> 02:16:45,180
Yes.

2220
02:16:45,180 --> 02:16:46,180
Okay.

2221
02:16:46,180 --> 02:16:49,180
Yes, that would be great.

2222
02:16:49,180 --> 02:16:51,180
Please go ahead.

2223
02:16:51,180 --> 02:16:55,180
So now I see that, you know, I should be able to see it.

2224
02:16:55,180 --> 02:16:58,300
I don't see it yet.

2225
02:16:58,300 --> 02:16:59,460
Did I comment it?

2226
02:16:59,460 --> 02:17:00,100
Did you see it?

2227
02:17:00,100 --> 02:17:01,060
Yes, OK, now I could.

2228
02:17:01,060 --> 02:17:03,260
Yes, that would be great.

2229
02:17:03,260 --> 02:17:04,380
Please go ahead.

2230
02:17:04,380 --> 02:17:07,020
So now I see that I should be working on it.

2231
02:17:07,020 --> 02:17:09,020
But there will be a longer discussion on what's

2232
02:17:09,020 --> 02:17:10,180
and what's not.

2233
02:17:10,180 --> 02:17:11,860
Now I should be going for that.

2234
02:17:11,860 --> 02:17:14,220
Then I'll go to my repository.

2235
02:17:14,220 --> 02:17:18,620
I mean, the fork in my namespace.

2236
02:17:18,620 --> 02:17:22,820
I'm going to load it.

2237
02:17:22,820 --> 02:17:29,620
I could, of course, do it in the Git, on the web page as well.

2238
02:17:29,620 --> 02:17:37,020
But maybe it's easier to show the details on the terminal.

2239
02:17:37,020 --> 02:17:40,540
So I'm in my terminal.

2240
02:17:40,540 --> 02:17:45,300
Let me see where am I. So I'll go to steps.

2241
02:17:47,900 --> 02:17:48,620
Yeah.

2242
02:17:48,620 --> 02:17:50,300
So then, now it is the cloning.

2243
02:17:50,300 --> 02:17:51,500
The issue is open.

2244
02:17:51,500 --> 02:17:56,380
the forking has done.

2245
02:17:56,380 --> 02:17:58,860
Clone

2246
02:17:58,940 --> 02:18:02,380
repository. So as you can see, it is

2247
02:18:13,260 --> 02:18:16,060
cloning from my namespace not from the original place I forked from.

2248
02:18:16,060 --> 02:18:19,620
git branch.

2249
02:18:19,620 --> 02:18:23,140
And then after working on this kind of repositories,

2250
02:18:23,140 --> 02:18:31,300
especially when forked, it might be very useful to know git

2251
02:18:31,300 --> 02:18:36,700
the which remote I've actually connected to.

2252
02:18:36,700 --> 02:18:39,980
So if you type the command with remote verbose,

2253
02:18:39,980 --> 02:18:48,220
it will tell you the origin refers to the fork you made.

2254
02:18:48,220 --> 02:18:51,620
So if it is the repository that you don't have access to,

2255
02:18:51,620 --> 02:18:53,500
then you should change that.

2256
02:18:53,500 --> 02:18:54,900
So it's all good.

2257
02:18:54,900 --> 02:18:56,060
Then I'll create a branch.

2258
02:19:01,580 --> 02:19:03,340
Because I'm on the main branch, it

2259
02:19:03,340 --> 02:19:05,020
will create from the main branch.

2260
02:19:05,020 --> 02:19:08,380
Or you could specify it from what?

2261
02:19:08,380 --> 02:19:14,940
I will use my name, so I could track it easily.

2262
02:19:23,580 --> 02:19:28,300
So then I can ask again git branch, but then it will show that I am still on the

2263
02:19:30,940 --> 02:19:37,900
master branch, because I created the branch, I didn't change it. So git switch or git checkout

2264
02:19:38,380 --> 02:19:43,380
the branch, then get branch and this branch.

2265
02:19:44,620 --> 02:19:46,460
So I'm going to make the change now.

2266
02:19:48,460 --> 02:19:52,380
Let's go to the salads.

2267
02:19:53,940 --> 02:19:56,580
So I'm going to now invite a new salad.

2268
02:19:57,540 --> 02:19:59,540
I'll start from an existing one.

2269
02:20:04,940 --> 02:20:05,780
New mixed.

2270
02:20:08,380 --> 02:20:13,380
So here I will add, what could I add?

2271
02:20:21,260 --> 02:20:25,200
Yeah, some random things.

2272
02:20:31,140 --> 02:20:33,140
Four cups of oil, right?

2273
02:20:38,380 --> 02:20:47,740
Then I will save the file, and I will ask git status.

2274
02:20:47,740 --> 02:20:52,620
So that file is modified on my local computer, git is not tracking that.

2275
02:20:52,620 --> 02:21:01,660
So let's say now if you accidentally delete that file, you can't recover it.

2276
02:21:01,660 --> 02:21:12,300
I will add git new file, git add the new file, now at least the git knows it now. If it gets

2277
02:21:12,300 --> 02:21:19,260
deleted you can get it back, git commit. Now this is where the commit message comes.

2278
02:21:20,060 --> 02:21:25,100
So we are going to say that I'm going to, what I'm going to say is that the commit I'm going to make

2279
02:21:25,100 --> 02:21:33,660
is talking about this issue that we have been talking.

2280
02:21:33,660 --> 02:21:36,460
So issue number 28.

2281
02:21:36,460 --> 02:21:40,660
So when this file ends up in the main code base,

2282
02:21:40,660 --> 02:21:53,060
it will fix us this new change fixes issue number 28.

2283
02:21:55,580 --> 02:21:57,700
So now it is locally here.

2284
02:21:57,700 --> 02:22:02,180
Now if I lose my laptop or somebody steal it,

2285
02:22:02,180 --> 02:22:05,720
still it's gone, because it didn't reach the cloud.

2286
02:22:05,720 --> 02:22:10,180
So now what I want to do is to send this change

2287
02:22:10,180 --> 02:22:14,100
to the fork I made.

2288
02:22:14,100 --> 02:22:16,140
Then git status again.

2289
02:22:19,940 --> 02:22:22,940
But then I will do git push explicitly.

2290
02:22:22,940 --> 02:22:24,940
So it doesn't matter how the configurations are.

2291
02:22:24,940 --> 02:22:28,340
So I would say git push listens to the origin.

2292
02:22:28,340 --> 02:22:30,340
So what is the origin?

2293
02:22:30,340 --> 02:22:34,300
That I'm going to hash it up and stop it by executing

2294
02:22:34,300 --> 02:22:37,940
to show the origin again.

2295
02:22:37,940 --> 02:22:40,860
So the label origin refer to this URL.

2296
02:22:40,860 --> 02:22:43,420
So I could have used this URL instead.

2297
02:22:43,420 --> 02:22:47,420
So I could even use this complete URL if I want.

2298
02:22:47,420 --> 02:22:52,140
Git push origin for that URL.

2299
02:22:52,140 --> 02:22:55,140
I want to go at upstream, and I want

2300
02:22:55,140 --> 02:22:59,540
to create a name branch in my fork with the same name

2301
02:22:59,540 --> 02:23:02,180
and connect both together.

2302
02:23:02,180 --> 02:23:04,500
I'm going to change that.

2303
02:23:04,500 --> 02:23:10,940
So now this goes to my branch, right?

2304
02:23:10,940 --> 02:23:20,060
So it's here in this repository.

2305
02:23:20,060 --> 02:23:21,980
So then what happens is now this is

2306
02:23:21,980 --> 02:23:26,100
in my fork, and the main developers don't know about it.

2307
02:23:26,100 --> 02:23:28,540
So that is when we talk about the fork.

2308
02:23:28,540 --> 02:23:33,540
Now we have to send the request, which

2309
02:23:33,540 --> 02:23:37,620
we call the pool request, so the developers can integrate

2310
02:23:37,620 --> 02:23:40,580
into the main branch.

2311
02:23:40,580 --> 02:23:43,900
So did you mention all the terms, [name]?

2312
02:23:43,900 --> 02:23:45,860
Do we need to explain more?

2313
02:23:45,860 --> 02:23:50,340
Yeah, I think it is OK that we have mentioned it.

2314
02:23:50,340 --> 02:23:52,820
but if there is any questions you want to,

2315
02:23:52,820 --> 02:23:54,500
I think everything is us.

2316
02:23:54,500 --> 02:23:57,460
I'm trying to merge in between,

2317
02:23:57,460 --> 02:23:59,460
but I think that will help me.

2318
02:23:59,460 --> 02:24:02,900
And there are four more pull request.

2319
02:24:02,900 --> 02:24:04,220
One is from my side,

2320
02:24:04,220 --> 02:24:05,900
but thank you for all the pull request,

2321
02:24:05,900 --> 02:24:06,780
but we will merge it.

2322
02:24:06,780 --> 02:24:08,900
And you can try to sing your folk

2323
02:24:10,860 --> 02:24:13,300
that there are more merge is already there.

2324
02:24:17,020 --> 02:24:19,100
Is there anything we missed to,

2325
02:24:20,340 --> 02:24:33,460
anything from our colleagues? Maybe [name] or [name] wants to say the summary and ask

2326
02:24:33,460 --> 02:24:42,420
for feedback. Should we do that? We have 10 more minutes. And you can ask questions.

2327
02:24:42,420 --> 02:24:55,420
Yeah, I think we could take maybe one more question here.

2328
02:24:55,420 --> 02:25:07,420
Yeah.

2329
02:25:07,420 --> 02:25:08,260
Have a look.

2330
02:25:25,060 --> 02:25:27,420
Is there anything specific you want to take up

2331
02:25:27,420 --> 02:25:31,400
with [name] that we missed during the discussion?

2332
02:25:32,740 --> 02:25:34,540
Yeah, so sometimes it's branch creation,

2333
02:25:34,540 --> 02:25:36,980
sometimes send from the main,

2334
02:25:36,980 --> 02:25:41,100
so from the main of the home to main of the upstream,

2335
02:25:41,100 --> 02:25:43,060
it also could work,

2336
02:25:43,060 --> 02:25:46,280
but it's better to create your own brand first.

2337
02:25:50,820 --> 02:25:54,140
Okay, so please, I think it's been merged.

2338
02:25:56,300 --> 02:25:58,260
Yeah, one thing is my issue is resolved

2339
02:25:58,260 --> 02:25:59,780
and the pull request is accepted,

2340
02:25:59,780 --> 02:26:02,740
but I can't find my recipe.

2341
02:26:02,740 --> 02:26:03,740
Oh yeah.

2342
02:26:03,740 --> 02:26:08,240
Uh-huh, so that actually, you know,

2343
02:26:08,240 --> 02:26:13,240
maybe we learn git blame or git annotate at some point.

2344
02:26:15,520 --> 02:26:16,880
I think we have already done that.

2345
02:26:16,880 --> 02:26:17,720
Okay, let's see.

2346
02:26:19,480 --> 02:26:23,520
So this, in this exercise, so this is the main workflow.

2347
02:26:26,020 --> 02:26:30,800
And the file, the commits that were made.

2348
02:26:30,800 --> 02:26:45,800
Let's see if I can find those settings and whereas the list of commits, it's not there.

2349
02:26:45,800 --> 02:26:54,800
Let me go back here and see.

2350
02:26:54,800 --> 02:26:55,800
That's not the list.

2351
02:26:55,800 --> 02:27:08,800
There is a list of maybe insights and commits, that's it.

2352
02:27:08,800 --> 02:27:10,800
So it just shows the number.

2353
02:27:10,800 --> 02:27:11,800
Let's see the traffic.

2354
02:27:11,800 --> 02:27:19,800
Okay, that's just a number, contributors.

2355
02:27:19,800 --> 02:27:21,800
It's taking some time.

2356
02:27:21,800 --> 02:27:26,760
So one way would be, you know, I have these four commits.

2357
02:27:26,760 --> 02:27:28,040
So I made four commits.

2358
02:27:28,040 --> 02:27:29,640
If I click those commits,

2359
02:27:29,640 --> 02:27:33,040
I could see which files they were referring to.

2360
02:27:35,960 --> 02:27:39,400
Then in that way, you could find, you know,

2361
02:27:39,400 --> 02:27:41,680
if you forgot everything about, you know,

2362
02:27:41,680 --> 02:27:45,360
which recipe it was or file name or all the details,

2363
02:27:45,360 --> 02:27:47,160
you could still find out.

2364
02:27:47,160 --> 02:27:50,400
So if I go to that recipe, that file,

2365
02:27:50,400 --> 02:27:55,400
then I would see that, you know, what I have done.

2366
02:27:58,940 --> 02:28:00,100
So that is one way.

2367
02:28:00,100 --> 02:28:01,940
So this you could do in the terminal

2368
02:28:01,940 --> 02:28:04,860
with the command called git show

2369
02:28:04,860 --> 02:28:06,900
and the commit message, it'll show that.

2370
02:28:11,100 --> 02:28:15,660
Apart from that, let's see a file, maybe a desert.

2371
02:28:15,660 --> 02:28:26,900
this file. And if you go to a specific file, you will find this tab called blame. And in

2372
02:28:26,900 --> 02:28:36,860
that file, it'll tell, it'll detail who contributed what, at what point. So this is not really

2373
02:28:36,860 --> 02:28:45,180
to blame people, it is to show that who did what. So those are different ways that you

2374
02:28:45,180 --> 02:28:48,020
you could find out what you did.

2375
02:28:50,860 --> 02:28:54,380
Also, I think there is this pulse or something.

2376
02:28:54,380 --> 02:28:57,020
Let me check that one inside.

2377
02:29:00,580 --> 02:29:02,160
Yeah, people is one thing.

2378
02:29:04,060 --> 02:29:06,460
Then, where is that?

2379
02:29:10,580 --> 02:29:14,660
For frequency, it gives the number of contributions

2380
02:29:14,660 --> 02:29:21,940
by each person, maybe contributors.

2381
02:29:21,940 --> 02:29:22,860
Yeah.

2382
02:29:22,860 --> 02:29:25,780
So here, I think we showed that earlier, how many lines,

2383
02:29:25,780 --> 02:29:30,540
how many commits that has been contributed.

2384
02:29:30,540 --> 02:29:32,780
Yeah, I think that's all, [name].

2385
02:29:32,780 --> 02:29:35,420
Anything else that we have mentioned?

2386
02:29:35,420 --> 02:29:38,140
For tomorrow, is there anything that?

2387
02:29:38,140 --> 02:29:38,740
Next week.

2388
02:29:38,740 --> 02:29:41,740
For the next week, the next day, day four?

2389
02:29:41,740 --> 02:29:44,860
Yeah, we can start talking a little bit about next week.

2390
02:29:44,860 --> 02:29:48,620
So this week has been the version control week.

2391
02:29:48,620 --> 02:29:53,060
So basically, everything about Git and these very, well,

2392
02:29:53,060 --> 02:29:56,980
artificial but somewhat, yeah, if you

2393
02:29:56,980 --> 02:30:00,460
can share the feedback form, that would be good.

2394
02:30:00,460 --> 02:30:04,300
That would be good.

2395
02:30:04,300 --> 02:30:06,900
But next week, we really change tracks.

2396
02:30:06,900 --> 02:30:12,980
and we begin looking at much more applied things. So if I remember right,

2397
02:30:13,780 --> 02:30:21,780
Tuesday is social coding and reproducible research, where we talk about how to build

2398
02:30:21,780 --> 02:30:27,540
larger projects, how to license your code, encourage feedback, how to share things,

2399
02:30:27,540 --> 02:30:35,380
and so on. Reproducible research is making, well, computational research more reproducible.

2400
02:30:35,380 --> 02:30:46,840
Wednesday is Jupyter and documentation, and then Thursday is automated testing and modular

2401
02:30:46,840 --> 02:30:48,240
code development.

2402
02:30:48,240 --> 02:30:53,920
And basically all of these future lessons somehow use Git in more applied things.

2403
02:30:53,920 --> 02:31:00,120
So if some things you see today seem a bit abstract, if you come next week you can see

2404
02:31:00,120 --> 02:31:04,720
the real use cases as we do things.

2405
02:31:04,720 --> 02:31:08,320
So on the other hand,

2406
02:31:08,320 --> 02:31:11,120
since these are, so we

2407
02:31:11,120 --> 02:31:12,520
used to have a lot of exercises

2408
02:31:12,520 --> 02:31:14,260
for next week and we still do.

2409
02:31:14,260 --> 02:31:17,720
But next week is all focused on demos.

2410
02:31:17,720 --> 02:31:19,600
So during the courses,

2411
02:31:19,600 --> 02:31:22,120
we'll give demos on the topics.

2412
02:31:22,120 --> 02:31:28,240
And then, and yes,

2413
02:31:28,240 --> 02:31:29,420
so we give demos,

2414
02:31:29,420 --> 02:31:34,460
but we leave it up to you to do the exercises yourself after the workshop.

2415
02:31:34,460 --> 02:31:39,020
So it'll feel a little bit different, but we still have plenty for you to do.

2416
02:31:39,820 --> 02:31:47,420
Just with a 20 or 25 or 30 minute exercise break, it's just not feasible to have enough

2417
02:31:47,420 --> 02:31:50,780
time for everyone to do everything. So this is what we've settled on.

2418
02:31:52,860 --> 02:31:57,660
But definitely... So [name], we have the feedback. Could you mention a little bit about

2419
02:31:57,660 --> 02:31:58,160
Yes.

2420
02:31:58,160 --> 02:31:59,260
The feedback box.

2421
02:31:59,260 --> 02:31:59,760
Yes.

2422
02:31:59,760 --> 02:32:02,180
So we have the feedback here.

2423
02:32:02,180 --> 02:32:05,300
I guess you've seen this from past weeks.

2424
02:32:05,300 --> 02:32:08,740
We're writing the news for the next day, which

2425
02:32:08,740 --> 02:32:11,780
will also be emailed out.

2426
02:32:11,780 --> 02:32:17,660
Please do add in all your comments and so on.

2427
02:32:20,700 --> 02:32:21,200
Yeah.

2428
02:32:21,200 --> 02:32:23,220
And also things to improve.

2429
02:32:23,220 --> 02:32:25,340
Please give honest opinion.

2430
02:32:25,340 --> 02:32:27,020
Improve next.

2431
02:32:27,020 --> 02:32:29,260
there are something that we can improve by next week,

2432
02:32:29,260 --> 02:32:30,740
maybe in future courses,

2433
02:32:30,740 --> 02:32:36,340
and we don't take that personally if something can improve.

2434
02:32:36,340 --> 02:32:38,780
So please provide that in a positive way, of course,

2435
02:32:38,780 --> 02:32:46,260
positive feedback on how to improve it as much as you can describe,

2436
02:32:46,260 --> 02:32:48,100
not too much either.

2437
02:32:48,100 --> 02:32:52,060
But if you saw something that we should improve,

2438
02:32:52,060 --> 02:32:53,540
please let us know.

2439
02:32:53,540 --> 02:32:56,100
We don't take it as negative.

2440
02:32:56,100 --> 02:33:00,900
We take it as a positive thing for us to improve next time.

2441
02:33:00,900 --> 02:33:01,620
Yeah.

2442
02:33:01,620 --> 02:33:03,860
So go ahead.

2443
02:33:03,860 --> 02:33:08,100
Yeah, and there was a question about how to interact with us.

2444
02:33:08,100 --> 02:33:10,340
Join the Zulip chat, as mentioned in the chat.

2445
02:33:10,340 --> 02:33:14,620
So we will be there most of the time, most of us.

2446
02:33:14,620 --> 02:33:17,660
But you are welcome to join the community chat.

2447
02:33:17,660 --> 02:33:19,140
That would be great.

2448
02:33:19,140 --> 02:33:20,300
Yeah.

2449
02:33:20,300 --> 02:33:23,140
And also, if you want to re-deliver this,

2450
02:33:23,140 --> 02:33:25,140
please join the Code Refinery team.

2451
02:33:25,140 --> 02:33:34,180
organize local workshops in your workplace if you like the workshops and also [name] you know

2452
02:33:34,180 --> 02:33:38,740
since morning they were seeing us a lot but you know there's a lot of people behind this

2453
02:33:38,740 --> 02:33:44,500
yeah the organizers and the people who coordinate this for example [name] was managing the

2454
02:33:45,700 --> 02:33:51,460
the stream with a lot of balls juggling he has you know in addition to the work he had some

2455
02:33:51,460 --> 02:34:00,020
issues he has to attend to and all the [name] was really helping and without also the team

2456
02:34:00,020 --> 02:34:06,980
leaders who are working with the team that was very good that we have that kind of different

2457
02:34:06,980 --> 02:34:14,260
type of learning teams that everything all all behind the scenes you you saw only us today but

2458
02:34:14,260 --> 02:34:19,220
there were many people behind the scene and just want to thank you thank you for your participation

2459
02:34:19,220 --> 02:34:25,220
and thank you for all who work very hard to make it possible behind the scenes. Thank you.

2460
02:34:26,420 --> 02:34:33,700
So [name], as a final thing, if somebody wants to let's say thank us, what is the best way to do

2461
02:34:33,700 --> 02:34:44,180
that? Tell people about this and then in a few years, if you're still involved in this,

2462
02:34:44,180 --> 02:34:47,780
help mentor the people who take the course in the future.

2463
02:34:49,860 --> 02:34:53,620
And if you're really interested, then come join us later.

2464
02:34:53,620 --> 02:34:58,900
But starting local with mentoring others is, I think, the most important impact.

2465
02:34:59,780 --> 02:35:02,020
Do you know more about this ambassador program?

2466
02:35:03,540 --> 02:35:05,140
Do you have any more information about it?

2467
02:35:08,020 --> 02:35:13,860
There's something called Code Refinery Ambassadors, which we're starting.

2468
02:35:14,180 --> 02:35:20,820
where basically it's people that know a lot about these tools and want to go and support people at

2469
02:35:20,820 --> 02:35:32,100
their own institutions or areas a little bit more in these things. Maybe we can hear more about this

2470
02:35:32,100 --> 02:35:38,180
next week. I think it's on the website. Maybe someone can add it to the notes down there.

2471
02:35:38,180 --> 02:36:02,180
Yeah. I would like to say one thing. So earlier in the day, there was a comment about niceness and political correctness that we removed. So this wasn't a bad thing. Like, there's nothing wrong. But it's something that we didn't have time to go into more depth at the time.

2472
02:36:02,180 --> 02:36:08,820
time. And actually next Tuesday in social coding would be a good time to talk more about these,

2473
02:36:08,820 --> 02:36:15,220
like bringing more people on boards. So in hindsight, us, the people that had been managing

2474
02:36:15,220 --> 02:36:19,540
the notes and answering the questions, I think we would have liked to have left it there but

2475
02:36:19,540 --> 02:36:27,860
pointed out to resume this next week. So us in the background would like to apologize for that.

2476
02:36:27,860 --> 02:36:35,860
But we do, like, in general, like even off-topic cheering and other things like that.

2477
02:36:35,860 --> 02:36:36,860
Okay.

2478
02:36:36,860 --> 02:36:38,860
Anything else?

2479
02:36:38,860 --> 02:36:41,860
I think, yeah, that's it.

2480
02:36:41,860 --> 02:36:44,860
It's in your hand, Rijat, now.

2481
02:36:44,860 --> 02:36:45,860
Yeah.

2482
02:36:45,860 --> 02:36:46,860
Okay.

2483
02:36:46,860 --> 02:36:48,860
You have to take down things.

2484
02:36:48,860 --> 02:36:54,860
So, yeah, I guess we've said enough.

2485
02:36:54,860 --> 02:37:01,660
We hope to see you next week, and we hope you like the change of pace then.

2486
02:37:01,660 --> 02:37:05,380
So maybe we can hang up now.

2487
02:37:05,380 --> 02:37:07,060
Thank you.

2488
02:37:07,060 --> 02:37:08,060
Okay.

2489
02:37:08,060 --> 02:37:09,060
Thank you.

2490
02:37:09,060 --> 02:37:10,060
Bye.

2491
02:37:10,060 --> 02:37:11,180
Thank you very much.

