1
00:00:00,000 --> 00:00:02,000
CodeRefinery.org

2
00:00:30,000 --> 00:00:32,060
you

3
00:01:00,000 --> 00:01:02,060
you

4
00:01:30,000 --> 00:01:32,060
you

5
00:02:00,000 --> 00:02:02,060
you

6
00:02:30,000 --> 00:02:32,060
you

7
00:03:00,000 --> 00:03:01,000
Hello.

8
00:03:01,000 --> 00:03:02,000
Hello.

9
00:03:02,000 --> 00:03:03,000
Good morning.

10
00:03:03,000 --> 00:03:04,000
Now I heard these audio signals.

11
00:03:04,000 --> 00:03:05,000
Okay.

12
00:03:05,000 --> 00:03:06,000
Oh, I understand why, because now I'm on my computer.

13
00:03:06,000 --> 00:03:07,000
Hi, everybody.

14
00:03:07,000 --> 00:03:08,000
Yeah.

15
00:03:08,000 --> 00:03:09,000
How is our audio?

16
00:03:09,000 --> 00:03:10,000
Hello.

17
00:03:10,000 --> 00:03:11,000
Hello.

18
00:03:11,000 --> 00:03:12,000
Good morning.

19
00:03:12,000 --> 00:03:21,000
Now I heard these audio signals.

20
00:03:21,000 --> 00:03:22,000
Okay.

21
00:03:22,000 --> 00:03:26,240
Oh, I understand why because now I'm on my computer.

22
00:03:26,240 --> 00:03:27,240
Hi everybody.

23
00:03:27,240 --> 00:03:28,240
Yeah.

24
00:03:28,240 --> 00:03:29,240
How is our audio?

25
00:03:29,240 --> 00:03:30,240
Yeah.

26
00:03:30,240 --> 00:03:34,280
Test one, two.

27
00:03:34,280 --> 00:03:37,160
Should we do the standard audio test?

28
00:03:37,160 --> 00:03:41,720
So order is me, [name], [name].

29
00:03:41,720 --> 00:03:42,720
One.

30
00:03:42,720 --> 00:03:43,720
Two.

31
00:03:43,720 --> 00:03:44,720
One.

32
00:03:44,720 --> 00:03:45,720
Two.

33
00:03:45,720 --> 00:03:46,720
Two.

34
00:03:46,720 --> 00:03:47,720
Two.

35
00:03:47,720 --> 00:03:48,720
Three.

36
00:03:48,720 --> 00:03:49,720
Three.

37
00:03:49,720 --> 00:03:50,720
Three.

38
00:03:50,720 --> 00:03:51,720
Okay.

39
00:03:51,720 --> 00:04:02,720
So, let me know how the audio sounds.

40
00:04:02,720 --> 00:04:04,720
It says [name] is a bit lower.

41
00:04:13,720 --> 00:04:15,720
Can you make yourself louder?

42
00:04:20,720 --> 00:04:31,720
I realized yesterday I was a bit too loud at the beginning, so that would be good to tell me.

43
00:04:32,720 --> 00:04:45,200
I have automatically adjusted microphone volume, should I go for manual?

44
00:04:45,200 --> 00:04:46,200
Maybe.

45
00:04:46,200 --> 00:04:54,840
Then I'll set it a little bit louder.

46
00:04:54,840 --> 00:04:56,400
Okay.

47
00:04:56,400 --> 00:04:57,400
Should we do another test?

48
00:04:57,400 --> 00:04:58,400
Yeah.

49
00:04:58,400 --> 00:04:59,400
Okay.

50
00:04:59,400 --> 00:05:00,400
Yeah.

51
00:05:00,400 --> 00:05:03,680
it here was also there was some outside noise that's why i was

52
00:05:03,680 --> 00:05:13,920
okay good one one one two two two okay now

53
00:05:13,920 --> 00:05:20,000
I think you got even lower so maybe [name] and i should reduce our

54
00:05:20,000 --> 00:05:22,480
volumes

55
00:05:23,600 --> 00:05:28,960
Sounds good working on it, I reduced myself a bit

56
00:05:30,400 --> 00:05:37,400
Okay, now reduced, hopefully reduced.

57
00:05:37,400 --> 00:05:41,400
Okay, should we try again?

58
00:05:41,400 --> 00:05:42,400
One.

59
00:05:42,400 --> 00:05:43,400
One.

60
00:05:43,400 --> 00:05:44,400
One.

61
00:05:44,400 --> 00:05:45,400
Two.

62
00:05:45,400 --> 00:05:46,400
Two.

63
00:05:46,400 --> 00:05:47,400
Two.

64
00:05:47,400 --> 00:05:48,400
Okay.

65
00:05:48,400 --> 00:05:49,400
Better?

66
00:05:49,400 --> 00:05:50,400
Let's see.

67
00:05:50,400 --> 00:05:57,400
Someone says it was better before.

68
00:05:57,400 --> 00:06:09,960
chat someone said the only one they could hear is me. Okay, maybe let's do a little

69
00:06:09,960 --> 00:06:17,360
bit of intro and see how it adjusts and then we can check more later. So, welcome everyone

70
00:06:17,360 --> 00:06:26,980
to day two. Hopefully you all are as excited to be here as we are. What's the plan for

71
00:06:26,980 --> 00:06:31,940
day two. So today it's [name] and [name] teaching. So what do we have in store?

72
00:06:35,220 --> 00:06:39,060
It will be more git. I'm just setting up so that I can also see what we are actually streaming.

73
00:06:40,660 --> 00:06:42,420
Are we now sharing the notes?

74
00:06:44,500 --> 00:06:46,340
Yes, your screen is being shared.

75
00:06:46,980 --> 00:06:53,220
Good. Yeah. Yeah, so there will be there will be morgit. And we will today move

76
00:06:53,220 --> 00:06:59,200
Both from from the web to our computers and from our computers to the web.

77
00:06:59,200 --> 00:07:07,300
So really the two goals are being able to take somebody else's project and continue

78
00:07:07,300 --> 00:07:08,300
working on your computer.

79
00:07:08,300 --> 00:07:09,300
Goal number one.

80
00:07:09,300 --> 00:07:13,820
Goal number two is then be able to share your work with other people through places like

81
00:07:13,820 --> 00:07:15,600
GitHub, GitLab.

82
00:07:15,600 --> 00:07:23,560
And in between, we will learn a really nice set of tools to navigate in a project created

83
00:07:23,560 --> 00:07:25,880
by other people, because that's the situation we are often in.

84
00:07:25,880 --> 00:07:39,400
Yeah, so basically it's all about reaching, like someone said yesterday, connecting your

85
00:07:39,400 --> 00:07:48,440
computer to the web, and then tomorrow is about using multiple people in projects.

86
00:07:48,440 --> 00:07:50,360
Yeah, tomorrow will be a collaboration.

87
00:07:52,120 --> 00:07:55,320
And I'm sharing here also two icebreaker questions.

88
00:07:56,680 --> 00:08:01,080
One of them is more just for fun, and this is so that you can,

89
00:08:02,680 --> 00:08:06,920
we actually want to see that people are able to edit the document.

90
00:08:06,920 --> 00:08:08,120
So that's one thing we want to see.

91
00:08:08,120 --> 00:08:14,520
and if you are unsure how to find it and how to edit I will say something about that once we

92
00:08:15,160 --> 00:08:20,280
officially start in a couple of minutes. But the second question is really important for us

93
00:08:20,280 --> 00:08:28,280
and that is which path did you use yesterday to interact with Git? So please let us know

94
00:08:30,920 --> 00:08:34,920
and I will come back to this question. So this is really important for us that you vote here

95
00:08:34,920 --> 00:08:39,400
and that you also let us know about paths that we should offer in future.

96
00:08:45,160 --> 00:08:51,400
Yeah, and maybe you can even help us add some of the extra paths after you've done the course.

97
00:08:54,600 --> 00:09:00,680
Yeah, so what was your overall outlook of yesterday?

98
00:09:00,680 --> 00:09:12,040
Um, I think it went pretty well from I was really happy with what we achieved a day.

99
00:09:12,040 --> 00:09:16,920
The first day is always tricky because we have a lot of us who are completely new to

100
00:09:16,920 --> 00:09:17,920
getting it up.

101
00:09:17,920 --> 00:09:25,840
We have learners who use it since quite some time and the day one is to really find the

102
00:09:25,840 --> 00:09:30,480
the balance of getting everybody on the same page

103
00:09:30,480 --> 00:09:33,400
and get like an understanding of what Git is.

104
00:09:34,680 --> 00:09:36,080
And we try to find this balance

105
00:09:36,080 --> 00:09:38,540
by offering these different paths,

106
00:09:38,540 --> 00:09:41,400
like GitHub, like VS Code, like command line.

107
00:09:41,400 --> 00:09:43,800
And we offer these different paths

108
00:09:43,800 --> 00:09:48,520
because also we know that there is not this one tool

109
00:09:48,520 --> 00:09:51,200
that will work for everybody.

110
00:09:51,200 --> 00:09:56,000
we want to meet learners where they are.

111
00:09:57,320 --> 00:09:58,800
And also among ourselves,

112
00:09:58,800 --> 00:10:00,240
I'm sure that we use different tools.

113
00:10:00,240 --> 00:10:03,920
And so, yeah, I was really happy with the progress.

114
00:10:10,880 --> 00:10:11,720
Yeah.

115
00:10:13,360 --> 00:10:16,400
I guess the main thing I got from the feedback

116
00:10:16,400 --> 00:10:19,120
is we should have clarified the different paths

117
00:10:19,120 --> 00:10:21,000
going together.

118
00:10:21,000 --> 00:10:24,560
and made recommendations for which one to take.

119
00:10:24,560 --> 00:10:27,200
So yeah.

120
00:10:27,200 --> 00:10:29,240
And today we will do that because we need to do it.

121
00:10:29,240 --> 00:10:34,400
So today I will spend a little bit of time at the beginning

122
00:10:34,400 --> 00:10:42,720
to clarify that and also since today some of us might experiment with a different path

123
00:10:42,720 --> 00:10:45,880
and we will show how

124
00:10:45,880 --> 00:10:48,800
how you can set it up if you haven't done that already.

125
00:10:48,800 --> 00:10:53,040
That's why also the first exercise will be a little bit longer to give people time to

126
00:10:53,040 --> 00:10:55,000
set up and configure.

127
00:10:55,000 --> 00:10:56,000
Yeah.

128
00:10:56,000 --> 00:10:57,000
Okay.

129
00:10:57,000 --> 00:11:04,440
I'll just rearrange my windows a little bit.

130
00:11:04,440 --> 00:11:05,800
Great.

131
00:11:05,800 --> 00:11:16,160
So looking at the icebreakers here, what do we see?

132
00:11:16,160 --> 00:11:22,920
of interesting animals there. The person who wrote Homo sapiens wins, especially if it

133
00:11:22,920 --> 00:11:29,600
counts ourselves. That's probably actually what most of us should have said.

134
00:11:29,600 --> 00:11:35,060
I saw a moose yesterday.

135
00:11:35,060 --> 00:11:36,060
Oh, nice.

136
00:11:36,060 --> 00:11:42,580
I was driving in the dark and then it jumped over the road.

137
00:11:42,580 --> 00:11:44,580
Okay.

138
00:11:44,580 --> 00:11:46,580
Oh.

139
00:11:46,580 --> 00:11:48,580
Yeah.

140
00:11:48,580 --> 00:11:58,020
Yeah, so I guess from the second question, it's about what we would have hoped and the

141
00:11:58,020 --> 00:12:02,140
people who tried a combination of different paths,

142
00:12:02,140 --> 00:12:03,460
that's actually good.

143
00:12:03,460 --> 00:12:06,220
So I agree with what people said.

144
00:12:06,220 --> 00:12:10,940
It's hard to do basically all the exercises twice

145
00:12:10,940 --> 00:12:15,540
unless you're already really good at one of them.

146
00:12:15,540 --> 00:12:17,620
But this is what we want people to be

147
00:12:17,620 --> 00:12:20,860
able to see in the end, how these are actually

148
00:12:20,860 --> 00:12:24,020
pretty similar going together, and they

149
00:12:24,020 --> 00:12:27,180
can all do the same things.

150
00:12:27,180 --> 00:12:31,100
and seeing what is the common thing there, but maybe we should also clarify that there was no

151
00:12:31,100 --> 00:12:35,900
expectation that people now go through all the paths so that they choose one path. We can also

152
00:12:35,900 --> 00:12:43,820
see that we will need something for our studio. The good news is that today I think we will have

153
00:12:44,780 --> 00:12:50,780
some options for that. Do you have a preferred path you work through, [name]?

154
00:12:50,780 --> 00:12:56,460
or are you using all all types so now for my own work yeah

155
00:12:58,460 --> 00:13:02,140
for my own work it's most of the time it's command line

156
00:13:03,180 --> 00:13:06,540
but if i can do something quick on the web i will do it quickly on the web

157
00:13:08,460 --> 00:13:17,260
so it's command line and a little bit of github um yep have you tried this trick with

158
00:13:17,260 --> 00:13:25,580
pressing the dot and then getting an editor on github yes that's a nice trick we should maybe

159
00:13:25,580 --> 00:13:33,900
show that uh yeah we could have mentioned it later uh when we when we edit files yeah yeah

160
00:13:33,900 --> 00:13:44,860
maybe let's remember to use it um then also today uh it will be possible to to do most of

161
00:13:44,860 --> 00:13:49,660
today just with github but there is one portion that

162
00:13:51,740 --> 00:13:57,820
for this we will need something to work locally but if if it doesn't work it's not a problem

163
00:13:57,820 --> 00:14:05,580
you can then skip it and like 70 percent of today can be done in github alone okay

164
00:14:09,020 --> 00:14:14,460
but i think we are ready to start three minutes past so maybe i'll head off and start watching the

165
00:14:14,860 --> 00:14:22,700
questions again and leave you all to it yeah okay good great thanks a lot see

166
00:14:22,700 --> 00:14:28,980
you later yep it's maybe it'll start by introducing ourselves and then I will

167
00:14:28,980 --> 00:14:33,580
introduce this notes document that we are looking at on because that's an

168
00:14:33,580 --> 00:14:39,700
important tool for us to so that you can interact and ask questions and give us

169
00:14:39,700 --> 00:14:47,180
feedback. But first, yeah, hello here from Northern Norway. My name is [name], and

170
00:14:47,180 --> 00:14:52,180
I've been doing these kind of workshops since many years and I really enjoy it. The rest

171
00:14:52,180 --> 00:14:58,180
of my time I work with high performance computing and really supporting researchers and students

172
00:14:58,180 --> 00:15:06,700
with everything around computing and programming. And with me is my colleague [name] from Tonheim.

173
00:15:06,700 --> 00:15:14,020
Yeah, good morning. My name is [name]. I work at the high performance group at the

174
00:15:14,020 --> 00:15:20,620
Norwegian University of Technology and Science. So I've been part of cold refinery for quite

175
00:15:20,620 --> 00:15:28,460
some years. And I like doing these workshops. So I'm really looking forward to today.

176
00:15:28,460 --> 00:15:34,340
Yeah, so let's get started here first.

177
00:15:34,340 --> 00:15:41,300
If you joined today, I just wanted to very briefly explain this document here that I'm

178
00:15:41,300 --> 00:15:44,500
looking at.

179
00:15:44,500 --> 00:15:46,960
And first of all, how do you find it?

180
00:15:46,960 --> 00:15:54,700
You find it when you register to the workshop, you either got an email from me a couple of

181
00:15:54,700 --> 00:15:58,540
days ago that contains the link.

182
00:15:58,540 --> 00:16:00,940
If you registered after, it's also not a problem,

183
00:16:00,940 --> 00:16:05,940
then it was in the automatic reply during your registration.

184
00:16:06,180 --> 00:16:07,860
So there you can find the link to this document.

185
00:16:07,860 --> 00:16:12,860
It's a document, it's like collaborative notes,

186
00:16:13,100 --> 00:16:14,540
we can all view and edit.

187
00:16:15,700 --> 00:16:17,960
I'm now looking at it in the view mode,

188
00:16:17,960 --> 00:16:29,240
but there is somewhere an edit button, edit pen, so if I click on the edit pen it switches

189
00:16:29,240 --> 00:16:37,560
to edit mode and in the edit mode I can then edit and please try it so please try to to

190
00:16:37,560 --> 00:16:47,000
add something for so I also saw some neighbor cat walking by so test it out

191
00:16:47,960 --> 00:16:54,760
And then below here we have this other question that is really important for us and that is

192
00:16:54,760 --> 00:16:58,880
which path did you choose yesterday to interact with git.

193
00:16:58,880 --> 00:17:03,200
And it's not a problem if you were not here yesterday.

194
00:17:03,200 --> 00:17:10,080
You should mention that we try to stay anonymous so we leave out your name so don't add your

195
00:17:10,080 --> 00:17:11,320
name to the document.

196
00:17:11,320 --> 00:17:14,000
Oh great point yeah.

197
00:17:14,000 --> 00:17:19,560
So here I don't use any names, but please ask lots of questions.

198
00:17:19,560 --> 00:17:26,840
We will, after each day, we also publish the notes as part of the workshop.

199
00:17:26,840 --> 00:17:32,640
So they become part of the workshop outcomes.

200
00:17:32,640 --> 00:17:39,600
And I will scroll back to this question here, but below, you can then always find a link

201
00:17:39,600 --> 00:17:41,160
to where we will be.

202
00:17:41,160 --> 00:17:50,360
will now just post the link on where you can find today's material. So we will be very, very soon

203
00:17:50,360 --> 00:18:07,800
starting here. Start today at here. And as we then go through different episodes, we post links to it.

204
00:18:07,800 --> 00:18:13,080
it. And what we would really like you to do is to ask lots of questions. And the best

205
00:18:13,080 --> 00:18:17,920
place to ask questions is at the bottom of the document, because we will hopefully get

206
00:18:17,920 --> 00:18:26,520
I hope that we get at least 100 questions today. You can number the questions. I will

207
00:18:26,520 --> 00:18:37,080
make an example here, for instance. Let's start with the question number one. Is this

208
00:18:37,080 --> 00:18:48,920
the way, is this the place to ask? And somebody can answer. And somebody's answering. And

209
00:18:48,920 --> 00:18:54,900
this is also why we are here, two instructors, plus we have our colleague in the studio,

210
00:18:54,900 --> 00:18:59,700
so that we can, we are several people, we watch these questions. We will answer all

211
00:18:59,700 --> 00:19:07,260
of them. And some of them we will then lift and we will discuss them in voice. So the

212
00:19:07,260 --> 00:19:12,340
more questions, the better. And no question or too simple or too stupid

213
00:19:12,340 --> 00:19:18,260
to ask. Ask anything about anything, really. Yeah. If you have a question is very likely

214
00:19:18,260 --> 00:19:23,780
that somebody else has the same question and was too afraid to ask. So please ask it. Also

215
00:19:23,780 --> 00:19:29,060
Also reminder, we use a code of conduct, so let's be all nice to each other.

216
00:19:29,060 --> 00:19:32,920
This is like in any other professional setting.

217
00:19:32,920 --> 00:19:37,860
And if you see something that is not right, please point it out.

218
00:19:37,860 --> 00:19:40,460
We will also be...

219
00:19:40,460 --> 00:19:47,560
We just want to create a really welcoming and nice atmosphere in this workshop.

220
00:19:47,560 --> 00:19:53,660
But now that we got the housekeeping done, I will now navigate to this link.

221
00:19:53,660 --> 00:20:02,060
can navigate that with me. So maybe the best way to participate today is to on one half of your

222
00:20:02,060 --> 00:20:09,660
screen to have the nodes open. And this is also why our screen share is portrait mode and not

223
00:20:09,660 --> 00:20:17,980
landscape mode. And on the other half of the screen you can then either have the GitHub open

224
00:20:17,980 --> 00:20:20,460
or your editor, or your terminal.

225
00:20:22,220 --> 00:20:24,500
And I will now navigate to the lesson material,

226
00:20:24,500 --> 00:20:27,380
which, well, you can open somewhere else on your screen.

227
00:20:28,580 --> 00:20:31,900
And this is the lesson from yesterday and today.

228
00:20:31,900 --> 00:20:34,260
It's about version control with Git.

229
00:20:36,300 --> 00:20:37,260
And I will soon zoom in.

230
00:20:37,260 --> 00:20:40,300
I just want to give you the big picture for today.

231
00:20:40,300 --> 00:20:41,340
We will first,

232
00:20:42,900 --> 00:20:46,820
I want to first point you out that we have this episode here

233
00:20:46,820 --> 00:20:55,140
about configuring your git command line or editor if you need it. So during the first exercise

234
00:20:56,020 --> 00:21:02,500
we will give you the choice to to either try ds code or to try the command line.

235
00:21:04,020 --> 00:21:10,260
And if you haven't set it up before the workshop you can then have a look at this configuration

236
00:21:10,260 --> 00:21:15,620
episode. And this will be the only place today where you will need it and if it doesn't work

237
00:21:15,620 --> 00:21:19,980
Don't worry, you can then watch what we do.

238
00:21:19,980 --> 00:21:24,540
And the rest of today you can continue on GitHub.

239
00:21:24,540 --> 00:21:29,040
Also yesterday we have covered three episodes.

240
00:21:29,040 --> 00:21:31,960
We have started from an existing project.

241
00:21:31,960 --> 00:21:35,380
We created some commits and branches.

242
00:21:35,380 --> 00:21:39,000
And we have then merged these branches.

243
00:21:39,000 --> 00:21:45,140
And we have discussed a little bit how contributing to projects could look like.

244
00:21:45,140 --> 00:21:51,960
Today we will cover four episodes, there will be three exercises, there will be one exercise

245
00:21:51,960 --> 00:21:57,280
in the first hour, second exercise in the second hour, we will then take a longer break

246
00:21:57,280 --> 00:22:00,460
and then there will be a third exercise in the third hour.

247
00:22:00,460 --> 00:22:08,120
In the first hour we will start with cloning a git repository and working on it locally.

248
00:22:08,120 --> 00:22:12,160
In the second hour, we will explore this toolbox

249
00:22:12,160 --> 00:22:16,660
of how we can inspect a repository created by somebody else.

250
00:22:16,660 --> 00:22:18,400
This will be a really fun exercise.

251
00:22:19,540 --> 00:22:20,720
And then we will conclude today

252
00:22:20,720 --> 00:22:24,480
with be able to share our own work,

253
00:22:24,480 --> 00:22:25,960
turning it into a Git repository

254
00:22:25,960 --> 00:22:28,960
and share it on places like GitHub.

255
00:22:28,960 --> 00:22:32,260
And at the end, we will have time to discuss also

256
00:22:32,260 --> 00:22:34,480
to give you practical advice

257
00:22:34,480 --> 00:22:36,760
of like how much Git is really necessary,

258
00:22:36,760 --> 00:22:40,720
where to start and what are typical pitfalls,

259
00:22:40,720 --> 00:22:44,220
what to avoid as you progress from beginner

260
00:22:44,220 --> 00:22:47,820
to more advanced use.

261
00:22:47,820 --> 00:22:50,000
So that's the plan for today.

262
00:22:50,000 --> 00:22:53,160
What was the most challenging thing yesterday?

263
00:22:55,800 --> 00:22:56,640
Do you think?

264
00:22:58,440 --> 00:23:00,240
Yeah, I would like to know from learners.

265
00:23:00,240 --> 00:23:02,220
So please let us also know what,

266
00:23:02,220 --> 00:23:06,000
is there anything that you would like to have clarified

267
00:23:06,000 --> 00:23:08,520
from yesterday because we can, we have time for recap.

268
00:23:08,520 --> 00:23:09,920
We can connect to yesterday.

269
00:23:16,780 --> 00:23:17,640
So please let us know.

270
00:23:17,640 --> 00:23:18,760
We will be watching these questions

271
00:23:18,760 --> 00:23:20,160
and we can connect to those.

272
00:23:22,480 --> 00:23:26,920
From my perspective, things went relatively well yesterday.

273
00:23:29,920 --> 00:23:31,840
But now I want to come back to my question here.

274
00:23:31,840 --> 00:23:34,680
Which path did you choose yesterday to interact with Git?

275
00:23:34,680 --> 00:23:37,440
So most people used GitHub.

276
00:23:38,760 --> 00:23:40,280
Well, in future, we should offer

277
00:23:40,280 --> 00:23:42,040
at least RStudio in addition.

278
00:23:43,640 --> 00:23:48,640
Some learners participated using VS Code and Command Line.

279
00:23:50,320 --> 00:23:53,480
Now, the first episode today, so the next 45 minutes,

280
00:23:54,440 --> 00:23:57,660
well, they will be about VS Code and Command Line.

281
00:24:00,000 --> 00:24:01,600
So this will be a new thing

282
00:24:01,600 --> 00:24:04,040
to all the people who voted here,

283
00:24:04,040 --> 00:24:06,980
but it might be a little bit repetitive

284
00:24:06,980 --> 00:24:10,380
for those who used VS Code and Command Line yesterday.

285
00:24:12,020 --> 00:24:13,680
So for those of you who used VS Code

286
00:24:13,680 --> 00:24:14,680
and Command Line yesterday,

287
00:24:14,680 --> 00:24:17,000
there will still be, there will be something new.

288
00:24:17,000 --> 00:24:19,060
We will understand what cloning means.

289
00:24:20,320 --> 00:24:21,800
But if during the exercise,

290
00:24:21,800 --> 00:24:23,760
you feel like, hmm, this feels repetitive.

291
00:24:23,760 --> 00:24:24,920
I know how to do this.

292
00:24:26,280 --> 00:24:28,280
Then I encourage you to explore

293
00:24:28,280 --> 00:24:30,840
some of the optional episodes.

294
00:24:30,840 --> 00:24:33,760
For instance, undoing and recovering

295
00:24:33,760 --> 00:24:35,680
from typical mistakes.

296
00:24:35,680 --> 00:24:36,840
This is an optional episode,

297
00:24:36,840 --> 00:24:39,800
which we will not cover in the mainstream here.

298
00:24:42,720 --> 00:24:44,360
So if the first exercise feels a little bit

299
00:24:44,360 --> 00:24:45,360
too repetitive for you,

300
00:24:45,360 --> 00:24:48,600
maybe use the time to either look at an optional episode

301
00:24:48,600 --> 00:24:51,000
or use the time to help answering some questions

302
00:24:51,000 --> 00:24:52,280
that other people might have.

303
00:24:52,280 --> 00:24:55,240
So you can also help us with answering questions.

304
00:24:56,600 --> 00:24:58,240
But now I think it's a good time to navigate

305
00:24:58,240 --> 00:25:00,920
to the first thing we want to do today,

306
00:25:00,920 --> 00:25:02,280
cloning a Git repository.

307
00:25:02,280 --> 00:25:11,640
And I will also paste the link in the notes so that you know where to find us.

308
00:25:11,640 --> 00:25:18,800
We are here and somebody can then help me reformatting it.

309
00:25:18,800 --> 00:25:21,880
It will be, thank you.

310
00:25:21,880 --> 00:25:32,240
So always at the bottom of the document you can, you can find where we are.

311
00:25:32,240 --> 00:25:33,600
Yeah, we should, I think one thing

312
00:25:33,600 --> 00:25:35,880
that was a little bit challenging yesterday

313
00:25:35,880 --> 00:25:38,120
was that we didn't really clarify so much.

314
00:25:38,120 --> 00:25:40,920
We didn't spend much time explaining which track to use.

315
00:25:42,420 --> 00:25:43,800
Right.

316
00:25:43,800 --> 00:25:48,360
Yeah, and today, again, mostly there will be three tracks.

317
00:25:48,360 --> 00:25:51,000
For the first exercise, for the first episode,

318
00:25:52,120 --> 00:25:53,480
if you haven't used VS Code

319
00:25:53,480 --> 00:25:55,560
and if you haven't used command line,

320
00:25:55,560 --> 00:25:58,680
I think I recommend maybe starting with VS Code.

321
00:25:58,680 --> 00:26:01,440
It is less to set up

322
00:26:01,440 --> 00:26:05,620
and it's maybe easier, easier starting point.

323
00:26:05,620 --> 00:26:07,260
The command line is there for those

324
00:26:07,260 --> 00:26:10,340
who already use the command line and are familiar with it

325
00:26:10,340 --> 00:26:11,780
and would like to stay in the command line

326
00:26:11,780 --> 00:26:15,160
and not go to an additional tool.

327
00:26:21,420 --> 00:26:23,500
Yeah, good.

328
00:26:24,580 --> 00:26:26,980
Objective for now, objective for the next 45 minutes

329
00:26:26,980 --> 00:26:29,500
is we want to be able to clone a repository

330
00:26:29,500 --> 00:26:32,660
And we also want to understand what cloning even means.

331
00:26:32,660 --> 00:26:37,300
And now we, I really like how [name] yesterday

332
00:26:37,300 --> 00:26:39,780
rephrased things in terms of roles.

333
00:26:39,780 --> 00:26:44,060
So the role that I imagine now that I'm in is

334
00:26:45,420 --> 00:26:47,420
I'm a student researcher staff

335
00:26:48,500 --> 00:26:51,260
who found an interesting project

336
00:26:51,260 --> 00:26:55,060
which does almost what I want it.

337
00:26:55,060 --> 00:26:57,900
I need to do some small modifications to it.

338
00:26:57,900 --> 00:26:59,020
And the thing I want to do now

339
00:26:59,020 --> 00:27:02,460
is I want to be able to copy it to my computer

340
00:27:02,460 --> 00:27:05,120
with the project history,

341
00:27:05,120 --> 00:27:08,460
and I would like to be able to do commits locally

342
00:27:08,460 --> 00:27:09,400
on my computer.

343
00:27:10,260 --> 00:27:13,300
And later, maybe I want to share these changes

344
00:27:14,440 --> 00:27:16,520
back to GitHub, but I will do that only later.

345
00:27:16,520 --> 00:27:19,740
And by later, it will be in two and a half hours.

346
00:27:21,960 --> 00:27:24,160
And what we want to show you is that

347
00:27:24,160 --> 00:27:25,500
all the things that we did yesterday,

348
00:27:25,500 --> 00:27:27,880
we can also do locally.

349
00:27:27,880 --> 00:27:30,500
things like making commits, making branches,

350
00:27:30,500 --> 00:27:33,840
merging branches, and all of it will stay

351
00:27:33,840 --> 00:27:36,800
on our laptops or desktops.

352
00:27:38,640 --> 00:27:41,120
And we will get a bit of a feeling what it means,

353
00:27:41,120 --> 00:27:42,720
what is a remote repository,

354
00:27:44,240 --> 00:27:48,560
but it will only give us a feeling we will spend a lot more

355
00:27:48,560 --> 00:27:53,560
on remote repositories tomorrow when we do collaboration.

356
00:27:53,560 --> 00:28:02,200
And here is a sketch of what our goal is and we will first explain it and then send you

357
00:28:02,200 --> 00:28:07,680
soon into a 25-minute exercise because we will give you a bit more time because it might

358
00:28:07,680 --> 00:28:14,520
require some configuration setup installation for those who haven't done it earlier.

359
00:28:14,520 --> 00:28:18,920
A clone that's a copy, right?

360
00:28:18,920 --> 00:28:25,380
Yeah, I'm also looking at your question six, which is I think related.

361
00:28:25,380 --> 00:28:27,380
So cloning is really copying.

362
00:28:27,380 --> 00:28:31,980
And we have been copying repositories yesterday, but yesterday we called it fork.

363
00:28:31,980 --> 00:28:38,200
So yesterday we were forking and there the copy was within GitHub.

364
00:28:38,200 --> 00:28:47,400
It was from CR workshop exercises organization copy into my own user account.

365
00:28:47,400 --> 00:28:49,600
But the copy stayed on GitHub.

366
00:28:49,600 --> 00:28:56,240
Cloning is very similar, but instead of making the copy on GitHub from one place to another,

367
00:28:56,240 --> 00:29:00,480
I make the copy from, for instance, GitHub GitLab.

368
00:29:00,480 --> 00:29:04,540
But this time I clone it to my own computer.

369
00:29:04,540 --> 00:29:11,180
But technically it's very similar, which means that when you do this, and we will see that,

370
00:29:11,180 --> 00:29:13,740
we copy everything.

371
00:29:13,740 --> 00:29:19,460
little dots here also all the commits branches everything is copied what when do you fork

372
00:29:19,460 --> 00:29:32,660
and when do you clone so when I fork when I want

373
00:29:32,660 --> 00:29:41,340
when I if I want to have to copy backed up somewhere on the web then I fork I also fork

374
00:29:41,340 --> 00:29:47,660
when I already have an intention that I will probably make a change and probably,

375
00:29:47,660 --> 00:29:51,820
at some point, contribute my change back to the original repository.

376
00:29:52,860 --> 00:29:58,460
Sometimes I clone if I really just want to use it or I want to make some modifications,

377
00:29:58,460 --> 00:30:03,820
but at this point, I'm not sure whether I will contribute anything back.

378
00:30:03,820 --> 00:30:11,700
but you can change your mind you can you can first work and then you can clone the fork

379
00:30:11,700 --> 00:30:17,820
so cloning is anytime you want to you need to work on the project locally on your computer

380
00:30:17,820 --> 00:30:24,740
then you will need to you will need to clone right so it's it's a full copy it's a full

381
00:30:24,740 --> 00:30:31,980
backup so if 20 people clone your repository then you have 20 backups

382
00:30:31,980 --> 00:30:35,500
You don't see any traces of others' clones, do you?

383
00:30:38,380 --> 00:30:41,020
No, I don't know who cloned the repository.

384
00:30:41,020 --> 00:30:45,100
So I know, let's go back to our repositories today,

385
00:30:45,100 --> 00:30:49,740
see our exercises, and I will go to the one recorded.

386
00:30:51,700 --> 00:30:54,740
This was our repository from yesterday,

387
00:30:54,740 --> 00:30:57,540
and here I can see that 41 people forked it.

388
00:30:58,980 --> 00:31:00,940
That can be interesting because then for your own project,

389
00:31:00,940 --> 00:31:03,640
it can be fun to see like who is using it,

390
00:31:03,640 --> 00:31:05,420
who is making changes to it.

391
00:31:05,420 --> 00:31:08,060
This could be maybe a future collaborator.

392
00:31:08,060 --> 00:31:09,900
Maybe they are doing something interesting.

393
00:31:09,900 --> 00:31:14,900
And, but when you clone the project,

394
00:31:15,100 --> 00:31:16,140
I don't know that you cloned it.

395
00:31:16,140 --> 00:31:18,740
So it's on your computers and well, I don't know it.

396
00:31:22,540 --> 00:31:26,100
The key is all the files, all the commits,

397
00:31:26,100 --> 00:31:34,020
All the branches, all the tags, everything that's part of the repository gets copied.

398
00:31:34,020 --> 00:31:39,000
It's a full backup.

399
00:31:39,000 --> 00:31:46,380
And once you create a clone and you have a copy on your computer and we will now make

400
00:31:46,380 --> 00:31:53,660
commits to it, it's also good to know that these repositories,

401
00:31:53,660 --> 00:31:57,140
they are still somewhat connected.

402
00:31:57,140 --> 00:32:00,500
And the connection is that my local copy

403
00:32:00,500 --> 00:32:03,340
remembers where it was cloned from,

404
00:32:03,340 --> 00:32:06,220
but the changes don't automatically synchronize.

405
00:32:06,220 --> 00:32:07,260
So we will make commits.

406
00:32:07,260 --> 00:32:12,340
There will be more dots here at the end of my local repository,

407
00:32:12,340 --> 00:32:17,620
but they will not magically travel back to GitHub.

408
00:32:17,620 --> 00:32:20,340
And we will, later on...

409
00:32:20,340 --> 00:32:23,820
What about commits from the central?

410
00:32:23,820 --> 00:32:25,420
Where is the clone from?

411
00:32:25,420 --> 00:32:26,740
Same thing there.

412
00:32:26,740 --> 00:32:31,140
So, after I created a clone, if there are new commits,

413
00:32:31,140 --> 00:32:34,820
they will not automatically come to my computer.

414
00:32:34,820 --> 00:32:40,580
We will then actively pull changes or push changes.

415
00:32:40,580 --> 00:32:43,700
So pull whenever I want to update my local copy

416
00:32:43,700 --> 00:32:46,460
and push whenever I want to publish my local commits.

417
00:32:47,380 --> 00:32:49,960
And these are also techniques that we will learn

418
00:32:49,960 --> 00:32:52,360
later today and a lot more tomorrow.

419
00:32:54,380 --> 00:32:56,560
Just having a glimpse here at questions

420
00:32:56,560 --> 00:33:00,100
and I'm so happy to see that we already have

421
00:33:00,100 --> 00:33:01,500
like 10 questions in here.

422
00:33:01,500 --> 00:33:03,820
So we are on a good average to break

423
00:33:03,820 --> 00:33:05,260
the 100 question barrier.

424
00:33:05,260 --> 00:33:14,020
Oh, my microphone is low, interesting.

425
00:33:14,020 --> 00:33:15,900
Thanks for pointing it out.

426
00:33:15,900 --> 00:33:24,580
I will adjust.

427
00:33:24,580 --> 00:33:27,100
Hopefully it's better now.

428
00:33:27,100 --> 00:33:28,100
And please let us know.

429
00:33:28,100 --> 00:33:31,580
I will also check our internal chat here.

430
00:33:31,580 --> 00:33:39,820
Good, thanks for letting us know, let us know if it's still, oh it wasn't me, it was somebody

431
00:33:39,820 --> 00:33:40,820
else.

432
00:33:40,820 --> 00:33:48,440
Okay, I'm dialing back, good.

433
00:33:48,440 --> 00:33:51,780
But this is exactly what we wanted, let us know if things are not right.

434
00:33:51,780 --> 00:33:58,540
It could also be like font size, visibility and audio.

435
00:33:58,540 --> 00:34:03,300
Is it possible to merge clone back with original repository pull request?

436
00:34:03,300 --> 00:34:04,500
That's a great question.

437
00:34:04,500 --> 00:34:05,500
So how about pull requests?

438
00:34:05,500 --> 00:34:11,860
And pull requests, they happen then within platforms like GitHub or GitLab.

439
00:34:11,860 --> 00:34:19,480
So if I make local commits here and I really want to contribute them back, I typically

440
00:34:19,480 --> 00:34:22,600
have to go through a fork.

441
00:34:22,600 --> 00:34:26,660
So if I'm in the situation and I realize that all these are really good changes, I want

442
00:34:26,660 --> 00:34:28,740
to contribute them with a pull request,

443
00:34:28,740 --> 00:34:30,120
I will create a fork,

444
00:34:31,980 --> 00:34:33,540
push my changes to the fork,

445
00:34:33,540 --> 00:34:36,240
and from the fork, I will send a pull request.

446
00:34:40,420 --> 00:34:41,780
So what's this exercise about?

447
00:34:41,780 --> 00:34:44,540
The exercise will be, again,

448
00:34:44,540 --> 00:34:46,220
we design something so that it makes sense.

449
00:34:46,220 --> 00:34:48,580
You can work on your own, you can work in teams.

450
00:34:49,800 --> 00:34:54,660
It's, conceptually, this should be similar and familiar,

451
00:34:54,660 --> 00:35:05,500
But now we want to then take a repository and it's it's our example repository from yesterday

452
00:35:05,500 --> 00:35:08,580
and clone it to the computer and then make some changes locally.

453
00:35:08,580 --> 00:35:13,220
And since the changes will be local, well, then there is no web track, there is no GitHub

454
00:35:13,220 --> 00:35:14,260
track there.

455
00:35:14,260 --> 00:35:15,260
Here we offer.

456
00:35:15,260 --> 00:35:24,420
So if I scroll down a little bit, we offer three tracks, command line, VSCode, also RStudio.

457
00:35:24,420 --> 00:35:27,740
And later we have probably even more tracks.

458
00:35:27,740 --> 00:35:30,020
And scrolling back up.

459
00:35:30,020 --> 00:35:34,580
So what we want people to do is maybe you need to do some configuration and installation

460
00:35:34,580 --> 00:35:36,500
if you haven't done that already.

461
00:35:36,500 --> 00:35:40,820
So we will give you some minutes for that.

462
00:35:40,820 --> 00:35:45,580
And then you need to decide which repository to clone.

463
00:35:45,580 --> 00:35:49,660
Should it be your fork or should it be the original?

464
00:35:49,660 --> 00:35:51,380
The original recipe book.

465
00:35:51,380 --> 00:35:57,740
By original I mean the one from CR workshop exercises.

466
00:35:57,740 --> 00:36:01,320
For this exercise it doesn't matter, it can be either.

467
00:36:01,320 --> 00:36:03,900
If you have a fork, clone the fork.

468
00:36:03,900 --> 00:36:09,260
If you don't have it, or you were not here yesterday, or you are unsure, you can also

469
00:36:09,260 --> 00:36:16,260
clone the original repository, both will work.

470
00:36:16,260 --> 00:36:20,340
Then you will create a new branch, but you will do it locally.

471
00:36:20,340 --> 00:36:23,500
we'll create a new commit.

472
00:36:23,500 --> 00:36:27,460
And we also wanted you to learn how you switch branches

473
00:36:27,460 --> 00:36:30,740
locally, and you can then switch back to main,

474
00:36:30,740 --> 00:36:33,700
create a couple of commits there,

475
00:36:33,700 --> 00:36:38,980
and also experiment with merging branches locally.

476
00:36:38,980 --> 00:36:41,940
And after you've done that, we encourage

477
00:36:41,940 --> 00:36:46,420
you to compare the graph.

478
00:36:46,420 --> 00:36:50,180
By graph, I mean something like this illustration.

479
00:36:50,180 --> 00:36:52,700
compare the graph of commits that you have locally

480
00:36:52,700 --> 00:36:55,860
and compare it with the graph that is on GitHub.

481
00:36:55,860 --> 00:36:56,940
And you will see that they differ

482
00:36:56,940 --> 00:36:59,060
because the commits that you created

483
00:36:59,060 --> 00:37:00,660
and the branches you created,

484
00:37:00,660 --> 00:37:02,900
you will only see them in your local version.

485
00:37:04,700 --> 00:37:06,540
And I think that's quite instructive.

486
00:37:07,460 --> 00:37:11,820
And then we also wanted you to test out if you can find,

487
00:37:14,140 --> 00:37:16,340
so you will see local branches,

488
00:37:16,340 --> 00:37:17,460
you will see your main branch

489
00:37:17,460 --> 00:37:21,540
and the branch that you created, this one here.

490
00:37:23,260 --> 00:37:24,860
But we also want you to find out

491
00:37:25,900 --> 00:37:29,940
where are the other branches.

492
00:37:29,940 --> 00:37:31,740
And by the other branches, I mean,

493
00:37:34,180 --> 00:37:39,180
there are five branches in the central repository

494
00:37:41,260 --> 00:37:44,300
and whether you can see them.

495
00:37:44,300 --> 00:37:46,260
And we have, for all the steps,

496
00:37:46,260 --> 00:37:49,060
Again, we have a solution and walkthrough.

497
00:37:49,060 --> 00:37:52,420
And what we will then do afterwards here with [name]

498
00:37:52,420 --> 00:37:56,900
is that depending on your questions,

499
00:37:56,900 --> 00:38:00,660
and we will show some of the things here also live,

500
00:38:02,220 --> 00:38:05,220
either in VS Code or command line or both.

501
00:38:09,260 --> 00:38:10,740
So what we will do now,

502
00:38:10,740 --> 00:38:12,820
I will just switch back here to notes

503
00:38:12,820 --> 00:38:18,120
And scroll all the way down, that's the place where we look for questions.

504
00:38:18,120 --> 00:38:28,740
And this is also the place where you find, here you find where the exercise is, 25 minutes.

505
00:38:28,740 --> 00:38:33,520
And in 25 minutes we will be back here on stream.

506
00:38:33,520 --> 00:38:38,940
And please also let us know during the exercise how it's going, whether you finished or it

507
00:38:38,940 --> 00:38:42,420
was confusing or you wish there was more time.

508
00:38:42,420 --> 00:38:48,500
helps us to to adjust. Sounds good.

509
00:38:48,500 --> 00:38:52,420
Sounds good. I think you covered it all.

510
00:38:52,420 --> 00:38:59,180
Excellent. So then we will be back 53 minutes. So seven minutes before the hour. And then

511
00:38:59,180 --> 00:39:05,140
together with [name] here, we will answer some questions and show a few things and summarize.

512
00:39:05,140 --> 00:39:11,180
But see you in 25 minutes. Back on stream. Good luck.

513
00:39:11,180 --> 00:39:13,240
you

514
00:39:41,180 --> 00:39:43,240
you

515
00:40:11,180 --> 00:40:13,240
you

516
00:40:41,180 --> 00:40:43,240
you

517
00:41:11,180 --> 00:41:13,240
you

518
00:41:41,180 --> 00:41:43,180
You

519
00:42:11,180 --> 00:42:13,240
you

520
00:42:41,180 --> 00:42:43,240
you

521
00:43:11,180 --> 00:43:13,240
you

522
00:43:41,180 --> 00:43:43,240
you

523
00:44:11,180 --> 00:44:13,240
you

524
00:44:41,180 --> 00:44:43,240
you

525
00:45:11,180 --> 00:45:13,240
you

526
00:45:41,180 --> 00:45:43,240
you

527
00:46:11,180 --> 00:46:13,240
you

528
00:46:41,180 --> 00:46:43,240
you

529
00:47:11,180 --> 00:47:13,240
you

530
00:47:41,180 --> 00:47:43,240
you

531
00:48:11,180 --> 00:48:13,240
you

532
00:48:41,180 --> 00:48:43,240
you

533
00:49:11,180 --> 00:49:13,240
you

534
00:49:41,180 --> 00:49:43,240
you

535
00:50:11,180 --> 00:50:13,240
you

536
00:50:41,180 --> 00:50:43,240
you

537
00:51:11,180 --> 00:51:13,240
you

538
00:51:41,180 --> 00:51:43,240
you

539
00:52:11,180 --> 00:52:13,240
you

540
00:52:41,180 --> 00:52:43,240
you

541
00:53:11,180 --> 00:53:13,240
you

542
00:53:41,180 --> 00:53:43,240
you

543
00:54:11,180 --> 00:54:13,240
you

544
00:54:41,180 --> 00:54:43,240
you

545
00:55:11,180 --> 00:55:13,240
you

546
00:55:41,180 --> 00:55:43,240
you

547
00:56:11,180 --> 00:56:13,240
you

548
00:56:41,180 --> 00:56:43,240
you

549
00:57:11,180 --> 00:57:13,240
you

550
00:57:41,180 --> 00:57:43,240
you

551
00:58:11,180 --> 00:58:13,240
you

552
00:58:41,180 --> 00:58:43,240
you

553
00:59:11,180 --> 00:59:13,240
you

554
00:59:41,180 --> 00:59:43,240
you

555
01:00:11,180 --> 01:00:13,240
you

556
01:00:41,180 --> 01:00:43,240
you

557
01:01:11,180 --> 01:01:13,240
you

558
01:01:41,180 --> 01:01:43,240
you

559
01:02:11,180 --> 01:02:13,240
you

560
01:02:41,180 --> 01:02:43,240
you

561
01:03:11,180 --> 01:03:13,240
you

562
01:03:41,180 --> 01:04:09,700
All right, welcome back, everybody.

563
01:04:09,700 --> 01:04:14,260
Just taking a few seconds breather after the exercise.

564
01:04:14,260 --> 01:04:16,540
Also thank you for letting us know how it went.

565
01:04:16,540 --> 01:04:21,500
I don't know whether this is a representative exit poll, but let us know whether this was

566
01:04:21,500 --> 01:04:26,900
doable in the time allocated, or whether you wish there was more time.

567
01:04:26,900 --> 01:04:32,140
We saw also on the questions that there were some technical problems.

568
01:04:32,140 --> 01:04:35,980
Hopefully we'll be able to solve them.

569
01:04:35,980 --> 01:04:39,360
And don't worry if you got stuck, it didn't work.

570
01:04:39,360 --> 01:04:45,320
We have designed the rest of today so that we can still continue and we will learn new

571
01:04:45,320 --> 01:04:52,760
things and it will work out even if this first exercise didn't work.

572
01:04:52,760 --> 01:04:58,120
We will show you some of the steps, both on the command line and if we have time, I already

573
01:04:58,120 --> 01:05:01,020
have VS Code open here as well.

574
01:05:01,020 --> 01:05:04,440
Before I go there, I wanted to say thank you for...

575
01:05:04,440 --> 01:05:07,880
We also saw that some of the learners are answering questions of other learners.

576
01:05:07,880 --> 01:05:10,020
So I think that's super cool.

577
01:05:10,020 --> 01:05:12,320
And we really encourage that.

578
01:05:12,320 --> 01:05:13,820
So thanks a lot for doing that.

579
01:05:15,820 --> 01:05:18,320
And my suggestion is that I will now,

580
01:05:18,320 --> 01:05:21,840
we switch the screen share to [name] and we have a look,

581
01:05:21,840 --> 01:05:24,840
we will go through some of the steps on the command line.

582
01:05:24,840 --> 01:05:25,800
And then if we have time,

583
01:05:25,800 --> 01:05:28,440
I will also try that here on VS Code.

584
01:05:28,440 --> 01:05:31,560
And after that, so in roughly 10 minutes,

585
01:05:32,600 --> 01:05:34,520
we plan to start the break.

586
01:05:34,520 --> 01:05:36,320
So don't worry, the break is coming.

587
01:05:37,880 --> 01:05:48,880
Okay, [name]e. Take the screen. I'll share my screen.

588
01:05:48,880 --> 01:06:11,880
I hope you see my screen now. So I'll work on the command line.

589
01:06:11,880 --> 01:06:21,880
So I'll clone the central exercise, which is in the CR workshop exercise namespace.

590
01:06:21,880 --> 01:06:25,480
Yeah, and I realized that we made actually a little mistake.

591
01:06:25,480 --> 01:06:29,120
We should have cloned the recorded one, at least us when we show something here.

592
01:06:29,120 --> 01:06:30,120
Yeah, okay.

593
01:06:30,120 --> 01:06:31,120
Do we need to do that?

594
01:06:31,120 --> 01:06:37,080
No, I don't think we, just that we don't expose any people anywhere.

595
01:06:37,080 --> 01:06:41,620
So we will clone the one which is the recipe book minus recorded

596
01:06:41,620 --> 01:06:52,080
Should I add the recorded minus recorded? Yes, it's the same thing. It's the same recipe

597
01:06:52,080 --> 01:06:55,720
book just but just that's the one that we have been using yesterday on stream

598
01:06:55,720 --> 01:07:07,840
Yeah. So then I get a copy. I get a lot of messages from the Git here on accessing the

599
01:07:07,840 --> 01:07:17,760
remote and then copying objects to my local storage. And then I'll have a subdirectory

600
01:07:17,760 --> 01:07:22,760
called cr-workshop-exercise, no, recipe-book-recorded,

601
01:07:26,960 --> 01:07:29,720
you see here, two directories,

602
01:07:29,720 --> 01:07:33,680
and the recipe-book-recorded is the one that I cloned now.

603
01:07:35,400 --> 01:07:36,920
So it will create a new directory

604
01:07:36,920 --> 01:07:38,840
with the same name as the repository.

605
01:07:38,840 --> 01:07:42,120
Yeah, so I could have added

606
01:07:42,120 --> 01:07:54,520
my own name here at the end, and then I would have gotten a subdirectory called test, if

607
01:07:54,520 --> 01:08:06,520
that was the name. Okay, I'll step into the recipe book recorded. And I do a git status

608
01:08:06,520 --> 01:08:16,040
and see where i am so i'm on the main branch and nothing to commit the work tree is clean

609
01:08:19,320 --> 01:08:24,840
and you can also try now git branch to see which branches are there and yeah and there is only

610
01:08:24,840 --> 01:08:29,160
the main branch now which is maybe a bit surprising because that's but it's the

611
01:08:30,120 --> 01:08:35,080
we know we see the local branch yeah so we don't see the remote branches

612
01:08:35,080 --> 01:08:40,360
And there is somewhere in the exercise step there is also a question about well where

613
01:08:40,360 --> 01:08:46,320
are the remote branches and we can see them if we do git branch --remote or if

614
01:08:46,320 --> 01:08:47,560
we do git branch --all

615
01:08:47,560 --> 01:08:55,280
Dash dash all then I get all the remote branches listed

616
01:08:55,280 --> 01:08:57,640
Yes

617
01:08:57,640 --> 01:09:09,280
And we see the name is origin, so that is what's the remote repository is named.

618
01:09:09,280 --> 01:09:19,220
If I do git remote -v here, I get that the alias origin points to the recipe book recorded

619
01:09:19,220 --> 01:09:24,120
in the CR workshop exercise namespace on GitHub.

620
01:09:24,120 --> 01:09:30,200
Yeah, because earlier I said that they still, they are connected somehow.

621
01:09:30,200 --> 01:09:34,760
And this is the connection, so that our local copy remembers where it was cloned from.

622
01:09:34,760 --> 01:09:39,720
And it, it adds this.

623
01:09:39,720 --> 01:09:44,080
So the place where we clone from is then called origin.

624
01:09:44,080 --> 01:09:49,160
And now somebody asked, all right, so I cloned it, but now how do I modify the files?

625
01:09:49,160 --> 01:10:03,760
Yes, I will create a branch here. I use git, I can use git checkout -b, and then I

626
01:10:03,760 --> 01:10:17,160
use my username and add another recipe. So that's just the principle that I add my username.

627
01:10:17,160 --> 01:10:25,720
So others can see if I push this back to the world, others could see that what I have added

628
01:10:25,720 --> 01:10:28,320
as a branch.

629
01:10:28,320 --> 01:10:32,760
And what this command did is that you did two things in one go, which is create a new

630
01:10:32,760 --> 01:10:34,200
branch and switch to it.

631
01:10:34,200 --> 01:10:39,080
And somebody also asked, what is the difference between checkout and switch?

632
01:10:39,080 --> 01:10:40,480
They really do the same thing.

633
01:10:40,480 --> 01:10:42,560
Traditionally, it was called checkout.

634
01:10:42,560 --> 01:10:47,000
There is on more modern Git, you can use switch and it's a little bit more intuitive to switch

635
01:10:47,000 --> 01:10:56,120
between branches when i do git status now i i know i'm no longer on the main branch but

636
01:10:56,120 --> 01:11:01,080
at the branch that i created in another recipe

637
01:11:04,040 --> 01:11:08,600
yes and we cannot see the entire width of the window i don't know if you can

638
01:11:08,600 --> 01:11:12,760
make the the one terminal window that we look at if you can make it a little bit more narrow so it

639
01:11:12,760 --> 01:11:16,600
it spills a little bit over the, yeah, it wraps around.

640
01:11:16,600 --> 01:11:20,640
I think this is maybe okay enough.

641
01:11:20,640 --> 01:11:22,840
What is nice is that below on the other window,

642
01:11:22,840 --> 01:11:25,240
we can see the commands that [name] has typed.

643
01:11:26,440 --> 01:11:30,360
And anyway, we follow the material.

644
01:11:30,360 --> 01:11:33,440
Yes, so I'll add a new file.

645
01:11:34,760 --> 01:11:39,760
I use the editor normal here and add a main course.

646
01:11:39,760 --> 01:11:46,520
a mains course yeah so you create a new file and here the key point is use your favorite

647
01:11:46,520 --> 01:11:52,760
editor which can be nano is one of the many different editors we will create a new file

648
01:11:52,760 --> 01:12:01,880
or you could modify an existing file and then in a second step we will then create a commit

649
01:12:01,880 --> 01:12:06,160
so just creating a new file or just modifying a file doesn't really create new commits we

650
01:12:06,160 --> 01:12:07,720
we will have to do it actively.

651
01:12:10,920 --> 01:12:13,960
Control X for saving.

652
01:12:13,960 --> 01:12:18,960
And I created a new call file called farikal.md.

653
01:12:20,760 --> 01:12:23,040
And if I do git status now,

654
01:12:23,040 --> 01:12:26,480
I'll see that I have an untracked file,

655
01:12:27,360 --> 01:12:31,440
which I now have created with the nano-editor.

656
01:12:31,440 --> 01:12:33,120
Yeah, and for the not Norwegians here,

657
01:12:33,120 --> 01:12:34,560
farikal is a really tasty,

658
01:12:34,560 --> 01:12:37,540
one of the national staple dishes in Norway.

659
01:12:41,480 --> 01:12:46,480
So I'll do git add means for the call

660
01:12:49,360 --> 01:12:51,400
and then git status again.

661
01:12:51,400 --> 01:12:54,800
I will see that it's now stored for,

662
01:12:54,800 --> 01:12:57,440
staged for being committed.

663
01:12:59,120 --> 01:13:00,960
Yeah, and now it's committed.

664
01:13:00,960 --> 01:13:05,720
Commit -m for a message.

665
01:13:05,720 --> 01:13:07,040
And the message, that's the same thing

666
01:13:07,040 --> 01:13:10,600
that yesterday I was typing in the commit message,

667
01:13:10,600 --> 01:13:15,440
which should explain what we did, summarize why we did it.

668
01:13:15,440 --> 01:13:17,340
And here we do the same thing locally.

669
01:13:18,740 --> 01:13:21,920
But the commit will now only exist on [name]'s computer.

670
01:13:21,920 --> 01:13:24,000
I cannot see it, we cannot see it.

671
01:13:24,000 --> 01:13:27,040
So now it's committed.

672
01:13:27,040 --> 01:13:42,880
And if I do git log --graph -online --decorate --all I get a list

673
01:13:42,880 --> 01:13:54,880
of the commits and I see that I have one commit ahead of the original main.

674
01:13:54,880 --> 01:14:04,680
the long command that I used now. It can be created as an alias. The recipe is shown later

675
01:14:04,680 --> 01:14:15,640
down in the lesson. And it's a very useful command to have.

676
01:14:15,640 --> 01:14:28,520
Okay then I'll switch back to the main branch. I'll use main switch this time. So now I'm

677
01:14:28,520 --> 01:14:55,020
back on the main branch and I'll modify one, let's see here, I'll modify the tortilla recipe

678
01:14:55,020 --> 01:15:12,060
add one teaspoon of salt here and save it. And when I do git status, we can see that

679
01:15:12,060 --> 01:15:17,060
the mains tortilla is modified.

680
01:15:17,820 --> 01:15:22,820
And I'll do the git add for the mains tortilla.

681
01:15:26,300 --> 01:15:30,660
And it's staged and then I commit,

682
01:15:32,780 --> 01:15:34,240
write a commit message.

683
01:15:36,540 --> 01:15:40,980
Add, oops, what happened here?

684
01:15:40,980 --> 01:15:42,740
and we are soon out of time here.

685
01:15:42,740 --> 01:15:45,660
So break starts soon, but no stress.

686
01:15:45,660 --> 01:15:46,500
Okay.

687
01:15:46,500 --> 01:15:49,300
But I think the important thing was that,

688
01:15:50,940 --> 01:15:53,860
yeah, we clone, modify files, create commits.

689
01:15:53,860 --> 01:15:55,100
They live only locally.

690
01:15:56,060 --> 01:15:58,380
I think I will maybe not show the VS code

691
01:15:59,380 --> 01:16:02,780
just for the sake of time, but we have screenshots.

692
01:16:02,780 --> 01:16:04,540
But if the screenshots are not clear enough,

693
01:16:04,540 --> 01:16:05,820
please do ask questions

694
01:16:05,820 --> 01:16:08,220
and we will answer the questions on the notes.

695
01:16:08,220 --> 01:16:18,360
But I suggest we go to a break and then we can still recap a little bit once we are back.

696
01:16:18,360 --> 01:16:22,340
And it will be a 10 minute break, we will be back 15 minutes past the hour and we will

697
01:16:22,340 --> 01:16:32,620
also post at the bottom of the notes that it's actually break time so that people know.

698
01:16:32,620 --> 01:16:35,020
See you in a bit, 15 minutes past the hour.

699
01:16:35,020 --> 01:16:38,460
Have a nice break. Bye.

700
01:17:05,020 --> 01:17:07,080
you

701
01:17:35,020 --> 01:17:37,080
you

702
01:18:05,020 --> 01:18:07,080
you

703
01:18:35,020 --> 01:18:37,080
you

704
01:19:05,020 --> 01:19:07,080
you

705
01:19:35,020 --> 01:19:37,080
you

706
01:20:05,020 --> 01:20:07,080
you

707
01:20:35,020 --> 01:20:37,080
you

708
01:21:05,020 --> 01:21:07,080
you

709
01:21:35,020 --> 01:21:37,080
you

710
01:22:05,020 --> 01:22:07,080
you

711
01:22:35,020 --> 01:22:37,080
you

712
01:23:05,020 --> 01:23:07,080
you

713
01:23:35,020 --> 01:23:37,080
you

714
01:24:05,020 --> 01:24:07,080
you

715
01:24:35,020 --> 01:24:37,080
you

716
01:25:05,020 --> 01:25:07,080
you

717
01:25:35,020 --> 01:25:59,580
Alright, we are back. 45 minutes left before we take a little bit longer break, which at

718
01:25:59,580 --> 01:26:03,620
least in like Central Europe then aligns with with lunch break. So that's why we organize

719
01:26:03,620 --> 01:26:13,140
it this way and in the next 45 minutes we will learn how to navigate in our existing repository

720
01:26:14,180 --> 01:26:22,740
and this we will do that it can be done locally or it can be done on the web web browser i think

721
01:26:22,740 --> 01:26:25,540
before going there i would like to start with this question which is excellent

722
01:26:28,020 --> 01:26:33,060
so what would be the main advantage of using the command line over vs code and i think instead of

723
01:26:33,060 --> 01:26:39,980
of VS code, we could also say over another integrated development environment.

724
01:26:39,980 --> 01:26:43,460
Because for somebody who is maybe new to command line, it can be less intuitive and more difficult

725
01:26:43,460 --> 01:26:49,540
to navigate, especially when they are new to commands and trying out, figuring out whether

726
01:26:49,540 --> 01:26:54,860
it's worth investing into command line at all.

727
01:26:54,860 --> 01:26:59,540
So I have some thoughts there, [name], you want to also comment, [name]?

728
01:26:59,540 --> 01:27:08,740
Yeah, well, I think it's worth learning the command lines commands, but when starting

729
01:27:08,740 --> 01:27:17,060
out, VS Code is very supportive, so you get to do what you intend to do in a very short

730
01:27:17,060 --> 01:27:27,940
time. But in parallel, I think it's worth learning the Git command line commands, so

731
01:27:27,940 --> 01:27:30,760
you also can use those.

732
01:27:33,340 --> 01:27:36,220
Yeah, I think almost anything people need

733
01:27:36,220 --> 01:27:39,180
in like day-to-day work can be done in VS Code.

734
01:27:39,180 --> 01:27:43,380
The integration between VS Code and GitHub is excellent.

735
01:27:43,380 --> 01:27:45,940
And it's no surprise because, I mean,

736
01:27:45,940 --> 01:27:48,460
both of these tools are affiliated with Microsoft.

737
01:27:48,460 --> 01:27:50,580
So the integration is really, really good.

738
01:27:52,580 --> 01:27:53,420
With the command line,

739
01:27:53,420 --> 01:27:56,420
you have a little bit more flexibility you can do,

740
01:27:56,420 --> 01:27:59,280
But some of these are really advanced things

741
01:27:59,280 --> 01:28:00,980
that maybe you need once per year.

742
01:28:01,980 --> 01:28:06,980
If you want to work on a high-performance computing

743
01:28:09,100 --> 01:28:12,960
environment, then it's very often in a command line.

744
01:28:12,960 --> 01:28:15,860
And maybe that's a moment then to move to the command line.

745
01:28:17,380 --> 01:28:19,180
But if people are completely new to this,

746
01:28:19,180 --> 01:28:22,300
it's sometimes just easier to use an editor

747
01:28:22,300 --> 01:28:25,580
that offers to do it graphically in the same place

748
01:28:25,580 --> 01:28:33,340
you modify the files. Some people like me prefer to have different tools for different situations,

749
01:28:33,340 --> 01:28:38,940
so I want to have an editor and it just does editing, and then I want to do all the good

750
01:28:38,940 --> 01:28:44,860
stuff I want to do somewhere else. So it depends a little bit on preference, but it's important

751
01:28:44,860 --> 01:28:50,460
for us to say that the one thing is not better than the other thing. Try something, experiment,

752
01:28:50,460 --> 01:28:54,140
and then you can also compare, and that's why also we offer these different tracks.

753
01:28:56,780 --> 01:29:02,940
I will now move into this episode here, archaeology, inspecting history,

754
01:29:04,940 --> 01:29:07,260
and it's the next one on this page.

755
01:29:09,500 --> 01:29:16,220
And this is again something that you can try either on GitHub or on the command line or in VS Code.

756
01:29:16,220 --> 01:29:24,220
And I think this is really useful for everybody to...

757
01:29:24,220 --> 01:29:28,420
We will show you some commands here, and we want you to know that they exist.

758
01:29:28,420 --> 01:29:33,420
And there will be a day when you will remember that, oh yes, there was this command, and

759
01:29:33,420 --> 01:29:36,700
I was able to do this and this thing, and then you can come back to this page and find

760
01:29:36,700 --> 01:29:37,700
how it worked.

761
01:29:37,700 --> 01:29:40,920
So just knowing that this is a possibility.

762
01:29:40,920 --> 01:29:46,020
And we will put ourselves in the situation where we browse an existing project written

763
01:29:46,020 --> 01:29:53,300
by somebody else, we decided to look at this NetworkX project.

764
01:29:53,300 --> 01:29:54,940
This is an open source project.

765
01:29:54,940 --> 01:29:58,660
It's a Python project, doesn't matter,

766
01:29:58,660 --> 01:30:05,740
that does some graph theory and network things.

767
01:30:05,740 --> 01:30:08,620
But we will.

768
01:30:08,620 --> 01:30:11,620
So now we imagine that we start.

769
01:30:11,620 --> 01:30:14,460
I'm a new student, new PhD student, new postdoc,

770
01:30:14,460 --> 01:30:21,460
And I'm entering something and somebody else has already written a lot of code and there is a git repository and I need to navigate in there.

771
01:30:21,460 --> 01:30:24,660
And as a warm up, and just for fun.

772
01:30:24,660 --> 01:30:28,660
Okay, so I want to open up this repository, you can browse it as well.

773
01:30:28,660 --> 01:30:31,460
It's on GitHub.

774
01:30:31,460 --> 01:30:35,860
7,000 commits, lots of people contributed there.

775
01:30:35,860 --> 01:30:43,260
So I didn't, I have no affiliation with this, I will use it only as an example.

776
01:30:43,260 --> 01:30:50,460
And one kind of fun tool is to browse this through this githistory.xyz tool.

777
01:30:51,340 --> 01:30:55,340
And in here, you can put in any GitHub repository that is public.

778
01:30:55,340 --> 01:30:58,780
So you could replace this to buy your own repository and then

779
01:31:00,300 --> 01:31:02,140
browse any file. I will just show you how that looks.

780
01:31:03,340 --> 01:31:06,060
Because it's a fun visual way.

781
01:31:06,940 --> 01:31:11,980
So this is now, we are looking at the README file of this NetworkX project.

782
01:31:11,980 --> 01:31:18,620
And now with left and right arrows on my keyboard, I can now navigate through the history.

783
01:31:18,620 --> 01:31:20,780
And we really get a like a visual.

784
01:31:20,780 --> 01:31:24,660
But this is a general service from GitHub.

785
01:31:24,660 --> 01:31:28,380
It's not connected to the NetworkX repository.

786
01:31:28,380 --> 01:31:31,940
So it's, I don't know who wrote it.

787
01:31:31,940 --> 01:31:33,740
Somebody wrote it.

788
01:31:33,740 --> 01:31:37,220
But here you can put in any repository.

789
01:31:37,220 --> 01:31:40,440
So I could put in CR workshop exercises

790
01:31:40,440 --> 01:31:41,940
and here could be recipe book.

791
01:31:43,180 --> 01:31:45,060
And here could be read me MD.

792
01:31:45,060 --> 01:31:46,580
And then with left and right arrows,

793
01:31:46,580 --> 01:31:49,580
I could kind of do some time traveling

794
01:31:49,580 --> 01:31:51,500
and see how the file evolved.

795
01:31:51,500 --> 01:31:52,540
This is just for fun.

796
01:31:54,620 --> 01:31:56,240
It's fun to look at.

797
01:31:56,240 --> 01:31:59,380
But now I want to go more into the more useful things.

798
01:31:59,380 --> 01:32:02,420
And I was wondering now in the break

799
01:32:02,420 --> 01:32:05,420
whether I should demonstrate the command line or GitHub.

800
01:32:07,220 --> 01:32:15,220
So I would normally personally use command line but maybe just to challenge myself I will demonstrate a couple of these tools on GitHub.

801
01:32:15,220 --> 01:32:19,220
And then in the, we will give you an exercise block again.

802
01:32:19,220 --> 01:32:21,220
And then you can try these tools.

803
01:32:21,220 --> 01:32:35,220
And we give you a little challenge. So there is a little bit of archaeology work. We ask you a few questions to figure out something about this network x repository, and using the tools that I will just demonstrate.

804
01:32:35,220 --> 01:32:37,640
And one of these things that you can do,

805
01:32:37,640 --> 01:32:40,640
and I think we have tried it also yesterday

806
01:32:40,640 --> 01:32:43,440
when we looked for which recipes contain the world,

807
01:32:44,520 --> 01:32:45,980
which recipes contain salt,

808
01:32:47,220 --> 01:32:49,160
is that you can search,

809
01:32:49,160 --> 01:32:51,520
you can search in repositories.

810
01:32:51,520 --> 01:32:55,640
And we have instructions on how to do it in command line.

811
01:32:57,320 --> 01:33:00,240
You can, if you want, you can now test it in a command line,

812
01:33:00,240 --> 01:33:02,200
but I will, otherwise just watch what I do.

813
01:33:02,200 --> 01:33:04,000
I will now search something in here.

814
01:33:04,880 --> 01:33:09,520
And you can search for, for instance, FixMe.

815
01:33:09,520 --> 01:33:14,680
What are all the places that this can be useful?

816
01:33:14,680 --> 01:33:20,320
Because sometimes I leave these FixMes in my own projects

817
01:33:20,320 --> 01:33:23,080
to remember to fix something.

818
01:33:23,080 --> 01:33:28,320
And it will list here all the files that contain this.

819
01:33:28,320 --> 01:33:31,320
And then you can browse these files.

820
01:33:31,320 --> 01:33:36,320
So I could click on one of these files and browse them.

821
01:33:40,600 --> 01:33:43,240
So searching through repositories.

822
01:33:43,240 --> 01:33:46,100
And there is also then a command line version of it.

823
01:33:46,100 --> 01:33:47,600
Really, really useful.

824
01:33:47,600 --> 01:33:49,200
I use it if, for instance,

825
01:33:49,200 --> 01:33:51,180
I get an error message from a code

826
01:33:51,180 --> 01:33:55,820
and I want to know where in the code does it come from.

827
01:33:55,820 --> 01:33:57,760
So then I search for the error message.

828
01:33:57,760 --> 01:34:09,200
When you search, you must have the repo and the repository name, so you search with the

829
01:34:09,200 --> 01:34:12,080
repo and not the whole GitHub.

830
01:34:12,080 --> 01:34:15,960
Yeah, and when I did that here, so when I visited this repo and I clicked on the magnifying

831
01:34:15,960 --> 01:34:21,480
glass, it automatically suggests this, but I could replace it.

832
01:34:21,480 --> 01:34:25,600
I could search some other repository.

833
01:34:25,600 --> 01:34:27,520
But the key is that you can search

834
01:34:27,520 --> 01:34:29,020
through the entire repository,

835
01:34:30,960 --> 01:34:33,420
through the present version of it.

836
01:34:33,420 --> 01:34:34,760
There are also ways that you can,

837
01:34:34,760 --> 01:34:36,160
I can search through the whole of the past.

838
01:34:36,160 --> 01:34:38,840
So even if something got removed in the past,

839
01:34:38,840 --> 01:34:39,800
it's also possible.

840
01:34:43,760 --> 01:34:46,900
The next thing I wanted to show you is that if you,

841
01:34:48,320 --> 01:34:50,440
that you can browse specific commits.

842
01:34:50,440 --> 01:34:59,960
I could click on any of these commits and

843
01:34:59,960 --> 01:35:06,960
browse the details of these commits, both what was the change and what is the metadata.

844
01:35:06,960 --> 01:35:14,760
If you know a commit identifier, and in this case it's 759D5 long number,

845
01:35:14,760 --> 01:35:18,420
you can also put it in directly.

846
01:35:18,420 --> 01:35:22,260
So let's remember that 759D58.

847
01:35:22,260 --> 01:35:26,900
So I could also do it 759D58.

848
01:35:26,900 --> 01:35:28,900
I don't even have to type the whole thing.

849
01:35:30,220 --> 01:35:33,420
And this way you can look at any of the commits

850
01:35:33,420 --> 01:35:35,200
in the repository.

851
01:35:37,120 --> 01:35:39,860
And you can do the same thing then on the command line.

852
01:35:39,860 --> 01:35:49,060
The line-by-line annotation, it's super powerful.

853
01:35:49,060 --> 01:35:53,220
On the command line, it's called git annotate.

854
01:35:53,220 --> 01:35:55,260
On GitLab, it's called annotate.

855
01:35:55,260 --> 01:35:59,020
On GitHub, it's unfortunately called blame.

856
01:35:59,020 --> 01:36:06,060
But it's so super useful, not to blame anybody, but to find line-by-line annotation.

857
01:36:06,060 --> 01:36:09,260
So here I can switch between looking at the code

858
01:36:09,260 --> 01:36:11,460
or looking at the code and the annotation.

859
01:36:13,620 --> 01:36:15,020
And later in the exercise,

860
01:36:15,020 --> 01:36:18,840
we will ask you to find a specific line in a code

861
01:36:18,840 --> 01:36:21,940
and then to find out which commit

862
01:36:21,940 --> 01:36:23,960
was the one that modified it last.

863
01:36:27,180 --> 01:36:30,040
We will also ask you to, can you bring,

864
01:36:31,900 --> 01:36:34,540
okay, imagine that you find a problem,

865
01:36:34,540 --> 01:36:36,680
you find a bug in the code.

866
01:36:36,680 --> 01:36:38,920
And then you find out when was it last modified.

867
01:36:38,920 --> 01:36:43,040
And then you want to know how did the code look

868
01:36:43,040 --> 01:36:45,080
just before I introduced the bug.

869
01:36:46,560 --> 01:36:49,280
So what you want to know is what was the commit

870
01:36:49,280 --> 01:36:51,760
just before the problematic commit.

871
01:36:51,760 --> 01:36:53,760
And yesterday I learned that there is,

872
01:36:53,760 --> 01:36:56,000
and I learned it from somebody writing on the notes,

873
01:36:56,000 --> 01:37:01,000
is that there is this blame prior to change feature here.

874
01:37:01,540 --> 01:37:02,380
And with this one,

875
01:37:02,380 --> 01:37:18,580
navigate to the version just before and you will use that in the exercise

876
01:37:18,580 --> 01:37:24,940
there's a question on the shared notes or do I find the commit overview on the github

877
01:37:24,940 --> 01:37:25,940
page

878
01:37:25,940 --> 01:37:35,020
Oh, the upper part is blocked. Sorry for that. Let me show that again. I will make it less

879
01:37:35,020 --> 01:37:44,220
blocked. I will. Well, let's hide this one. I don't matter. I unblocked it already. Okay.

880
01:37:44,220 --> 01:37:55,900
So let's go back to I'm back at the repository. And sorry, what I wanted to show is this.

881
01:37:55,900 --> 01:37:57,980
We are back at this GitHub repository.

882
01:37:57,980 --> 01:37:59,980
And the way I found,

883
01:37:59,980 --> 01:38:02,100
if I understood the question correctly,

884
01:38:02,100 --> 01:38:07,100
all the commits was to click here on the clock symbol.

885
01:38:09,460 --> 01:38:12,140
On the command line, this would be git log.

886
01:38:12,140 --> 01:38:15,260
Show me all the commits that existed

887
01:38:15,260 --> 01:38:17,020
and it will show you 7,000 commits.

888
01:38:17,020 --> 01:38:39,820
And maybe one more tool that is really useful, let's say that I made a specific commit.

889
01:38:39,820 --> 01:38:42,100
I found, I'm looking at this commit here,

890
01:38:42,100 --> 01:38:46,660
which changed some integers instead of strings.

891
01:38:50,100 --> 01:38:51,420
And we have the change.

892
01:38:51,420 --> 01:38:52,860
Some files got lines got removed.

893
01:38:52,860 --> 01:38:55,900
Some lines got added metadata.

894
01:38:56,820 --> 01:38:59,980
But the really cool feature is what if I want to look

895
01:38:59,980 --> 01:39:04,820
at the project as it looked, not just this change,

896
01:39:04,820 --> 01:39:07,140
but I want to look at the whole project,

897
01:39:07,140 --> 01:39:12,020
But at this commit, so how was it on,

898
01:39:13,100 --> 01:39:16,460
how did the project look on September 12, 2016?

899
01:39:17,660 --> 01:39:19,960
And you can do that here, browse files.

900
01:39:24,620 --> 01:39:26,780
So in top left, I will zoom in a little bit.

901
01:39:26,780 --> 01:39:28,820
It doesn't say main anymore or master,

902
01:39:28,820 --> 01:39:31,820
but it shows, now I'm looking at the project

903
01:39:31,820 --> 01:39:35,860
as it was in, at the commit with this identifier,

904
01:39:35,860 --> 01:39:48,940
which was in 2016 and you can you can then do some archaeology in there

905
01:39:48,940 --> 01:39:54,020
Question 33, let's see what

906
01:39:54,020 --> 01:39:57,540
So these red squares and green squares maybe is this one here

907
01:39:57,540 --> 01:40:01,460
I think this is a visual representation of how much got removed and how much got added

908
01:40:01,460 --> 01:40:02,380
Just a short summary.

909
01:40:08,180 --> 01:40:09,460
So this is some tools.

910
01:40:09,460 --> 01:40:12,060
And there is no expectation that now you

911
01:40:12,060 --> 01:40:13,740
remembered all the steps I did.

912
01:40:13,740 --> 01:40:16,220
The nice thing is that we have here,

913
01:40:16,220 --> 01:40:18,260
we have step-by-step solution.

914
01:40:18,260 --> 01:40:20,860
And you can then also use these screenshots that we have.

915
01:40:20,860 --> 01:40:28,180
And you can use the combined line recipes.

916
01:40:28,180 --> 01:40:33,180
And I will come back to question 34 in a moment,

917
01:40:36,980 --> 01:40:41,100
but during the exercise, we will have 20 minutes.

918
01:40:41,100 --> 01:40:46,100
You will explore this repository,

919
01:40:46,340 --> 01:40:50,500
which is not something we created.

920
01:40:51,340 --> 01:40:53,180
So here, the first steps will be to make sure

921
01:40:53,180 --> 01:40:57,540
that you are not still in the same recipe book

922
01:40:57,540 --> 01:40:59,100
from this morning.

923
01:40:59,100 --> 01:41:00,300
So we will navigate out of it.

924
01:41:00,300 --> 01:41:01,820
We will create a new,

925
01:41:01,820 --> 01:41:03,620
if you work locally,

926
01:41:03,620 --> 01:41:05,020
you will create a new clone.

927
01:41:08,020 --> 01:41:11,200
And then your tasks are,

928
01:41:12,260 --> 01:41:13,660
okay, in this project that we don't know,

929
01:41:13,660 --> 01:41:15,740
we somewhere in the code,

930
01:41:17,080 --> 01:41:20,160
there is a file which contains a line

931
01:41:20,160 --> 01:41:23,060
and the line says logic error in degree correlation.

932
01:41:23,060 --> 01:41:24,860
And we imagined that we are running this thing

933
01:41:24,860 --> 01:41:26,300
and we got the error message.

934
01:41:27,260 --> 01:41:30,380
And now we need to know more about why is the error there?

935
01:41:30,380 --> 01:41:31,380
Can I do something about it?

936
01:41:31,380 --> 01:41:32,900
Where in the code does it happen?

937
01:41:32,900 --> 01:41:36,780
So you're asked to find where in the code does this happen?

938
01:41:36,780 --> 01:41:40,980
And then when was this line modified last or edit?

939
01:41:40,980 --> 01:41:45,900
So find the actual commit and inspect the commit.

940
01:41:48,500 --> 01:41:49,820
And when you inspect the commit

941
01:41:49,820 --> 01:41:51,900
and this connects also to question 33,

942
01:41:52,820 --> 01:41:55,780
you don't need to type the entire long identifier

943
01:41:55,780 --> 01:42:03,420
40 characters, it's enough to have maybe six or seven if they are unique.

944
01:42:03,420 --> 01:42:06,580
So you will look at what is actually in the commit, what is the commit change, what is

945
01:42:06,580 --> 01:42:15,660
the commit metadata, and then try to create a branch that points to the past when that

946
01:42:15,660 --> 01:42:18,180
commit was created.

947
01:42:18,180 --> 01:42:25,020
So our goal is to browse the project as it looked back then, a few years ago, and think

948
01:42:25,020 --> 01:42:30,060
a little bit, how would you bring the code back to the version of the code just before

949
01:42:30,060 --> 01:42:35,340
that line got modified? And I showed you how to do that on GitHub, but it's also possible

950
01:42:35,340 --> 01:42:40,420
to do it on the command line. Okay, somebody's operating a heavy machinery outside. I hope

951
01:42:40,420 --> 01:42:43,020
you cannot hear it on the microphone, but let me know if you can.

952
01:42:43,020 --> 01:42:47,340
I think it's good. I can hear your voice here.

953
01:42:47,340 --> 01:42:52,040
Good. And I'm just checking your questions whether we should clarify anything else before

954
01:42:52,040 --> 01:42:59,920
sending people to into a 20 minute exercise. How can you find know the hash of the code?

955
01:42:59,920 --> 01:43:06,240
So you may be maybe here, somebody means the hash of the commit. Have a look at some of

956
01:43:06,240 --> 01:43:13,440
the hints and steps and it will hopefully become clear but if not, we will clarify more.

957
01:43:13,440 --> 01:43:18,200
So thanks a lot for pasting here. Somebody prepares already the the exercise block during

958
01:43:18,200 --> 01:43:23,360
During the exercise block, we are silent on stream.

959
01:43:23,360 --> 01:43:26,520
And your goal will be to explore these five questions.

960
01:43:26,520 --> 01:43:32,720
You will need to start by, if you work locally, you need to start by cloning the repository.

961
01:43:32,720 --> 01:43:37,280
But it's possible to do everything on GitHub, and then you don't need to clone anything.

962
01:43:37,280 --> 01:43:42,320
And down here, I will click on it, but I will also close it quickly.

963
01:43:42,320 --> 01:43:45,280
Spoiler alert, there is some solution.

964
01:43:45,280 --> 01:43:49,200
And the solution is here for the command line and GitHub.

965
01:43:49,200 --> 01:43:54,600
But you can contribute additional solutions.

966
01:43:54,600 --> 01:43:57,240
And then we will be back.

967
01:43:57,240 --> 01:44:02,960
And we will then use the remaining seven minutes of the hour to discuss some of these reactor

968
01:44:02,960 --> 01:44:08,840
questions and, and summarize this session before we start a longer break.

969
01:44:08,840 --> 01:44:11,360
Good.

970
01:44:11,360 --> 01:44:21,480
Let's be back at, here you'll find where the exercise is, and we will be back at 53 minutes

971
01:44:21,480 --> 01:44:22,480
past.

972
01:44:22,480 --> 01:44:27,800
I will just type that in, 53.

973
01:44:27,800 --> 01:44:29,560
Please continue asking questions on the notes.

974
01:44:29,560 --> 01:44:30,600
Good luck with the exercise.

975
01:44:30,600 --> 01:44:32,320
See you in 20 minutes.

976
01:44:32,320 --> 01:44:33,320
Bye.

977
01:44:33,320 --> 01:44:33,600
Bye.

978
01:44:41,360 --> 01:44:43,420
you

979
01:45:11,360 --> 01:45:13,420
you

980
01:45:41,360 --> 01:45:43,420
you

981
01:46:11,360 --> 01:46:13,420
you

982
01:46:41,360 --> 01:46:43,420
you

983
01:47:11,360 --> 01:47:13,420
you

984
01:47:41,360 --> 01:47:43,420
you

985
01:48:11,360 --> 01:48:13,420
you

986
01:48:41,360 --> 01:48:43,420
you

987
01:49:11,360 --> 01:49:13,420
you

988
01:49:41,360 --> 01:49:43,420
you

989
01:50:11,360 --> 01:50:13,420
you

990
01:50:41,360 --> 01:50:43,420
you

991
01:51:11,360 --> 01:51:13,420
you

992
01:51:41,360 --> 01:51:43,420
you

993
01:52:11,360 --> 01:52:13,420
you

994
01:52:41,360 --> 01:52:43,420
you

995
01:53:11,360 --> 01:53:13,420
you

996
01:53:41,360 --> 01:53:43,420
you

997
01:54:11,360 --> 01:54:13,420
you

998
01:54:41,360 --> 01:54:43,420
you

999
01:55:11,360 --> 01:55:13,420
you

1000
01:55:41,360 --> 01:55:43,420
you

1001
01:56:11,360 --> 01:56:13,420
you

1002
01:56:41,360 --> 01:56:43,420
you

1003
01:57:11,360 --> 01:57:13,420
you

1004
01:57:41,360 --> 01:57:43,420
you

1005
01:58:11,360 --> 01:58:13,420
you

1006
01:58:41,360 --> 01:58:43,420
you

1007
01:59:11,360 --> 01:59:13,420
you

1008
01:59:41,360 --> 01:59:43,420
you

1009
02:00:11,360 --> 02:00:13,420
you

1010
02:00:41,360 --> 02:00:43,420
you

1011
02:01:11,360 --> 02:01:13,420
you

1012
02:01:41,360 --> 02:01:43,420
you

1013
02:02:11,360 --> 02:02:13,420
you

1014
02:02:41,360 --> 02:02:43,420
you

1015
02:03:11,360 --> 02:03:13,420
you

1016
02:03:41,360 --> 02:03:43,420
you

1017
02:04:11,360 --> 02:04:25,240
Welcome back from the exercise.

1018
02:04:25,240 --> 02:04:32,520
We have seven minutes left and we were watching your questions and thanks for asking them.

1019
02:04:32,520 --> 02:04:40,240
We saw that there were quite many questions about the concept of what does it mean to

1020
02:04:40,240 --> 02:04:42,480
and browse and edit a local copy?

1021
02:04:43,400 --> 02:04:44,240
And these are good questions.

1022
02:04:44,240 --> 02:04:47,180
So I want to show, we will show that we will,

1023
02:04:48,080 --> 02:04:50,180
we want to really react to these questions.

1024
02:04:51,760 --> 02:04:54,760
Also, somebody else created a git repository

1025
02:04:54,760 --> 02:04:59,560
in the wrong place, and we will clarify that,

1026
02:04:59,560 --> 02:05:03,480
how that can happen and where on my hard drive

1027
02:05:03,480 --> 02:05:04,760
is even the git repository.

1028
02:05:04,760 --> 02:05:07,160
So I think this is something we should really clarify.

1029
02:05:10,240 --> 02:05:16,400
So first thing I want to show, what does it mean to create a local copy on VS Code?

1030
02:05:17,480 --> 02:05:20,800
And then I want to show, what does it mean to create a local copy in the command line?

1031
02:05:21,800 --> 02:05:24,960
And we should also have a discussion about, well, where should people start?

1032
02:05:24,960 --> 02:05:26,360
Should they start in an editor?

1033
02:05:26,360 --> 02:05:27,480
Should they start in the command line?

1034
02:05:27,480 --> 02:05:30,640
Should they avoid all of these things and just use the browser?

1035
02:05:30,840 --> 02:05:35,840
So we should have a discussion around these questions, but let me start in VS Code.

1036
02:05:35,840 --> 02:05:38,720
And this is, this is an environment that I'm not familiar with.

1037
02:05:38,720 --> 02:05:40,000
So I'll be a little bit clumsy here.

1038
02:05:40,240 --> 02:05:46,480
But maybe that's helpful.

1039
02:05:46,480 --> 02:05:51,200
So if I want to work locally, I have opened up on the bottom of the half of the screen

1040
02:05:51,200 --> 02:05:52,800
is VSCode.

1041
02:05:52,800 --> 02:05:59,160
It looks pretty empty because I opened it up in a in a folder that I called course.

1042
02:05:59,160 --> 02:06:04,840
And now if I want to have this repository locally, what I did is I switched to the source

1043
02:06:04,840 --> 02:06:11,080
control tab and now maybe your needs to help me how do i find

1044
02:06:11,080 --> 02:06:15,000
what about switching to the files

1045
02:06:17,080 --> 02:06:18,840
on file but i want to clone

1046
02:06:20,920 --> 02:06:21,880
all right just a sec

1047
02:06:24,760 --> 02:06:28,440
i had that before but why can't i find it now so i want to clone now

1048
02:06:30,840 --> 02:06:31,480
and i'm now

1049
02:06:34,840 --> 02:06:37,400
But the upper left symbol

1050
02:06:37,400 --> 02:06:39,400
Oh, it's maybe because I'm so zoomed in

1051
02:06:39,400 --> 02:06:42,960
Here, three dots, here we go

1052
02:06:42,960 --> 02:06:45,320
Clone

1053
02:06:45,320 --> 02:06:47,560
I want to make a local copy, from where?

1054
02:06:47,560 --> 02:06:50,760
I will copy it from here, the green button

1055
02:06:50,760 --> 02:06:54,680
And now there was also a question, well, should it be SSH or HTTPS?

1056
02:06:54,680 --> 02:06:59,240
In this case, it doesn't matter because I will not contribute any changes back, I just

1057
02:06:59,240 --> 02:07:02,480
want to browse it locally and make changes locally

1058
02:07:02,480 --> 02:07:09,080
So I want to copy this clone.

1059
02:07:09,080 --> 02:07:12,000
This is the address.

1060
02:07:12,000 --> 02:07:13,400
And just please do it.

1061
02:07:13,400 --> 02:07:16,920
And now I think it asks me where to place it.

1062
02:07:16,920 --> 02:07:21,280
I will place it in the same.

1063
02:07:21,280 --> 02:07:28,640
Yeah, that's interesting because now it wants to place it in a different place than I am

1064
02:07:28,640 --> 02:07:31,400
right now.

1065
02:07:31,400 --> 02:07:38,680
in the subdirectory that you were in the course? No, but I will find it. Oh, here we go. So

1066
02:07:38,680 --> 02:07:42,120
I just need to, now this is, I see that this is outside of your screen, but I'm navigating

1067
02:07:42,120 --> 02:07:53,240
now to the place where I want it. And now it will put it on, now it's copying it. And

1068
02:07:53,240 --> 02:07:57,440
what I will be able to see here is that I will be able to see the history and I will

1069
02:07:57,440 --> 02:08:05,640
be able to then go to each file and make changes to it.

1070
02:08:05,640 --> 02:08:07,280
Here we go.

1071
02:08:07,280 --> 02:08:11,640
And this is hard to read because I'm so zoomed in.

1072
02:08:11,640 --> 02:08:18,040
But this is the project.

1073
02:08:18,040 --> 02:08:21,280
And I admit I don't know how to browse it because I don't use VS Code so often, but

1074
02:08:21,280 --> 02:08:26,440
I know that I have it on my hard drive.

1075
02:08:26,440 --> 02:08:32,920
here. Oh, here it is. So I navigated up here, top left, and here are all the files. And now,

1076
02:08:34,200 --> 02:08:38,680
I mean, now I could go in and make some changes to the file.

1077
02:08:43,640 --> 02:08:47,480
And this is what it means to create a local copy and make local changes.

1078
02:08:50,040 --> 02:08:55,480
And this change should also show up somewhere here. And I think this is

1079
02:08:55,480 --> 02:08:57,160
This is the place where I can then

1080
02:08:57,160 --> 02:09:00,840
Yeah you have the number one upper left there

1081
02:09:00,840 --> 02:09:04,080
It says that you have changed one file

1082
02:09:04,080 --> 02:09:08,920
What I was hoping is that I can see the change also here and I can commit it

1083
02:09:08,920 --> 02:09:09,920
Let's make a commit

1084
02:09:09,920 --> 02:09:19,060
Yeah I can't, I don't know, maybe I need to save

1085
02:09:19,060 --> 02:09:20,280
And I don't even know how to do that

1086
02:09:20,280 --> 02:09:21,280
All right so

1087
02:09:21,280 --> 02:09:25,880
I'll draw this S, I guess, or something.

1088
02:09:25,880 --> 02:09:29,120
Now saved.

1089
02:09:29,120 --> 02:09:31,480
Great demo.

1090
02:09:31,480 --> 02:09:34,640
Let me show you how to do it on the command line.

1091
02:09:34,640 --> 02:09:41,520
This is the environment that I'm more familiar with.

1092
02:09:41,520 --> 02:09:46,520
And here, if I want to make a local copy, it starts with...

1093
02:09:46,520 --> 02:09:47,640
Okay, what do I have here?

1094
02:09:47,640 --> 02:09:48,760
What kind of directories?

1095
02:09:48,760 --> 02:09:51,840
I have this network X from before.

1096
02:09:51,840 --> 02:09:55,560
So if I want to clone now, git clone,

1097
02:09:57,040 --> 02:09:58,280
I need to give it a different name

1098
02:09:58,280 --> 02:09:59,600
because I have already one here.

1099
02:09:59,600 --> 02:10:03,760
So this is the other network X.

1100
02:10:05,520 --> 02:10:07,360
And the networkx that you have there

1101
02:10:07,360 --> 02:10:08,800
is from VSCode.

1102
02:10:08,800 --> 02:10:09,640
Yeah.

1103
02:10:11,360 --> 02:10:12,960
So this is a way to create a local copy

1104
02:10:12,960 --> 02:10:14,040
now in the command line.

1105
02:10:14,040 --> 02:10:21,100
And, and then I can go into, into this new directory and I can open

1106
02:10:21,100 --> 02:10:22,500
files with my favorite editor.

1107
02:10:22,500 --> 02:10:26,200
And you have all noticed that I have a different favorite editor because

1108
02:10:26,200 --> 02:10:28,480
I'm not familiar really with VS code.

1109
02:10:29,680 --> 02:10:32,360
But the one thing I wanted to show you, which we didn't mention earlier,

1110
02:10:32,360 --> 02:10:39,520
is that if I now on the command line, navigate to, to this repository.

1111
02:10:41,720 --> 02:10:43,880
And I can see that we are almost out of time.

1112
02:10:44,040 --> 02:10:47,040
So, I wanted to show you that,

1113
02:10:52,080 --> 02:10:53,720
we'll just switch the order here,

1114
02:10:55,120 --> 02:11:00,120
that there is a hidden directory called .git.

1115
02:11:00,640 --> 02:11:04,880
And this is the one that contains all the history,

1116
02:11:04,880 --> 02:11:06,280
all the commits.

1117
02:11:06,280 --> 02:11:08,880
And for the people who created maybe a git repository,

1118
02:11:08,880 --> 02:11:11,240
like in the wrong place on your hard drive,

1119
02:11:11,240 --> 02:11:13,280
you can look for this directory.

1120
02:11:13,280 --> 02:11:14,560
all the commits, all the branches,

1121
02:11:14,560 --> 02:11:16,400
everything we create goes into here.

1122
02:11:16,400 --> 02:11:18,520
This is the local Git repository.

1123
02:11:18,520 --> 02:11:21,080
And every Git repository has this .git.

1124
02:11:23,520 --> 02:11:24,960
You have a .git over there?

1125
02:11:24,960 --> 02:11:26,600
What's that?

1126
02:11:26,600 --> 02:11:29,040
This is something that came together with NetworkX.

1127
02:11:29,040 --> 02:11:30,240
This is something they created.

1128
02:11:30,240 --> 02:11:35,080
And we will see that next week

1129
02:11:35,080 --> 02:11:39,880
when we do automation to build documentation or run tests.

1130
02:11:39,880 --> 02:11:45,880
So, we are already one minute over time.

1131
02:11:45,880 --> 02:11:49,840
Here the goal was not to remember how these commands work, but we wanted to show you that

1132
02:11:49,840 --> 02:11:50,840
this is possible.

1133
02:11:50,840 --> 02:11:56,520
It's possible to browse the history and find what is going on in the repository or what

1134
02:11:56,520 --> 02:11:59,520
has happened in the past.

1135
02:11:59,520 --> 02:12:07,760
One thing we skipped, but can be a really useful command one day.

1136
02:12:07,760 --> 02:12:14,320
One day it will save the day and that is a nice tool that can help you to change to find

1137
02:12:14,320 --> 02:12:19,740
out when something changed in the past.

1138
02:12:19,740 --> 02:12:22,640
And there is also an exercise but that is completely voluntary.

1139
02:12:22,640 --> 02:12:23,640
Try it.

1140
02:12:23,640 --> 02:12:26,520
Try it out sometime.

1141
02:12:26,520 --> 02:12:30,160
Really useful tool when you are in a situation that you notice that something changed in

1142
02:12:30,160 --> 02:12:33,200
my project but I'm really unsure when exactly.

1143
02:12:33,200 --> 02:12:38,160
And this tool will find, will locate the precise commit.

1144
02:12:38,160 --> 02:12:50,080
Good, but since we are out of time, I recommend we take a good 58 minutes break.

1145
02:12:50,080 --> 02:12:53,600
And we will be back in 58 minutes.

1146
02:12:53,600 --> 02:12:59,360
And then there will be then one more exercise block and what we will learn how to do and

1147
02:12:59,360 --> 02:13:05,680
practice to do is how to turn my own project, which is maybe a bunch of files, it's not

1148
02:13:05,680 --> 02:13:10,920
in Git yet, how do we turn it into a Git repository and then share it on GitHub? So it will be

1149
02:13:10,920 --> 02:13:15,880
basically the opposite of what we did this morning. And then there will be a half an

1150
02:13:15,880 --> 02:13:24,160
hour discussion session. Where to start, what traps to avoid. Anything else important I

1151
02:13:24,160 --> 02:13:28,200
missed that I should raise before we go into break?

1152
02:13:28,200 --> 02:13:32,240
Is there any questions that you should have covered?

1153
02:13:32,240 --> 02:13:35,960
I think we will look at questions and we can also start the next session with a little

1154
02:13:35,960 --> 02:13:36,960
recap.

1155
02:13:36,960 --> 02:13:39,200
Yeah, we can do that.

1156
02:13:39,200 --> 02:13:45,360
So everybody enjoy 57 minutes break, we will be back, back on stream at the next full hour

1157
02:13:45,360 --> 02:13:48,800
and do more Git.

1158
02:13:48,800 --> 02:13:49,800
Thanks so much.

1159
02:13:49,800 --> 02:13:50,800
See you later.

1160
02:13:50,800 --> 02:13:51,800
Bye.

1161
02:13:51,800 --> 02:13:52,800
See you later.

1162
02:13:52,800 --> 02:13:53,300
Bye bye.

1163
02:13:58,200 --> 02:14:00,260
you

1164
02:14:28,200 --> 02:14:30,260
you

1165
02:14:58,200 --> 02:15:00,260
you

1166
02:15:28,200 --> 02:15:30,260
you

1167
02:15:58,200 --> 02:16:00,260
you

1168
02:16:28,200 --> 02:16:30,260
you

1169
02:16:58,200 --> 02:17:00,260
you

1170
02:17:28,200 --> 02:17:30,260
you

1171
02:17:58,200 --> 02:18:00,260
you

1172
02:18:28,200 --> 02:18:30,260
you

1173
02:18:58,200 --> 02:19:00,260
you

1174
02:19:28,200 --> 02:19:30,260
you

1175
02:19:58,200 --> 02:20:00,260
you

1176
02:20:28,200 --> 02:20:30,260
you

1177
02:20:58,200 --> 02:21:00,260
you

1178
02:21:28,200 --> 02:21:30,260
you

1179
02:21:58,200 --> 02:22:00,260
you

1180
02:22:28,200 --> 02:22:30,260
you

1181
02:22:58,200 --> 02:23:00,260
you

1182
02:23:28,200 --> 02:23:30,260
you

1183
02:23:58,200 --> 02:24:00,260
you

1184
02:24:28,200 --> 02:24:30,260
you

1185
02:24:58,200 --> 02:25:00,260
you

1186
02:25:28,200 --> 02:25:30,260
you

1187
02:25:58,200 --> 02:26:00,260
you

1188
02:26:28,200 --> 02:26:30,260
you

1189
02:26:58,200 --> 02:27:00,260
you

1190
02:27:28,200 --> 02:27:30,260
you

1191
02:27:58,200 --> 02:28:00,260
you

1192
02:28:28,200 --> 02:28:30,260
you

1193
02:28:58,200 --> 02:29:00,260
you

1194
02:29:28,200 --> 02:29:30,260
you

1195
02:29:58,200 --> 02:30:00,260
you

1196
02:30:28,200 --> 02:30:30,260
you

1197
02:30:58,200 --> 02:31:00,260
you

1198
02:31:28,200 --> 02:31:30,260
you

1199
02:31:58,200 --> 02:32:00,260
you

1200
02:32:28,200 --> 02:32:30,260
you

1201
02:32:58,200 --> 02:33:00,260
you

1202
02:33:28,200 --> 02:33:30,260
you

1203
02:33:58,200 --> 02:34:00,260
you

1204
02:34:28,200 --> 02:34:30,260
you

1205
02:34:58,200 --> 02:35:00,260
you

1206
02:35:28,200 --> 02:35:30,260
you

1207
02:35:58,200 --> 02:36:00,260
you

1208
02:36:28,200 --> 02:36:30,260
you

1209
02:36:58,200 --> 02:37:00,260
you

1210
02:37:28,200 --> 02:37:30,260
you

1211
02:37:58,200 --> 02:38:00,260
you

1212
02:38:28,200 --> 02:38:30,260
you

1213
02:38:58,200 --> 02:39:00,260
you

1214
02:39:28,200 --> 02:39:30,260
you

1215
02:39:58,200 --> 02:40:00,260
you

1216
02:40:28,200 --> 02:40:30,260
you

1217
02:40:58,200 --> 02:41:00,260
you

1218
02:41:28,200 --> 02:41:30,260
you

1219
02:41:58,200 --> 02:42:00,260
you

1220
02:42:28,200 --> 02:42:30,260
you

1221
02:42:58,200 --> 02:43:00,260
you

1222
02:43:28,200 --> 02:43:30,260
you

1223
02:43:58,200 --> 02:44:00,260
you

1224
02:44:28,200 --> 02:44:30,260
you

1225
02:44:58,200 --> 02:45:00,260
you

1226
02:45:28,200 --> 02:45:30,260
you

1227
02:45:58,200 --> 02:46:00,260
you

1228
02:46:28,200 --> 02:46:30,260
you

1229
02:46:58,200 --> 02:47:00,260
you

1230
02:47:28,200 --> 02:47:30,260
you

1231
02:47:58,200 --> 02:48:00,260
you

1232
02:48:28,200 --> 02:48:30,260
you

1233
02:48:58,200 --> 02:49:00,260
you

1234
02:49:28,200 --> 02:49:30,260
you

1235
02:49:58,200 --> 02:50:00,260
you

1236
02:50:28,200 --> 02:50:30,260
you

1237
02:50:58,200 --> 02:51:00,260
you

1238
02:51:28,200 --> 02:51:30,260
you

1239
02:51:58,200 --> 02:52:00,260
you

1240
02:52:28,200 --> 02:52:30,260
you

1241
02:52:58,200 --> 02:53:00,260
you

1242
02:53:28,200 --> 02:53:30,260
you

1243
02:53:58,200 --> 02:54:00,260
you

1244
02:54:28,200 --> 02:54:30,260
you

1245
02:54:58,200 --> 02:55:00,260
you

1246
02:55:28,200 --> 02:55:30,260
you

1247
02:55:58,200 --> 02:56:00,260
you

1248
02:56:28,200 --> 02:56:30,260
you

1249
02:56:58,200 --> 02:57:00,260
you

1250
02:57:28,200 --> 02:57:30,260
you

1251
02:57:58,200 --> 02:58:00,260
you

1252
02:58:28,200 --> 02:58:30,260
you

1253
02:58:58,200 --> 02:59:00,260
you

1254
02:59:28,200 --> 02:59:30,260
you

1255
02:59:58,200 --> 03:00:00,260
you

1256
03:00:28,200 --> 03:00:30,260
you

1257
03:00:58,200 --> 03:01:00,260
you

1258
03:01:28,200 --> 03:01:30,260
you

1259
03:01:58,200 --> 03:02:00,260
you

1260
03:02:28,200 --> 03:02:30,260
you

1261
03:02:58,200 --> 03:03:00,260
you

1262
03:03:28,200 --> 03:03:30,260
you

1263
03:03:58,200 --> 03:04:00,260
you

1264
03:04:28,200 --> 03:04:30,260
you

1265
03:04:58,200 --> 03:05:00,260
you

1266
03:05:28,200 --> 03:05:30,260
you

1267
03:05:58,200 --> 03:06:00,260
you

1268
03:06:28,200 --> 03:06:30,260
you

1269
03:06:58,200 --> 03:07:00,260
you

1270
03:07:28,200 --> 03:07:30,260
you

1271
03:07:58,200 --> 03:08:00,260
you

1272
03:08:28,200 --> 03:08:30,260
you

1273
03:08:58,200 --> 03:09:00,260
you

1274
03:09:28,200 --> 03:09:30,260
you

1275
03:09:58,200 --> 03:10:00,260
you

1276
03:10:28,200 --> 03:10:30,260
you

1277
03:10:58,200 --> 03:11:27,800
Welcome back from the break.

1278
03:11:27,800 --> 03:11:34,200
And how do people like to jiggle?

1279
03:11:34,200 --> 03:11:35,200
So welcome back to more Git.

1280
03:11:35,200 --> 03:11:39,800
We have 90 minutes left.

1281
03:11:39,800 --> 03:11:46,760
There will be one more break session roughly in 55 minutes.

1282
03:11:46,760 --> 03:11:52,940
We want to now discuss, go a little bit the other way compared to earlier this morning.

1283
03:11:52,940 --> 03:11:56,540
We want to start with a project that is on my hard drive.

1284
03:11:57,940 --> 03:12:00,060
Let's imagine it's not on Git yet.

1285
03:12:00,060 --> 03:12:02,100
How do I make it, turn it into a Git repository?

1286
03:12:02,100 --> 03:12:05,740
How do I share it so that other people can find it

1287
03:12:05,740 --> 03:12:07,140
and so that I don't lose it?

1288
03:12:09,140 --> 03:12:11,580
And you can, it's no problem.

1289
03:12:11,580 --> 03:12:13,140
I'm encouraged to continue asking questions

1290
03:12:13,140 --> 03:12:15,380
also about previous topics.

1291
03:12:15,380 --> 03:12:20,060
We will be watching these questions.

1292
03:12:20,060 --> 03:12:23,580
And so there will be one more exercise soon,

1293
03:12:23,580 --> 03:12:25,420
but first we want to well explain it.

1294
03:12:26,860 --> 03:12:30,500
And then we will round up this day

1295
03:12:30,500 --> 03:12:34,980
by having a discussion about really where to start

1296
03:12:34,980 --> 03:12:37,580
and clarifying some of the things

1297
03:12:37,580 --> 03:12:38,980
that came up during the day.

1298
03:12:40,420 --> 03:12:43,780
So for me, the optimal thing to close the session today

1299
03:12:43,780 --> 03:12:45,820
will be if we get lots of questions,

1300
03:12:46,740 --> 03:12:48,540
let's see if we can get to 100

1301
03:12:48,540 --> 03:12:55,420
and if the last maybe 20-25 minutes are really like a discussion where we discuss these.

1302
03:12:57,020 --> 03:13:02,380
So I will now navigate to this next episode which is about sharing

1303
03:13:05,500 --> 03:13:07,660
and it's this one here. I will zoom in.

1304
03:13:10,540 --> 03:13:16,060
We want to turn my own coding project, it can be small or large, it can be a single script

1305
03:13:16,060 --> 03:13:22,540
or it can be a bunch of files finished or unfinished into a git repository.

1306
03:13:24,060 --> 03:13:27,660
And let's be honest, programming projects never get finished.

1307
03:13:27,660 --> 03:13:33,180
We always have an idea how to make them nicer next week, next month, next year.

1308
03:13:33,900 --> 03:13:37,980
But it's good to share them so that they are findable.

1309
03:13:37,980 --> 03:13:40,940
You should do this rather soon when you start out, really.

1310
03:13:41,740 --> 03:13:42,780
Yeah, the sooner the better.

1311
03:13:42,780 --> 03:13:47,380
And I remember first time I uploaded anything to GitHub,

1312
03:13:47,380 --> 03:13:50,840
I felt like now immediately people will start

1313
03:13:50,840 --> 03:13:54,120
and browse my projects and criticize it.

1314
03:13:54,120 --> 03:13:55,120
And that just doesn't happen.

1315
03:13:55,120 --> 03:13:58,140
It's not a problem to share something unfinished.

1316
03:13:59,460 --> 03:14:01,140
Because very often the unfinished thing

1317
03:14:01,140 --> 03:14:06,020
is the thing we use for our daily work.

1318
03:14:07,500 --> 03:14:08,980
And it's also about backup.

1319
03:14:08,980 --> 03:14:13,740
And we will share this project on GitHub.

1320
03:14:14,580 --> 03:14:17,060
But the important point here is not GitHub.

1321
03:14:17,060 --> 03:14:19,240
The important point here is that it's a place

1322
03:14:19,240 --> 03:14:20,700
that is not my hard drive.

1323
03:14:21,660 --> 03:14:23,960
And it's a place that other people can access.

1324
03:14:25,780 --> 03:14:27,940
So that's just an example.

1325
03:14:27,940 --> 03:14:31,020
And here is an illustration.

1326
03:14:31,020 --> 03:14:32,580
So I will start with a bunch of files

1327
03:14:32,580 --> 03:14:35,060
and I will also show you that

1328
03:14:35,060 --> 03:14:38,700
because on my hard drive, I created two files.

1329
03:14:38,700 --> 03:14:42,780
That's my example project, and I want it,

1330
03:14:42,780 --> 03:14:45,060
so now I'm convinced that Git is a good thing.

1331
03:14:45,060 --> 03:14:47,340
I want to turn it into a repository

1332
03:14:47,340 --> 03:14:50,420
and upload it to GitHub GitLab.

1333
03:14:52,900 --> 03:14:56,260
And this can be, it can be your real project,

1334
03:14:56,260 --> 03:14:59,680
but maybe you are not ready yet for that.

1335
03:14:59,680 --> 03:15:02,180
It can be a little example,

1336
03:15:03,340 --> 03:15:06,740
silly project that we call my project.

1337
03:15:06,740 --> 03:15:15,700
So then, if you don't have any files yet, you can then, during the exercise session,

1338
03:15:15,700 --> 03:15:23,100
create a project with, I don't know, one, two, three files in it.

1339
03:15:23,100 --> 03:15:29,220
And one thing we should clarify, which I think I didn't do really well in the previous episodes

1340
03:15:29,220 --> 03:15:33,140
is, which track should people use?

1341
03:15:33,140 --> 03:15:39,120
We have these different tracks using GitHub, VS Code, Command Line, RStudio.

1342
03:15:39,120 --> 03:15:41,120
And which one do we recommend?

1343
03:15:41,120 --> 03:15:45,740
It was maybe confusing that we tried to show multiple tracks here.

1344
03:15:45,740 --> 03:15:50,600
And our recommendation is that if you are completely new to this, if you haven't used

1345
03:15:50,600 --> 03:15:53,800
any of these tools before, go for GitHub.

1346
03:15:53,800 --> 03:15:58,960
This will be the simplest way and I will demonstrate it in a moment and we will see that it takes

1347
03:15:58,960 --> 03:16:02,840
five minutes.

1348
03:16:02,840 --> 03:16:09,820
The other tracks go use those if you if you have used VS code before and that can mean

1349
03:16:09,820 --> 03:16:13,960
like yesterday or this morning.

1350
03:16:13,960 --> 03:16:22,280
Then you can try that command line only if you really either if you know how to navigate

1351
03:16:22,280 --> 03:16:26,060
in a command line or if you have somebody.

1352
03:16:26,060 --> 03:16:30,700
Somebody who can help you maybe you have somebody like a support that you can ask questions

1353
03:16:30,700 --> 03:16:35,140
Maybe you have a team teammate who also uses the command line.

1354
03:16:35,340 --> 03:16:36,820
Then I would go for these other options.

1355
03:16:37,020 --> 03:16:40,380
But the goal here is not to try all of them at the same.

1356
03:16:40,580 --> 03:16:42,460
At the same time.

1357
03:16:43,580 --> 03:16:45,060
Go for the one that sounds familiar,

1358
03:16:45,260 --> 03:16:48,180
and if none of them sounds familiar, go for this one.

1359
03:16:51,220 --> 03:16:55,300
You can also later try some of the different tracks.

1360
03:16:55,500 --> 03:16:57,180
After the workshop, you can maybe meet up

1361
03:16:57,180 --> 03:16:59,940
with somebody else, form a little learning group,

1362
03:16:59,940 --> 03:17:02,620
and then try some of the other tracks together.

1363
03:17:02,620 --> 03:17:04,780
This can be really, I think, great learning.

1364
03:17:08,500 --> 03:17:10,460
And before throwing you into the exercise,

1365
03:17:10,460 --> 03:17:13,060
I thought that I will here demonstrate

1366
03:17:13,060 --> 03:17:15,280
what is the absolute minimum that we could do,

1367
03:17:15,280 --> 03:17:20,020
that I could do to share my work on places like GitHub.

1368
03:17:21,260 --> 03:17:22,660
And don't worry, I will also show you

1369
03:17:22,660 --> 03:17:23,840
how you can remove it again,

1370
03:17:23,840 --> 03:17:25,700
so that you don't have to be worried

1371
03:17:25,700 --> 03:17:30,700
that what we create here is created for eternity.

1372
03:17:30,700 --> 03:17:33,140
I will share a project and I will show you

1373
03:17:33,140 --> 03:17:34,420
how I can delete it again.

1374
03:17:37,220 --> 03:17:38,980
And I will basically follow the screenshot.

1375
03:17:38,980 --> 03:17:46,220
So I will now, you can just for the moment watch,

1376
03:17:46,220 --> 03:17:48,380
continue asking questions.

1377
03:17:48,380 --> 03:17:52,100
And I will now demonstrate this GitHub track.

1378
03:17:52,100 --> 03:17:54,700
So track is one of these four.

1379
03:17:54,700 --> 03:17:56,540
So this is what I refer to as track.

1380
03:17:56,540 --> 03:17:57,940
I will demonstrate this one.

1381
03:17:59,940 --> 03:18:02,700
So now just lean back and watch, later you can try it.

1382
03:18:02,700 --> 03:18:07,220
I'm now on my GitHub space under my username

1383
03:18:08,420 --> 03:18:12,080
and I will create a new empty repository.

1384
03:18:13,680 --> 03:18:14,900
This is really the simplest way

1385
03:18:14,900 --> 03:18:17,400
to get anything up here on GitHub, new repository.

1386
03:18:21,460 --> 03:18:24,060
And I need to decide where it should be.

1387
03:18:24,060 --> 03:18:28,940
in this case it should be under my username and I can give it a name.

1388
03:18:30,940 --> 03:18:37,500
How should I call it? My project. My project. Hopefully. Okay, I don't have one yet. If,

1389
03:18:37,500 --> 03:18:44,460
great. So this is not, doesn't exist yet. I can give it a description. This is just an example.

1390
03:18:44,460 --> 03:18:51,660
for teaching

1391
03:18:51,660 --> 03:18:55,220
It will be public because I want other people to be able to find it and browse it

1392
03:18:55,220 --> 03:19:01,460
Of course if you if you are uncomfortable with that now just for the demonstration purposes

1393
03:19:01,460 --> 03:19:03,260
you can try this as well

1394
03:19:03,260 --> 03:19:05,900
I will take public

1395
03:19:05,900 --> 03:19:08,660
And I want to start with a readme file

1396
03:19:08,660 --> 03:19:09,700
Yes

1397
03:19:09,700 --> 03:19:13,980
Because it will then it will not be an empty repository it will already

1398
03:19:13,980 --> 03:19:16,300
This will create the first commit

1399
03:19:16,300 --> 03:19:17,860
and there will be a README file.

1400
03:19:19,620 --> 03:19:22,100
Will you add a license as well?

1401
03:19:22,100 --> 03:19:22,940
I think we should do that.

1402
03:19:22,940 --> 03:19:24,760
So license, good idea.

1403
03:19:25,620 --> 03:19:26,460
Which one?

1404
03:19:26,460 --> 03:19:27,280
We don't know.

1405
03:19:27,280 --> 03:19:28,120
I will take MIT.

1406
03:19:29,180 --> 03:19:30,300
And what these mean

1407
03:19:31,460 --> 03:19:33,620
and which one we should choose.

1408
03:19:33,620 --> 03:19:36,340
And also the fact that there are many more licenses

1409
03:19:36,340 --> 03:19:37,620
we will discuss next Tuesday

1410
03:19:37,620 --> 03:19:40,460
when we talk about social coding and licensing.

1411
03:19:40,460 --> 03:19:42,860
I will now go for MIT license.

1412
03:19:42,860 --> 03:19:46,300
but really good reflex to start immediately with a license

1413
03:19:46,300 --> 03:19:49,180
because then other people who understand

1414
03:19:49,180 --> 03:19:50,540
what this license means,

1415
03:19:50,540 --> 03:19:53,180
they know what they can do with my code.

1416
03:19:53,180 --> 03:19:54,820
What is this gitignore?

1417
03:19:54,820 --> 03:19:56,700
We will discuss this a little bit

1418
03:19:56,700 --> 03:19:59,940
in our discussion session later.

1419
03:19:59,940 --> 03:20:01,380
So I have a README, I have a license,

1420
03:20:01,380 --> 03:20:02,820
everything looks pretty good.

1421
03:20:03,700 --> 03:20:07,580
And I will create this, it's an almost empty repository.

1422
03:20:07,580 --> 03:20:11,020
I said almost because it's a repository

1423
03:20:11,020 --> 03:20:14,220
where there is a README, there is a license.

1424
03:20:16,300 --> 03:20:18,820
And it's initially committed,

1425
03:20:18,820 --> 03:20:21,420
so you have your first commit in there.

1426
03:20:21,420 --> 03:20:22,900
And I have my first commit, exactly.

1427
03:20:22,900 --> 03:20:26,140
So there is a first commit with this identifier.

1428
03:20:26,140 --> 03:20:29,420
So if I look at this timeline, the little clock,

1429
03:20:29,420 --> 03:20:30,460
there is now one commit.

1430
03:20:30,460 --> 03:20:33,460
And this commit was created by GitHub for me.

1431
03:20:36,220 --> 03:20:38,460
But now I want to upload my project

1432
03:20:38,460 --> 03:20:46,140
And really, the simplest way to do that is the plus symbol

1433
03:20:46,140 --> 03:20:50,160
here, which is upload files.

1434
03:20:50,160 --> 03:20:52,120
And I have already two files on my hard drive.

1435
03:20:57,020 --> 03:21:01,140
I can now choose them from my hard drive here.

1436
03:21:01,140 --> 03:21:02,980
You get a interface.

1437
03:21:02,980 --> 03:21:03,860
I'll get a dialogue.

1438
03:21:03,860 --> 03:21:07,180
I'll just move it away to not show any secret things.

1439
03:21:07,180 --> 03:21:10,700
but I will now navigate to the place on my hard drive.

1440
03:21:13,900 --> 03:21:14,900
And here I am.

1441
03:21:14,900 --> 03:21:17,340
So this is somewhere on my hard drive.

1442
03:21:17,340 --> 03:21:19,220
There is, here's the my project.

1443
03:21:19,220 --> 03:21:20,780
It's not a git repository yet.

1444
03:21:22,660 --> 03:21:25,340
And I have two Python files,

1445
03:21:25,340 --> 03:21:28,460
my script and some module, they do something.

1446
03:21:28,460 --> 03:21:33,180
And I, okay, this is maybe not so visible,

1447
03:21:33,180 --> 03:21:35,700
but I select both and I set, say, yes,

1448
03:21:35,700 --> 03:21:36,820
I want to upload both.

1449
03:21:37,180 --> 03:21:42,460
Here they are.

1450
03:21:42,460 --> 03:21:51,260
And now we need a commit message.

1451
03:21:51,260 --> 03:21:52,260
I don't know.

1452
03:21:52,260 --> 03:21:53,260
Yeah.

1453
03:21:53,260 --> 03:21:56,540
Select the text that says there.

1454
03:21:56,540 --> 03:21:57,540
Saving my...

1455
03:21:57,540 --> 03:21:58,940
It's maybe not the greatest commit message.

1456
03:21:58,940 --> 03:22:06,460
We will later discuss what makes a good commit message to scripts.

1457
03:22:06,460 --> 03:22:21,500
And then here more from now on. Now on I really want to use git. This is the initial version.

1458
03:22:21,500 --> 03:22:25,500
Should it go to main branch? Yes. So this will create a new commit and it will add these

1459
03:22:25,500 --> 03:22:26,500
two files.

1460
03:22:26,500 --> 03:22:31,220
Could you have created a branch there?

1461
03:22:31,220 --> 03:22:34,700
Yes, I could have.

1462
03:22:34,700 --> 03:22:39,260
Here they are on main and I will even, I will post, just for fun, I will post it in the

1463
03:22:39,260 --> 03:22:40,260
collaborative notes.

1464
03:22:40,260 --> 03:22:44,380
You can browse the thing that I just created.

1465
03:22:44,380 --> 03:22:46,660
It's down here.

1466
03:22:46,660 --> 03:22:53,940
So I mean, anybody can now browse it, critique it, improve it.

1467
03:22:53,940 --> 03:22:59,960
And that was really my goal.

1468
03:22:59,960 --> 03:23:03,960
one question about how would I go now from here on like if I want to now continue so I said that I

1469
03:23:03,960 --> 03:23:09,160
really want to continue using it what will be the next step and this is not part of the exercise but

1470
03:23:09,160 --> 03:23:15,960
what would be the next step from now on in this case the next step would be for me

1471
03:23:17,640 --> 03:23:25,240
to clone the repository to my hard drive again because then it is already a git repository

1472
03:23:25,240 --> 03:23:32,480
because this commit that I created, these two commits,

1473
03:23:32,480 --> 03:23:34,080
they now only exist on GitHub.

1474
03:23:34,080 --> 03:23:37,160
They are not on my hard drive.

1475
03:23:37,160 --> 03:23:39,120
So the next step would be to clone it.

1476
03:23:39,120 --> 03:23:42,080
Your hard drive is still just a bunch of files.

1477
03:23:42,080 --> 03:23:43,400
Yeah.

1478
03:23:43,400 --> 03:23:46,040
On my hard drive, it's still just two files.

1479
03:23:46,040 --> 03:23:47,240
They are not connected yet.

1480
03:23:50,000 --> 03:23:54,920
This is a little bit different if you choose different tracks.

1481
03:23:54,920 --> 03:24:01,240
So I don't want to now discuss every track individually to not be too confusing, but if you then

1482
03:24:01,240 --> 03:24:09,800
the path towards a Git repository out of a bunch of files is different depending on which track you use.

1483
03:24:09,800 --> 03:24:16,200
But at the end, we have a Git repository that is publicly accessible.

1484
03:24:16,200 --> 03:24:23,800
Later we will discuss whether having a Git repository here is enough for reproducibility,

1485
03:24:23,800 --> 03:24:28,840
So that is something for later, but this is already not too bad.

1486
03:24:28,840 --> 03:24:33,240
I also promised that I would show you how to delete it again if you want to get rid of it.

1487
03:24:33,240 --> 03:24:36,280
For this I will zoom out.

1488
03:24:37,000 --> 03:24:40,920
And I zoomed out so that I can see the settings on top right, this one,

1489
03:24:40,920 --> 03:24:46,280
the settings button. And under settings...

1490
03:24:46,440 --> 03:24:50,520
There's a dangerous zone. Yeah, so there are lots of objects, you can rename the

1491
03:24:50,520 --> 03:24:53,160
project, you can change the default branch, lots

1492
03:24:53,160 --> 03:24:57,640
of things you can you can do here but if i scroll down scroll down suddenly there are

1493
03:24:57,640 --> 03:25:07,280
some red options and the red options are you can i can make it now i can change it to private

1494
03:25:07,280 --> 03:25:13,240
or i can do some other things i can also delete it so this would be the way to get rid of

1495
03:25:13,240 --> 03:25:20,060
it again and this also is a good reminder for me to mention that also the exercise repositories

1496
03:25:20,060 --> 03:25:29,180
that we created yesterday, and repositories that we will collaborate on tomorrow.

1497
03:25:29,180 --> 03:25:32,060
Eventually we will also remove them, so you don't have to be worried that this is held

1498
03:25:32,060 --> 03:25:33,060
there forever.

1499
03:25:33,060 --> 03:25:37,060
These things will be deleted.

1500
03:25:37,060 --> 03:25:42,420
Yeah, good.

1501
03:25:42,420 --> 03:25:45,700
So exercise will be steps one, two, three.

1502
03:25:45,700 --> 03:25:50,060
And step one will be create an example project

1503
03:25:50,060 --> 03:25:55,940
with one or two files, make it a Git repository,

1504
03:25:55,940 --> 03:26:00,740
and make it available on GitHub or GitLab,

1505
03:26:00,740 --> 03:26:03,020
because the principle is really the same.

1506
03:26:03,020 --> 03:26:06,700
So if you rather work on your university GitLab,

1507
03:26:06,700 --> 03:26:08,940
then you can try that instead.

1508
03:26:08,940 --> 03:26:19,940
And we give 25 minutes, which is, for some it will be too long, but then ask us lots of questions.

1509
03:26:19,940 --> 03:26:23,940
But we really want to give people the time.

1510
03:26:23,940 --> 03:26:29,940
It would mean that we would be back at 40 minutes past the hour.

1511
03:26:29,940 --> 03:26:38,100
And then we can have a discussion about these steps, how to go from here, what are all the

1512
03:26:38,100 --> 03:26:45,580
other things that we missed.

1513
03:26:45,580 --> 03:26:54,740
So let me copy the exercise to the notes.

1514
03:26:54,740 --> 03:27:10,420
The exercise is this one, and it will be until 40 minutes past.

1515
03:27:15,820 --> 03:27:17,620
And we will add here more details and also

1516
03:27:17,620 --> 03:27:20,300
then, again, ask for feedback on how things are going.

1517
03:27:20,300 --> 03:27:30,100
Thanks so much for the questions, good luck with the exercise, and really looking forward

1518
03:27:30,100 --> 03:27:35,260
to discussing Git afterwards.

1519
03:27:35,260 --> 03:27:38,900
See you in 24 minutes.

1520
03:27:38,900 --> 03:27:40,020
Bye.

1521
03:27:50,300 --> 03:27:52,360
you

1522
03:28:20,300 --> 03:28:22,360
you

1523
03:28:50,300 --> 03:28:52,360
you

1524
03:29:20,300 --> 03:29:22,360
you

1525
03:29:50,300 --> 03:29:52,360
you

1526
03:30:20,300 --> 03:30:22,360
you

1527
03:30:50,300 --> 03:30:52,360
you

1528
03:31:20,300 --> 03:31:22,360
you

1529
03:31:50,300 --> 03:31:52,360
you

1530
03:32:20,300 --> 03:32:22,360
you

1531
03:32:50,300 --> 03:32:52,360
you

1532
03:33:20,300 --> 03:33:22,360
you

1533
03:33:50,300 --> 03:33:52,360
you

1534
03:34:20,300 --> 03:34:22,360
you

1535
03:34:50,300 --> 03:34:52,360
you

1536
03:35:20,300 --> 03:35:22,360
you

1537
03:35:50,300 --> 03:35:52,360
you

1538
03:36:20,300 --> 03:36:22,360
you

1539
03:36:50,300 --> 03:36:52,360
you

1540
03:37:20,300 --> 03:37:22,360
you

1541
03:37:50,300 --> 03:37:52,360
you

1542
03:38:20,300 --> 03:38:22,360
you

1543
03:38:50,300 --> 03:38:52,360
you

1544
03:39:20,300 --> 03:39:22,360
you

1545
03:39:50,300 --> 03:39:52,360
you

1546
03:40:20,300 --> 03:40:22,360
you

1547
03:40:50,300 --> 03:40:52,360
you

1548
03:41:20,300 --> 03:41:22,360
you

1549
03:41:50,300 --> 03:41:52,360
you

1550
03:42:20,300 --> 03:42:22,360
you

1551
03:42:50,300 --> 03:42:52,360
you

1552
03:43:20,300 --> 03:43:22,360
you

1553
03:43:50,300 --> 03:43:52,360
you

1554
03:44:20,300 --> 03:44:22,360
you

1555
03:44:50,300 --> 03:44:52,360
you

1556
03:45:20,300 --> 03:45:22,360
you

1557
03:45:50,300 --> 03:45:52,360
you

1558
03:46:20,300 --> 03:46:22,360
you

1559
03:46:50,300 --> 03:46:52,360
you

1560
03:47:20,300 --> 03:47:22,360
you

1561
03:47:50,300 --> 03:47:52,360
you

1562
03:48:20,300 --> 03:48:22,360
you

1563
03:48:50,300 --> 03:48:52,360
you

1564
03:49:20,300 --> 03:49:22,360
you

1565
03:49:50,300 --> 03:49:52,360
you

1566
03:50:20,300 --> 03:50:22,360
you

1567
03:50:50,300 --> 03:51:06,860
Tee dee dee, back from exercise

1568
03:51:06,860 --> 03:51:11,140
And thanks for letting us know how it went

1569
03:51:11,140 --> 03:51:13,340
Lots of thumbs up here, hopefully this was representative

1570
03:51:13,340 --> 03:51:18,980
For some of you this might have been too much time for this exercise

1571
03:51:18,980 --> 03:51:24,580
because it really depends which track people choose.

1572
03:51:24,580 --> 03:51:28,780
Some people got into trouble, but then asked about it, and we answered.

1573
03:51:28,780 --> 03:51:36,200
And I really like that we are on the path to break the 100 questions barrier.

1574
03:51:36,200 --> 03:51:41,020
And it's so cool that we make asking questions a good thing, it's not a problem, it's really

1575
03:51:41,020 --> 03:51:42,420
a feature.

1576
03:51:42,420 --> 03:51:45,900
So thanks a lot for that.

1577
03:51:45,900 --> 03:51:49,260
want to know, I will scroll down and make sure that you find where we are right now.

1578
03:51:50,780 --> 03:51:56,060
Let me paste in where I want to go. Sorry, before I go there, I want it.

1579
03:51:59,020 --> 03:52:05,740
I wanted to. This is where we were. I wanted to comment on something before we

1580
03:52:07,180 --> 03:52:14,860
move to more discussion format. And that is that yes, now we learned how to publish our work.

1581
03:52:15,900 --> 03:52:22,140
and my work is now here and the question that I wanted to ask all of us is to reflect a bit

1582
03:52:22,140 --> 03:52:27,740
whether this is really publishing and this is down here on

1583
03:52:30,220 --> 03:52:34,780
so there is question for all of us to think about is now is putting software on

1584
03:52:35,340 --> 03:52:41,740
github, gitlab, bitbucket does it is this equal to publishing software can I now

1585
03:52:41,740 --> 03:52:48,860
Is it now findable and accessible?

1586
03:52:48,860 --> 03:52:51,460
And the answer is that no.

1587
03:52:51,460 --> 03:52:56,620
But it's already, I think this is much better than 80% of computation research, which never

1588
03:52:56,620 --> 03:52:57,620
gets published anywhere.

1589
03:52:57,620 --> 03:53:03,020
So at least it's here, you can find it.

1590
03:53:03,020 --> 03:53:04,020
What is the problem?

1591
03:53:04,020 --> 03:53:07,380
The problem is, well, exactly what I was showing before the exercise.

1592
03:53:07,380 --> 03:53:14,540
I can now go on settings and delete it or I can remove my account and then it will not

1593
03:53:14,540 --> 03:53:17,540
be findable.

1594
03:53:17,540 --> 03:53:19,980
So this is a really good first step.

1595
03:53:19,980 --> 03:53:26,900
When you publish your work, we recommend to go one step further and to make the work persistent.

1596
03:53:26,900 --> 03:53:29,420
This here is not a persistent place.

1597
03:53:29,420 --> 03:53:36,660
And it's persistent, it's related to your namespace or account?

1598
03:53:36,660 --> 03:53:41,320
Yeah, so we will next week show you how you can make it persistent.

1599
03:53:41,320 --> 03:53:44,520
You will also make it citable at the same time.

1600
03:53:44,520 --> 03:53:49,460
You will get a digital object identifier and people can cite your code repository.

1601
03:53:49,460 --> 03:53:50,460
And then it's persistent.

1602
03:53:50,460 --> 03:53:52,500
I cannot delete it.

1603
03:53:52,500 --> 03:53:54,400
And it's then independent of this repository.

1604
03:53:54,400 --> 03:53:57,860
So I can delete the repository, I can delete my account.

1605
03:53:57,860 --> 03:54:06,160
But the place where I basically archive the code and a popular service is Zenodo.

1606
03:54:06,160 --> 03:54:09,440
It's only one of several services,

1607
03:54:09,440 --> 03:54:11,560
and this is what we will show you next week,

1608
03:54:12,760 --> 03:54:14,000
just as a little preview.

1609
03:54:16,500 --> 03:54:17,880
And depending on which track you used,

1610
03:54:17,880 --> 03:54:22,880
you have maybe now been exposed to terms like remote

1611
03:54:23,360 --> 03:54:24,560
and pushing and pulling.

1612
03:54:25,660 --> 03:54:26,760
So some people have seen it,

1613
03:54:26,760 --> 03:54:27,620
some people haven't seen it,

1614
03:54:27,620 --> 03:54:30,980
because it depends which interface you have used.

1615
03:54:31,920 --> 03:54:33,920
And here, I wanted to say that tomorrow

1616
03:54:33,920 --> 03:54:35,760
we will talk more about this.

1617
03:54:35,760 --> 03:54:39,640
we will use them for collaboration.

1618
03:54:39,640 --> 03:54:41,840
So push and pull is really a mechanism now

1619
03:54:41,840 --> 03:54:45,980
to synchronize changes between repositories.

1620
03:54:47,120 --> 03:54:48,480
And when we talk about remotes,

1621
03:54:48,480 --> 03:54:50,560
it's often a repository like GitHub,

1622
03:54:50,560 --> 03:54:55,560
but it could be, here we list some other popular services

1623
03:54:56,200 --> 03:55:00,960
that where people share their repositories.

1624
03:55:00,960 --> 03:55:02,680
But when you talk about push and pull,

1625
03:55:02,680 --> 03:55:05,120
then you're talking about a remote and a local.

1626
03:55:05,120 --> 03:55:10,000
So that's how you synchronize between your local copy

1627
03:55:10,000 --> 03:55:11,520
and the remote copy.

1628
03:55:11,520 --> 03:55:12,360
Yeah.

1629
03:55:14,280 --> 03:55:16,360
And then somebody asked, well, how do I get my changes

1630
03:55:16,360 --> 03:55:18,520
from this one computer that I have

1631
03:55:18,520 --> 03:55:21,320
to the other computer at the department?

1632
03:55:21,320 --> 03:55:23,280
And then you can do it also through the remote.

1633
03:55:23,280 --> 03:55:25,760
I could push my changes here to GitHub.

1634
03:55:26,680 --> 03:55:28,200
And then as soon as I'm in the other office,

1635
03:55:28,200 --> 03:55:30,560
I could pull the changes to the other computer.

1636
03:55:33,520 --> 03:55:34,360
Good.

1637
03:55:35,120 --> 03:55:39,720
And now I want to navigate you to a discussion session.

1638
03:55:39,720 --> 03:55:40,680
Let me find it.

1639
03:55:42,600 --> 03:55:45,960
And the question that we want to discuss now in 15 minutes

1640
03:55:47,400 --> 03:55:49,280
before taking a short break is,

1641
03:55:50,520 --> 03:55:52,320
we want to make it really practical.

1642
03:55:55,440 --> 03:55:57,080
So how much kit is really necessary?

1643
03:55:57,080 --> 03:55:58,640
We have seen a few things.

1644
03:55:58,640 --> 03:55:59,760
Where should we start?

1645
03:56:05,120 --> 03:56:12,200
This place here.

1646
03:56:12,200 --> 03:56:16,400
And as usual you can continue asking questions also about the previous section.

1647
03:56:16,400 --> 03:56:23,520
I will now navigate to this page.

1648
03:56:23,520 --> 03:56:30,480
And here we really want to give you some practical advice to start with.

1649
03:56:30,480 --> 03:56:34,920
The first one is for people who are on a command line.

1650
03:56:34,920 --> 03:56:39,920
So maybe I will not, you can, those of you who use the command line, you can read it.

1651
03:56:39,920 --> 03:56:45,720
Their git status is one of the most useful commands to, this is something I do all the

1652
03:56:45,720 --> 03:56:49,000
time to see what is happening.

1653
03:56:49,000 --> 03:56:54,800
But I think I want to navigate to the second question, and that is, what are some good

1654
03:56:54,800 --> 03:56:57,760
practices to write useful commit messages?

1655
03:56:57,760 --> 03:57:01,960
Because we have been writing commit messages, and some of them that I created, they were

1656
03:57:01,960 --> 03:57:03,320
less useful than others.

1657
03:57:05,120 --> 03:57:07,460
And here we want to show you some good examples.

1658
03:57:08,960 --> 03:57:13,240
So a useful commit message is one that summarizes the change

1659
03:57:14,600 --> 03:57:15,860
and provides context.

1660
03:57:18,020 --> 03:57:21,000
And sometimes the summary fits into one line.

1661
03:57:21,000 --> 03:57:23,040
So we try to summarize it in one line,

1662
03:57:23,040 --> 03:57:24,520
but if we need more context,

1663
03:57:27,340 --> 03:57:28,480
so here's an example.

1664
03:57:28,480 --> 03:57:33,480
If I create commit messages on the command line,

1665
03:57:34,560 --> 03:57:36,440
the first line is the summary.

1666
03:57:38,880 --> 03:57:41,160
And then if I need more context,

1667
03:57:41,160 --> 03:57:42,740
the convention is an empty space

1668
03:57:42,740 --> 03:57:43,840
and then more context here

1669
03:57:43,840 --> 03:57:45,920
where I can relate to a discussion that we had

1670
03:57:45,920 --> 03:57:49,980
and I can explain a little bit more why I did something.

1671
03:57:51,420 --> 03:57:53,280
I emphasize that the first line is important

1672
03:57:53,280 --> 03:57:55,600
because when I navigate,

1673
03:57:55,600 --> 03:57:58,380
when I browse repositories on the web,

1674
03:58:00,080 --> 03:58:02,180
then the first line is the one that I see.

1675
03:58:04,840 --> 03:58:05,720
This is the first line.

1676
03:58:05,720 --> 03:58:08,500
So it's good if that one gives a good summary.

1677
03:58:14,120 --> 03:58:14,960
And-

1678
03:58:14,960 --> 03:58:17,160
Reference to one, two, three there

1679
03:58:17,160 --> 03:58:19,760
about the bottom of the commit message,

1680
03:58:19,760 --> 03:58:23,560
that's an issue, I guess.

1681
03:58:23,560 --> 03:58:27,200
So this could refer to an issue with the number 123

1682
03:58:28,960 --> 03:58:32,040
where we could read more about this change.

1683
03:58:32,040 --> 03:58:33,960
Maybe this was something that I suggested somewhere

1684
03:58:33,960 --> 03:58:36,200
and then we had a discussion, is this a good idea?

1685
03:58:36,200 --> 03:58:38,560
At some point we realized, yes, this is a good idea.

1686
03:58:38,560 --> 03:58:41,240
And then half a year later, I come back with a commit

1687
03:58:42,160 --> 03:58:46,560
that implements this and relates back to why I did this

1688
03:58:46,560 --> 03:58:47,920
and why we did it this way.

1689
03:58:47,920 --> 03:58:56,080
And the why is sometimes, why something changed is more important than what has changed.

1690
03:58:56,080 --> 03:59:04,120
So it's good if, good if the commit message explains why, the motivation for this change.

1691
03:59:04,120 --> 03:59:05,120
And this is because...

1692
03:59:05,120 --> 03:59:10,880
The what you have changed is you can see from the log or from the page or...

1693
03:59:10,880 --> 03:59:15,640
Because here if I can click on the commit that I created earlier, what did I change?

1694
03:59:15,640 --> 03:59:17,640
Well, here it is.

1695
03:59:17,640 --> 03:59:18,560
This is what I changed.

1696
03:59:18,560 --> 03:59:20,920
So I can always find out what I did,

1697
03:59:20,920 --> 03:59:23,920
but it might be more difficult to find out why did I do this?

1698
03:59:25,240 --> 03:59:26,180
So that's why.

1699
03:59:26,180 --> 03:59:27,520
Why?

1700
03:59:27,520 --> 03:59:29,820
You can cross-reference issues, pull requests.

1701
03:59:31,300 --> 03:59:35,160
There are some humorous bad examples.

1702
03:59:35,160 --> 03:59:38,080
So somebody compiled just some funny bad examples

1703
03:59:38,080 --> 03:59:40,280
from other repositories.

1704
03:59:41,600 --> 03:59:43,160
Commit messages in English.

1705
03:59:43,160 --> 03:59:49,620
That will be understood 15 years from now by somebody else, because many projects that

1706
03:59:49,620 --> 03:59:55,900
really became big and popular started as a little project just for me.

1707
03:59:55,900 --> 04:00:02,580
You can create commits with multiple authors, because then both or multiple authors get

1708
04:00:02,580 --> 04:00:06,140
credited for this.

1709
04:00:06,140 --> 04:00:12,340
And here we also link to some blog posts that discuss how do good commit stages look like.

1710
04:00:12,340 --> 04:00:22,580
One thing that I like to do sometimes, and maybe that's interesting, is that you could

1711
04:00:22,580 --> 04:00:27,820
browse your favorite project, and maybe your favorite project library that you use.

1712
04:00:27,820 --> 04:00:30,700
Maybe it is listed here, maybe it is not.

1713
04:00:30,700 --> 04:00:40,580
So these are some popular libraries that I used in the Python world or for R development.

1714
04:00:40,580 --> 04:00:44,060
You could also browse how do they write commit messages.

1715
04:00:47,140 --> 04:00:50,060
And you can even compare that with release notes.

1716
04:00:52,420 --> 04:00:54,120
Of course, these are big projects,

1717
04:00:56,340 --> 04:00:58,100
so this can be a good inspiration

1718
04:00:58,100 --> 04:01:00,560
to see how do other projects do it,

1719
04:01:01,580 --> 04:01:05,520
but also don't let the perfect be the enemy of good enough.

1720
04:01:07,700 --> 04:01:10,100
Bad commit messages are better than no commit,

1721
04:01:10,100 --> 04:01:18,180
commits at all so over time you can then try to improve things don't try to make it too perfect

1722
04:01:20,420 --> 04:01:27,300
important is get started and try to commit frequently and then yeah develop from there

1723
04:01:30,980 --> 04:01:37,940
good next question um we learned that we can have branches and often it starts with the main branch

1724
04:01:37,940 --> 04:01:43,940
Or master branch, depends how you create a git repository.

1725
04:01:43,940 --> 04:01:45,380
So should we have just this one branch?

1726
04:01:45,380 --> 04:01:48,940
Should we create lots of branches?

1727
04:01:48,940 --> 04:01:52,940
Do you have a branching philosophy?

1728
04:01:52,940 --> 04:01:56,100
Yes.

1729
04:01:56,100 --> 04:02:02,500
So for me, the philosophy is, if it's something small, simple, just for me, there is only

1730
04:02:02,500 --> 04:02:05,580
one branch.

1731
04:02:05,580 --> 04:02:10,380
If sometimes I need branches, if I want to experiment, but then I try to make them short

1732
04:02:10,380 --> 04:02:11,760
lift.

1733
04:02:11,760 --> 04:02:14,780
So for me, there is only one long live branch and that's good.

1734
04:02:14,780 --> 04:02:17,020
That one is called main.

1735
04:02:17,020 --> 04:02:24,300
Every other branch should be as short lived as possible.

1736
04:02:24,300 --> 04:02:32,220
So when it's challenging to from time sometimes that you get out of sync, really, because

1737
04:02:32,220 --> 04:02:34,260
because you keep a branch too long.

1738
04:02:37,380 --> 04:02:40,660
Oh, how do you typically approach like a new project?

1739
04:02:40,660 --> 04:02:42,780
Do you start with one branch, many branches?

1740
04:02:42,780 --> 04:02:46,620
Yeah, I create a branch per idea almost.

1741
04:02:48,500 --> 04:02:51,580
I've created typically very many branches.

1742
04:02:52,820 --> 04:02:55,740
I don't always keep them shortly,

1743
04:02:55,740 --> 04:02:58,740
which means they get kind of stalled after a while.

1744
04:03:02,220 --> 04:03:06,940
Question 82, what is the difference between branch and tag?

1745
04:03:06,940 --> 04:03:13,580
A branch can change, and a tag ideally never changes.

1746
04:03:13,580 --> 04:03:21,820
So tag is there, it stays next to the commit, it will not move, it marks a milestone.

1747
04:03:21,820 --> 04:03:31,580
I could mark a milestone also with a branch, but then I would have to be very disciplined to never change that.

1748
04:03:31,580 --> 04:03:43,180
If we are few people, it's okay if things break sometimes, but it's good to implement code review, somebody else looking over my changes.

1749
04:03:43,180 --> 04:03:56,580
So personally, if I'm like two people, three people, more people, we start using branches and we review them so that we know what's going on, and more about that tomorrow.

1750
04:03:56,580 --> 04:04:01,220
I think the next one is, yeah, it's not only for the command line.

1751
04:04:01,220 --> 04:04:03,940
So staging and committing can show up also in VS Code.

1752
04:04:05,300 --> 04:04:07,780
So when you create a commit, you can create it in one step,

1753
04:04:08,420 --> 04:04:09,940
or you can create it in two steps.

1754
04:04:11,220 --> 04:04:13,060
And the two steps would be stage it first,

1755
04:04:14,020 --> 04:04:16,660
look at what you have staged, and then commit it.

1756
04:04:16,660 --> 04:04:18,420
It's a way to prepare a commit and

1757
04:04:21,220 --> 04:04:24,260
kind of check it before you really make the commit.

1758
04:04:24,260 --> 04:04:33,140
it. This helps me personally to prepare commits so that I don't commit unrelated changes.

1759
04:04:33,140 --> 04:04:36,640
But also here my recommendation would be not to worry about it too much. At the beginning

1760
04:04:36,640 --> 04:04:45,180
it's good to make a lot of possibly not ideal commits. It's not a problem. And later you

1761
04:04:45,180 --> 04:04:51,700
You can then explore a bit the staging and it will help you creating more, well, self-contained

1762
04:04:51,700 --> 04:04:57,780
commits.

1763
04:04:57,780 --> 04:04:58,780
How large should I commit be?

1764
04:04:58,780 --> 04:05:04,740
Should I commit at the end of the day, at the end of the week, or every five minutes?

1765
04:05:04,740 --> 04:05:07,980
I often commit at the end of the day.

1766
04:05:07,980 --> 04:05:11,100
Something that I would not like to lose.

1767
04:05:11,100 --> 04:05:13,580
Better to many than to few.

1768
04:05:13,580 --> 04:05:18,580
I think a good size of a commit would be something that,

1769
04:05:19,420 --> 04:05:20,740
like, if you want to undo it,

1770
04:05:20,740 --> 04:05:22,980
would be a good size of undoing.

1771
04:05:24,420 --> 04:05:27,540
And this, again, not putting unrelated things

1772
04:05:27,540 --> 04:05:28,380
into the same commit,

1773
04:05:28,380 --> 04:05:30,020
because then if I want to undo the one thing

1774
04:05:30,020 --> 04:05:30,940
without the other,

1775
04:05:32,920 --> 04:05:34,340
it's possible to split commits,

1776
04:05:34,340 --> 04:05:37,620
but it's really much easier to combine them.

1777
04:05:37,620 --> 04:05:39,160
So make many commits.

1778
04:05:40,140 --> 04:05:40,980
Start simple.

1779
04:05:41,940 --> 04:05:42,980
Grow your project.

1780
04:05:43,580 --> 04:05:49,620
I think the 83 question is very interesting.

1781
04:05:49,620 --> 04:05:53,380
Is it a good practice to commit broken code just to save it?

1782
04:05:53,380 --> 04:05:54,900
So what would I do at the end of the day?

1783
04:05:54,900 --> 04:05:55,900
And it's not working yet.

1784
04:05:55,900 --> 04:05:58,900
It's almost working, but I still want to save it.

1785
04:05:58,900 --> 04:06:05,300
Well, I would maybe put it on a branch, create a branch, commit it there, then it cannot

1786
04:06:05,300 --> 04:06:06,300
get lost.

1787
04:06:06,300 --> 04:06:09,420
And then next day I can pick up from there.

1788
04:06:09,420 --> 04:06:16,980
I would rather stash it. We don't go through stashing but stashing is a mechanism for saving

1789
04:06:16,980 --> 04:06:23,540
work that you have done. I use stashing I want to but stashing would

1790
04:06:23,540 --> 04:06:29,220
only then stay still on my like laptop or at least with committing putting it on a branch

1791
04:06:29,220 --> 04:06:36,980
I can like back it up and sometimes I start you so you can stash away some work sometimes

1792
04:06:36,980 --> 04:06:43,380
I forget that I stashed it and then I removed the repository, so I would maybe create a

1793
04:06:43,380 --> 04:06:44,380
branch and commit it.

1794
04:06:44,380 --> 04:06:55,220
But it's nice that there are so many different ways of doing it.

1795
04:06:55,220 --> 04:07:00,700
How about we take a 10-minute break, because then we can think about more questions that

1796
04:07:00,700 --> 04:07:01,700
come up.

1797
04:07:01,700 --> 04:07:09,460
will, we also have more discussion for you on typical things to avoid. So some typical

1798
04:07:09,460 --> 04:07:15,660
pitfalls when you start working with Git or GitHub. So we will discuss that after the

1799
04:07:15,660 --> 04:07:23,820
break. And you can then think about more questions and add them. So the rest of the rest of today,

1800
04:07:23,820 --> 04:07:27,140
the remaining half an hour will really be discussion. And maybe we'll show something

1801
04:07:27,140 --> 04:07:33,580
if somebody asks to demonstrate a step or two.

1802
04:07:33,580 --> 04:07:40,100
We also have a bonus demo that we will maybe show some feature that we didn't show yet.

1803
04:07:40,100 --> 04:07:41,100
So stay tuned.

1804
04:07:41,100 --> 04:07:42,940
See you in 10 minutes.

1805
04:07:42,940 --> 04:07:51,260
And we return at 7 minutes past the hour.

1806
04:07:51,260 --> 04:07:52,260
See you there.

1807
04:07:52,260 --> 04:07:55,540
Keep the questions coming, but also take a break.

1808
04:07:55,540 --> 04:07:56,540
Bye.

1809
04:07:56,540 --> 04:07:57,040
Bye.

1810
04:08:26,540 --> 04:08:28,600
you

1811
04:08:56,540 --> 04:08:58,600
you

1812
04:09:26,540 --> 04:09:28,600
you

1813
04:09:56,540 --> 04:09:58,600
you

1814
04:10:26,540 --> 04:10:28,600
you

1815
04:10:56,540 --> 04:10:58,600
you

1816
04:11:26,540 --> 04:11:28,600
you

1817
04:11:56,540 --> 04:11:58,600
you

1818
04:12:26,540 --> 04:12:28,600
you

1819
04:12:56,540 --> 04:12:58,600
you

1820
04:13:26,540 --> 04:13:28,600
you

1821
04:13:56,540 --> 04:13:58,600
you

1822
04:14:26,540 --> 04:14:28,600
you

1823
04:14:56,540 --> 04:14:58,600
you

1824
04:15:26,540 --> 04:15:28,600
you

1825
04:15:56,540 --> 04:15:58,600
you

1826
04:16:26,540 --> 04:16:28,600
you

1827
04:16:56,540 --> 04:16:58,600
you

1828
04:17:26,540 --> 04:17:56,040
And we are back, 20 minutes left in this session and we will use it for to really discuss and

1829
04:17:56,040 --> 04:18:01,760
clarify some of the really good questions that we got.

1830
04:18:01,760 --> 04:18:03,240
And we are trying something new.

1831
04:18:03,240 --> 04:18:09,120
So my colleagues are helping me to mark some questions with this little microphone emoji,

1832
04:18:09,120 --> 04:18:13,440
because that makes it easier for us to see here which questions we should really discuss

1833
04:18:13,440 --> 04:18:22,640
here on stream, because they are of really general interest, general understanding.

1834
04:18:22,640 --> 04:18:23,640
And we will then...

1835
04:18:23,640 --> 04:18:25,200
So I want to answer a couple of those.

1836
04:18:25,200 --> 04:18:28,880
We will then move on to also discussing

1837
04:18:28,880 --> 04:18:31,240
some typical pitfalls to avoid.

1838
04:18:31,240 --> 04:18:32,960
But maybe let's start with the question 84.

1839
04:18:32,960 --> 04:18:35,840
And the question 84 is, can we explain again

1840
04:18:35,840 --> 04:18:40,040
what is the difference between Git and GitHub or GitLab?

1841
04:18:42,920 --> 04:18:44,640
And I will, to answer this question,

1842
04:18:44,640 --> 04:18:47,540
I will open this example project

1843
04:18:47,540 --> 04:18:49,640
that I published a little bit earlier.

1844
04:18:49,640 --> 04:18:53,380
I will open it both on my computer,

1845
04:18:53,380 --> 04:18:56,860
bottom half of the screen and on GitHub.

1846
04:18:58,620 --> 04:19:00,580
And really the difference is that,

1847
04:19:00,580 --> 04:19:05,580
so on my local Git repository, I will do git log,

1848
04:19:06,980 --> 04:19:10,420
which shows me that there are two commits

1849
04:19:12,160 --> 04:19:14,040
and I can browse them.

1850
04:19:14,040 --> 04:19:19,040
And it's the same commits that I see here on GitHub.

1851
04:19:20,700 --> 04:19:21,540
So what is Git?

1852
04:19:21,540 --> 04:19:22,820
Git is a tool.

1853
04:19:22,820 --> 04:19:27,340
It's a program which can do this,

1854
04:19:27,340 --> 04:19:28,180
which can do this,

1855
04:19:28,180 --> 04:19:31,860
which can create snapshots with metadata,

1856
04:19:31,860 --> 04:19:32,980
which can create branches,

1857
04:19:32,980 --> 04:19:34,520
which can merge branches,

1858
04:19:35,620 --> 04:19:38,760
and where I can synchronize changes between repositories.

1859
04:19:40,200 --> 04:19:41,300
There is no account,

1860
04:19:42,260 --> 04:19:43,320
but there is a configuration.

1861
04:19:43,320 --> 04:19:46,340
So somewhere I have configured my Git

1862
04:19:46,340 --> 04:19:50,140
to use this as my email address,

1863
04:19:50,140 --> 04:19:51,220
and this is my name.

1864
04:19:52,180 --> 04:19:55,620
And this will end up in these commit messages.

1865
04:19:55,620 --> 04:19:57,140
And in our material, we also show you

1866
04:19:57,140 --> 04:20:00,740
how we can change this configuration.

1867
04:20:02,540 --> 04:20:03,380
Now, what is GitHub?

1868
04:20:03,380 --> 04:20:08,180
GitHub is, so the same thing is on GitHub.

1869
04:20:08,180 --> 04:20:12,000
So GitHub is, there is also the same Git repositories there.

1870
04:20:13,820 --> 04:20:18,820
If I do, so now I have my files,

1871
04:20:18,820 --> 04:20:23,320
So now I have my files, readme, license, this is the Git repository.

1872
04:20:23,320 --> 04:20:26,120
This is where the commits are stored.

1873
04:20:26,120 --> 04:20:30,640
And the same .git is somewhere there also on GitHub.

1874
04:20:30,640 --> 04:20:31,960
But GitHub has a little bit more.

1875
04:20:31,960 --> 04:20:41,720
It has also, not only it allows me to browse the commits online, it also implements issues

1876
04:20:41,720 --> 04:20:46,240
and discussions and pull requests and some extra automation.

1877
04:20:46,240 --> 04:20:48,840
we will come back to it next week.

1878
04:20:48,840 --> 04:20:53,480
So you can look at it as something around Git.

1879
04:20:55,360 --> 04:20:58,260
Git and some extra features and web interface.

1880
04:20:59,560 --> 04:21:01,880
And really the same thing I could say about GitLab.

1881
04:21:01,880 --> 04:21:04,520
It's also a web interface to a Git repository

1882
04:21:04,520 --> 04:21:06,640
with some extra features like discussions,

1883
04:21:06,640 --> 04:21:09,540
issues, and some more metadata.

1884
04:21:10,720 --> 04:21:15,200
So it's a kind of project support around a project.

1885
04:21:15,200 --> 04:21:19,240
Yeah, and it's a really good question

1886
04:21:19,240 --> 04:21:24,260
because we will also see that it's very, very easy

1887
04:21:24,260 --> 04:21:27,220
to move Git repositories from one place to another.

1888
04:21:28,440 --> 04:21:30,400
But one thing that is a little bit more difficult to move

1889
04:21:30,400 --> 04:21:32,240
are then all these discussions,

1890
04:21:32,240 --> 04:21:35,460
the project around it, the issues, the discussions.

1891
04:21:35,460 --> 04:21:37,360
And that's why it's important within your project

1892
04:21:37,360 --> 04:21:40,000
that you have a discussion and you decide,

1893
04:21:40,000 --> 04:21:41,340
well, do we want to have our project

1894
04:21:41,340 --> 04:21:43,560
on our university server

1895
04:21:43,560 --> 04:21:46,480
or do we want to have it on the public GitHub

1896
04:21:46,480 --> 04:21:48,920
or on my own computer?

1897
04:21:52,920 --> 04:21:55,440
So hopefully this was an answer.

1898
04:21:55,440 --> 04:21:57,560
Let's see if we have more microphones here.

1899
04:22:02,520 --> 04:22:04,800
I think the same question was later.

1900
04:22:04,800 --> 04:22:06,080
86.

1901
04:22:06,080 --> 04:22:06,920
Yeah.

1902
04:22:06,920 --> 04:22:09,840
Git versus GitHub, GitLab, we have clarified it.

1903
04:22:09,840 --> 04:22:11,400
There was one at 78.

1904
04:22:14,120 --> 04:22:18,440
78 here. What is the proper way to delete a git folder?

1905
04:22:27,640 --> 04:22:33,800
The way I would do it is, I would be a little bit worried. If I delete this part here, then

1906
04:22:34,840 --> 04:22:41,000
my local git repository is deleted, means the history is gone. The files are still there.

1907
04:22:41,000 --> 04:22:44,200
The way I would do it, I would maybe not delete it, I would rename it.

1908
04:22:47,160 --> 04:22:53,240
And I rename it to Git report to be deleted.

1909
04:22:56,760 --> 04:22:59,320
Because then if I realize that this was a mistake, I can rename it back.

1910
04:23:00,120 --> 04:23:03,960
And if I now try to do a Git log, Git doesn't see it now anymore.

1911
04:23:04,520 --> 04:23:06,920
Git doesn't think that, well, this is not a Git repository.

1912
04:23:06,920 --> 04:23:11,160
I don't, there are a couple of paths here but, and if I rename it back,

1913
04:23:13,240 --> 04:23:16,440
so this is how I would do it, you know, like safely.

1914
04:23:18,280 --> 04:23:23,000
And then as soon as I know that this is really what I wanted to delete, then you can delete it.

1915
04:23:32,680 --> 04:23:34,600
I will come back to some of the microphone questions.

1916
04:23:34,600 --> 04:23:49,400
I wanted to navigate us to the section what to avoid typical problems, what are they?

1917
04:23:49,400 --> 04:24:02,760
And so that you can find the section, I will also paste it here, what to avoid.

1918
04:24:02,760 --> 04:24:07,800
The first one we talked about, so it's better to, in the commit messages,

1919
04:24:07,800 --> 04:24:11,480
it's better to explain why something has been done rather than what exactly has been done,

1920
04:24:11,480 --> 04:24:15,640
because that is, you can always find out from the change.

1921
04:24:19,160 --> 04:24:22,840
This one here we didn't talk about at all, committing generated files.

1922
04:24:24,920 --> 04:24:30,920
This could be generated images, it could be if you run Python,

1923
04:24:32,760 --> 04:24:34,760
Maybe you have seen a directory called underscore,

1924
04:24:34,760 --> 04:24:36,960
underscore, pycache, underscore, underscore.

1925
04:24:39,320 --> 04:24:43,160
Files that are easily and quickly generated by your scripts.

1926
04:24:43,160 --> 04:24:46,040
PDFs, if you're right, not LaTeX.

1927
04:24:47,200 --> 04:24:49,000
Yeah, so there are some files that maybe you don't want

1928
04:24:49,000 --> 04:24:50,460
to add to a git repository.

1929
04:24:51,560 --> 04:24:53,960
Or it could be something that contains passwords.

1930
04:24:53,960 --> 04:24:55,440
Definitely, I don't want it.

1931
04:24:55,440 --> 04:24:59,380
It should not go into a git repository, sensitive things.

1932
04:24:59,380 --> 04:25:14,220
Then you can list the file names or the directories or the pattern in a file called .gitignore

1933
04:25:14,220 --> 04:25:18,200
and here you can read more about them and you can even see some templates.

1934
04:25:18,200 --> 04:25:23,500
So if you create such a file and you list whatever you want Git to ignore, it will ignore

1935
04:25:23,500 --> 04:25:29,300
it, it will not see it, you cannot accidentally commit it.

1936
04:25:29,300 --> 04:25:31,660
So anything that is sensitive or generated.

1937
04:25:31,660 --> 04:25:33,860
The gitignore templates are very good.

1938
04:25:33,860 --> 04:25:38,260
They are for different languages, C++ and Python.

1939
04:25:38,260 --> 04:25:39,100
Yeah.

1940
04:25:40,580 --> 04:25:41,780
So they are linked here.

1941
04:25:43,460 --> 04:25:44,980
Huge files.

1942
04:25:44,980 --> 04:25:48,340
Git is really good at tracking text files,

1943
04:25:48,340 --> 04:25:50,180
code, scripts.

1944
04:25:52,060 --> 04:25:57,060
If I wanted to commit big movies, gigantic images,

1945
04:25:57,060 --> 04:26:01,260
big binary files, then Git is not the right place.

1946
04:26:04,100 --> 04:26:05,140
And sometimes in your code,

1947
04:26:05,140 --> 04:26:07,260
you need to use data that is gigantic,

1948
04:26:07,260 --> 04:26:10,140
but then you can keep the data somewhere else,

1949
04:26:10,140 --> 04:26:11,740
on a data repository place,

1950
04:26:11,740 --> 04:26:13,940
and then refer to it from the Git repository.

1951
04:26:15,700 --> 04:26:18,540
Also good to know that if I accidentally add something

1952
04:26:19,740 --> 04:26:23,180
and commit it, and later I remove it,

1953
04:26:24,580 --> 04:26:26,140
I don't remove it from the history.

1954
04:26:26,140 --> 04:26:28,540
So if I accidentally added some passwords in the history

1955
04:26:28,540 --> 04:26:31,980
and later I realized it was a mistake and I remove it,

1956
04:26:32,820 --> 04:26:34,580
I can still find it in the history.

1957
04:26:36,180 --> 04:26:39,000
It is possible to also remove commits from the history.

1958
04:26:40,100 --> 04:26:42,860
Just that you know that this can be an issue,

1959
04:26:42,860 --> 04:26:43,840
it can be fixed.

1960
04:26:46,340 --> 04:26:49,140
But the idea of Git is that we don't edit,

1961
04:26:49,980 --> 04:26:51,900
accidentally edit commits in the past.

1962
04:26:51,900 --> 04:27:03,140
I think we talked about this before, yeah, it's good not to postpone commits until they

1963
04:27:03,140 --> 04:27:04,140
will get beautiful.

1964
04:27:04,140 --> 04:27:08,500
It's better to just commit them maybe on a side branch.

1965
04:27:08,500 --> 04:27:13,280
Committing unrelated things together is at some point a problem.

1966
04:27:13,280 --> 04:27:19,500
It's okay at the beginning.

1967
04:27:19,500 --> 04:27:20,740
Back to questions.

1968
04:27:24,060 --> 04:27:24,900
Oh, here we are.

1969
04:27:24,900 --> 04:27:25,820
Sorry, I'm in the wrong place.

1970
04:27:25,820 --> 04:27:26,660
What to avoid?

1971
04:27:34,540 --> 04:27:36,260
Yeah, generated files, for instance,

1972
04:27:36,260 --> 04:27:37,180
when you work with Conda,

1973
04:27:37,180 --> 04:27:39,460
so then the thing that should be in the repository

1974
04:27:39,460 --> 04:27:42,120
is the file that describes the environment.

1975
04:27:45,140 --> 04:27:47,940
Files like environment.yaml, but the environment itself.

1976
04:27:47,940 --> 04:27:54,940
So the installed packages, they would then not, I should ignore those.

1977
04:27:54,940 --> 04:28:04,860
There was some other microphone thing that we should talk about in, on stream, which

1978
04:28:04,860 --> 04:28:09,660
is discuss a little bit again, the difference between GitHub, VS Code, command line tracks,

1979
04:28:09,660 --> 04:28:16,540
how they relate, where to start.

1980
04:28:16,540 --> 04:28:22,940
So small, easy things you can do directly on GitHub.

1981
04:28:22,940 --> 04:28:29,340
Anything like having discussions, reviewing code, can all be done on GitHub.

1982
04:28:29,340 --> 04:28:33,700
As soon as I want to do something more than just a minimal change, I personally like to

1983
04:28:33,700 --> 04:28:39,040
work locally first, reviewing the changes locally, then I publish them.

1984
04:28:39,040 --> 04:28:43,860
And I think then people will have to make a choice between an editor, and there are

1985
04:28:43,860 --> 04:28:48,420
many, or using the command line.

1986
04:28:48,420 --> 04:28:53,900
And also command line, there are actually several to choose from, but there is then

1987
04:28:53,900 --> 04:28:57,820
one command line git.

1988
04:28:57,820 --> 04:29:04,420
It is also possible, it's possible to do, to create issues and pull requests and code

1989
04:29:04,420 --> 04:29:05,420
review.

1990
04:29:05,420 --> 04:29:07,180
It's possible to do also that from the command line.

1991
04:29:07,180 --> 04:29:13,820
We didn't show that, but there are, you can do almost everything from the command line.

1992
04:29:13,820 --> 04:29:22,760
For a beginner, I think VS Code is an easier starting point than the command line.

1993
04:29:22,760 --> 04:29:27,960
But if you use a different editor, for instance, Spyder or RStudio, there is no reason to move

1994
04:29:27,960 --> 04:29:30,160
out of it.

1995
04:29:30,160 --> 04:29:35,720
We didn't show how to integrate RStudio with...

1996
04:29:35,720 --> 04:29:42,520
We didn't emphasize how to integrate RStudio with GitHub, but it's possible, and you can

1997
04:29:42,520 --> 04:29:47,080
and stay in the editor environment that you typically work in and chances are high that

1998
04:29:47,080 --> 04:29:50,880
you can use Git from that environment.

1999
04:29:50,880 --> 04:30:00,520
Yes, we chose to work mostly on GitHub because we wanted you to see the concepts and hopefully

2000
04:30:00,520 --> 04:30:12,000
understand the concepts, but then you can choose your favorite interface to it.

2001
04:30:12,000 --> 04:30:18,640
sure we will have time for this one. We have now 10 minutes left. What I also want to do to not forget

2002
04:30:20,560 --> 04:30:24,320
is to use the remaining time to give us feedback,

2003
04:30:26,560 --> 04:30:34,560
tell us what went well and what should be improved. Same as yesterday, this was really valuable to us.

2004
04:30:34,560 --> 04:30:39,520
us.

2005
04:30:39,520 --> 04:30:44,520
Maybe we can use the remaining time for that feedback and give an outlook on what to expect

2006
04:30:44,520 --> 04:30:45,520
tomorrow.

2007
04:30:45,520 --> 04:30:51,520
Or is there a microphone emoji that I missed that we should trace to the stream?

2008
04:31:05,520 --> 04:31:07,520
Just browsing questions.

2009
04:31:15,520 --> 04:31:28,520
So, while people fill out the feedback, maybe let's have a look on what to expect for tomorrow.

2010
04:31:28,520 --> 04:31:33,120
I will try to find...

2011
04:31:33,120 --> 04:31:38,800
Yeah, so what do people need to prepare for tomorrow?

2012
04:31:38,800 --> 04:31:50,880
is so we are just concluding day two tomorrow we will do collaboration so we will take

2013
04:31:50,880 --> 04:31:58,160
distributed version control yeah we will take this really to the next level

2014
04:31:58,160 --> 04:32:04,420
work together again on cooking recipes we will call we will learn how to collaborate

2015
04:32:04,420 --> 04:32:06,860
within the same repository, across repositories,

2016
04:32:08,300 --> 04:32:11,100
some of the building blocks we already know from day one.

2017
04:32:13,540 --> 04:32:15,260
Here, the focus will be more about

2018
04:32:16,460 --> 04:32:17,700
how to do the code review

2019
04:32:19,340 --> 04:32:21,860
and a closer look at some of the mechanics

2020
04:32:21,860 --> 04:32:23,260
that we just brushed over.

2021
04:32:26,300 --> 04:32:27,800
The thing to prepare is,

2022
04:32:28,940 --> 04:32:33,420
so it's possible to do all of tomorrow purely on GitHub.

2023
04:32:34,420 --> 04:32:40,740
So if you don't have an editor set up or command line set up is not a problem, you can do everything

2024
04:32:40,740 --> 04:32:46,460
on GitHub tomorrow.

2025
04:32:46,460 --> 04:32:52,580
But what is important to set up is that since we want to do collaboration, those of you

2026
04:32:52,580 --> 04:32:59,100
who are participating as a team, as a classroom or a team, you can work together within the

2027
04:32:59,100 --> 04:33:09,300
same exercise repository and you will have the chance to set it up tomorrow.

2028
04:33:09,300 --> 04:33:15,700
But those of you who are participating on your own and would like to practice collaboration

2029
04:33:15,700 --> 04:33:21,940
and collaborate with others and collaborate with us on stream, you can.

2030
04:33:21,940 --> 04:33:23,980
And hopefully you got an email about it.

2031
04:33:23,980 --> 04:33:32,180
So you got an email yesterday, there is, you will need to do one relatively simple thing

2032
04:33:32,180 --> 04:33:39,180
and this is to tell us, I don't know what I can open the, yeah, actually I can open

2033
04:33:39,180 --> 04:33:45,380
the email because I can show you, one thing I can show you is that on the workshop page

2034
04:33:45,380 --> 04:33:53,500
on top right is the tab communication and there you can find emails that we have been

2035
04:33:53,500 --> 04:33:59,180
sending out. And we do this because we know that there are participants who join later.

2036
04:33:59,180 --> 04:34:04,940
And the one that we sent out yesterday is this one. Preparation for day three. I will

2037
04:34:04,940 --> 04:34:12,500
navigate to it. Okay, there's something wrong with the navigation, but it's down here. So

2038
04:34:12,500 --> 04:34:16,700
if you if you are on your own, but you would like to collaborate with others and with us

2039
04:34:16,700 --> 04:34:26,020
on stream, you need to do this relatively simple step and then we can add you to our

2040
04:34:26,020 --> 04:34:32,140
exercise repository that we will use tomorrow.

2041
04:34:32,140 --> 04:34:49,140
So that's important to prepare.

2042
04:34:49,140 --> 04:34:59,140
Okay so, yeah, I, is what I wrote under the news here accurate then?

2043
04:34:59,140 --> 04:35:01,140
If you scroll up a bit.

2044
04:35:01,140 --> 04:35:19,140
Oh, yeah, just looking at the question and feedback,

2045
04:35:19,140 --> 04:35:21,380
something we can already comment on right now.

2046
04:35:26,020 --> 04:35:27,700
Yeah, I'll get bisect, we didn't have time.

2047
04:35:31,140 --> 04:35:34,640
But I think we have some past recordings on it, don't we?

2048
04:35:34,640 --> 04:35:35,640
Yeah.

2049
04:35:35,640 --> 04:35:42,500
The thing I remember in past years, we sort of did it at the end of a workshop, like maybe

2050
04:35:42,500 --> 04:35:53,140
we did it after the official time ended, and then I inserted the video into the right place.

2051
04:35:53,140 --> 04:35:54,140
Okay.

2052
04:35:54,140 --> 04:35:55,140
Yeah.

2053
04:35:55,140 --> 04:36:10,860
And also good to remark that for the people who used VS Code to study command line, there

2054
04:36:10,860 --> 04:36:16,780
was a little bit of repetition and that's hard to avoid compromise that we chose to

2055
04:36:16,780 --> 04:36:17,780
do.

2056
04:36:17,780 --> 04:36:22,260
But maybe what we should then do is to offer some additional exercises for those who are

2057
04:36:22,260 --> 04:36:35,080
already familiar to these tools. Otherwise, I'm happy if we can, of course, talk more.

2058
04:36:35,080 --> 04:36:38,740
Maybe it's not a problem to end four minutes before the end.

2059
04:36:38,740 --> 04:36:47,900
Yeah. I'd point out under feedback, there's a new part here. What part of the course format

2060
04:36:47,900 --> 04:36:53,500
you value most. So we have lots of discussions going on here like how do we

2061
04:36:55,820 --> 04:37:03,180
like where should we focus our time and effort so we well it's a lot of

2062
04:37:04,860 --> 04:37:11,740
time to put on these courses would for example would videos be a okay replacement

2063
04:37:11,740 --> 04:37:24,060
is us talking live the most important part, and so on. So please answer there

2064
04:37:24,060 --> 04:37:32,820
some. That'll help us figure out how to adjust things. Maybe I should add

2065
04:37:32,820 --> 04:37:37,820
exercises here as an option.

2066
04:37:37,820 --> 04:37:47,820
But yeah, these surveys really do help us.

2067
04:37:47,820 --> 04:37:57,820
Also, good feedback. We need more for RStudio.

2068
04:37:57,820 --> 04:38:02,140
If you know anyone that knows RStudio, get in touch with us

2069
04:38:02,140 --> 04:38:05,140
and they can help us.

2070
04:38:05,140 --> 04:38:09,940
So we can do it ourselves, but if there's

2071
04:38:09,940 --> 04:38:11,060
an expert, that helps.

2072
04:38:16,940 --> 04:38:19,300
OK, well, I guess.

2073
04:38:19,300 --> 04:38:30,180
yeah thanks everybody so i think this with this we can conclude today's session

2074
04:38:31,460 --> 04:38:36,100
hopefully we learned something new thanks so much for all the questions thanks to all the helpers

2075
04:38:37,300 --> 04:38:43,060
and people involved both here on video but also off video people answering questions and

2076
04:38:43,060 --> 04:38:52,260
making the local classrooms possible and all of the other work yeah yeah thanks so much see you

2077
04:38:52,260 --> 04:39:02,340
tomorrow okay see you tomorrow bye bye bye do you want to do the git bisect exercise now and record

2078
04:39:02,340 --> 04:39:10,180
it or should we just post it i think the videos from last year's are fine so yeah i can find me

2079
04:39:10,180 --> 04:39:16,740
I'm happy to, but I think we have it. Yeah. Okay, great. Bye.

2080
04:39:40,180 --> 04:39:42,240
you

2081
04:40:10,180 --> 04:40:12,240
you

