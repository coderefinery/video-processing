1
00:00:01,795 --> 00:00:04,259
Hello everyone, we are starting

2
00:00:04,259 --> 00:00:05,701
day three of the Code

3
00:00:05,701 --> 00:00:08,666
Refinery workshop, September, October 2025.

4
00:00:08,666 --> 00:00:12,372
I'm [name], I'm at Aalto University

5
00:00:12,372 --> 00:00:13,954
and right now you might

6
00:00:13,954 --> 00:00:16,578
already be seeing our instructors

7
00:00:16,578 --> 00:00:18,702
of the day, [name] De Cristoforo.

8
00:00:19,603 --> 00:00:20,224
Hello [name].

9
00:00:21,827 --> 00:00:22,703
Hello.

10
00:00:22,703 --> 00:00:25,647
and [name].

11
00:00:25,647 --> 00:00:26,689
Did I pronounce it well?

12
00:00:26,689 --> 00:00:26,969
Yes, you did.

13
00:00:26,969 --> 00:00:27,890
Yes.

14
00:00:27,890 --> 00:00:29,232
Hello, [name].

15
00:00:29,232 --> 00:00:29,393
Hello.

16
00:00:29,393 --> 00:00:30,955
But [name] and [name], they are

17
00:00:30,955 --> 00:00:34,800
both in the UIT, University

18
00:00:34,800 --> 00:00:36,523
of the Arctic of Norway.

19
00:00:36,523 --> 00:00:39,187
So up there in TromsÃ¸.

20
00:00:39,187 --> 00:00:39,788
They're part of the

21
00:00:39,788 --> 00:00:41,330
Research Software Engineering Group

22
00:00:41,330 --> 00:00:44,615
and they work with HPC and this type of stuff.

23
00:00:44,615 --> 00:00:47,238
So lots of HPC experts

24
00:00:47,238 --> 00:00:48,460
as instructors this year.

25
00:00:49,261 --> 00:00:50,803
And you might also see [name].

26
00:00:50,803 --> 00:00:51,444
Hello, [name].

27
00:00:52,506 --> 00:00:52,606
Hello.

28
00:00:52,606 --> 00:00:55,149
who is controlling the streaming

29
00:00:55,149 --> 00:00:57,692
and the broadcasting for today right

30
00:00:57,692 --> 00:00:59,294
so a couple of reminders

31
00:00:59,294 --> 00:01:01,937
before we actually dive into the

32
00:01:01,937 --> 00:01:03,599
best day well i mean i don't

33
00:01:03,599 --> 00:01:05,481
want to say it's not maybe i don't know

34
00:01:05,481 --> 00:01:06,643
if it's the best day but

35
00:01:06,643 --> 00:01:08,725
one of the most amazing days

36
00:01:08,725 --> 00:01:09,907
of the code refinery workshop

37
00:01:10,788 --> 00:01:12,750
today it's day three and i'm

38
00:01:12,750 --> 00:01:15,653
scrolling down to the schedule for

39
00:01:15,653 --> 00:01:20,419
today and i click on this day three intro

40
00:01:23,200 --> 00:01:25,983
and here we are so for day one

41
00:01:25,983 --> 00:01:27,225
and two it was like

42
00:01:27,225 --> 00:01:28,727
an introduction to version control

43
00:01:28,727 --> 00:01:30,288
in day one you got all

44
00:01:30,288 --> 00:01:32,591
the terms and you managed even

45
00:01:32,591 --> 00:01:34,153
just using the github web

46
00:01:34,153 --> 00:01:38,058
interface to do commits and things like

47
00:01:38,058 --> 00:01:39,760
that for day two we kind

48
00:01:39,760 --> 00:01:43,044
of moved on the local computer

49
00:01:43,044 --> 00:01:44,806
which is very important because

50
00:01:44,806 --> 00:01:47,669
then you already start feeling kind of the

51
00:01:47,669 --> 00:01:49,891
the power of such tool that

52
00:01:49,891 --> 00:01:51,893
you can work locally and when you're happy,

53
00:01:51,893 --> 00:01:54,756
you can push on a remote place, GitHub,

54
00:01:54,756 --> 00:01:57,079
GitLab, your server, whatever,

55
00:01:57,079 --> 00:01:59,321
and collaborate with other people

56
00:01:59,321 --> 00:02:02,544
who can then pull locally the

57
00:02:02,544 --> 00:02:04,847
changes that you did and so on.

58
00:02:04,847 --> 00:02:07,069
Today, which is day three,

59
00:02:07,069 --> 00:02:09,311
everything comes together and we

60
00:02:09,311 --> 00:02:11,593
show exactly this power of

61
00:02:11,593 --> 00:02:15,057
the collaborative distributed version control.

62
00:02:15,057 --> 00:02:17,001
so the concepts that are

63
00:02:17,001 --> 00:02:18,804
introduced today they build on top of

64
00:02:18,804 --> 00:02:20,447
what has been shown already in day one

65
00:02:20,447 --> 00:02:25,978
and day two and so here

66
00:02:25,978 --> 00:02:28,403
it's not necessary that you

67
00:02:28,403 --> 00:02:30,427
do things locally you can also

68
00:02:30,427 --> 00:02:32,651
use the GitHub web interface to

69
00:02:32,651 --> 00:02:34,835
do this type of collaboration with others

70
00:02:34,835 --> 00:02:36,537
But I really like I was saying

71
00:02:36,537 --> 00:02:38,038
that this is the best day because

72
00:02:38,038 --> 00:02:39,499
what you learn today is

73
00:02:39,499 --> 00:02:41,001
something that even can go

74
00:02:41,001 --> 00:02:45,344
beyond software engineering or code.

75
00:02:45,344 --> 00:02:46,986
Because with this tool, with

76
00:02:46,986 --> 00:02:48,728
what you will learn today, you can go out

77
00:02:48,728 --> 00:02:50,829
and fix typos in documentation

78
00:02:50,829 --> 00:02:54,333
of your favorite packages, software packages.

79
00:02:54,333 --> 00:02:57,636
You can make web pages, help other people,

80
00:02:57,636 --> 00:03:01,059
web pages and truly, you

81
00:03:01,059 --> 00:03:03,461
know, unleash the power of

82
00:03:03,461 --> 00:03:04,822
open source development.

83
00:03:04,822 --> 00:03:06,747
What else?

84
00:03:06,747 --> 00:03:07,950
Some practicalities.

85
00:03:09,595 --> 00:03:11,339
I scroll up, I switch window

86
00:03:11,339 --> 00:03:14,327
to this notes document, which

87
00:03:14,327 --> 00:03:16,192
you should all have received via

88
00:03:16,192 --> 00:03:17,757
email in the reminder that I

89
00:03:17,757 --> 00:03:18,679
sent a minutes ago.

90
00:03:19,975 --> 00:03:22,241
if you were not with us

91
00:03:22,241 --> 00:03:24,206
in the previous days so in

92
00:03:24,206 --> 00:03:25,609
this notes document on the

93
00:03:25,609 --> 00:03:29,720
very top right corner which now

94
00:03:29,720 --> 00:03:31,444
is hidden by our webcams but

95
00:03:31,444 --> 00:03:33,389
it's okay you should see a pencil

96
00:03:34,592 --> 00:03:36,597
I can turn it off for a moment

97
00:03:36,597 --> 00:03:38,879
yeah so you see my mouse

98
00:03:38,879 --> 00:03:40,961
is moving there on top of the pencil

99
00:03:40,961 --> 00:03:42,442
when I click the pencil it

100
00:03:42,442 --> 00:03:45,385
will switch to like an editor edit mode

101
00:03:46,446 --> 00:03:50,089
and here I'm scrolling down

102
00:03:50,089 --> 00:03:51,731
and there's already some questions

103
00:03:51,731 --> 00:03:53,572
and some of our helpers

104
00:03:53,572 --> 00:03:55,734
have already answered and this

105
00:03:55,734 --> 00:03:57,756
will be the main interface so

106
00:03:57,756 --> 00:04:00,859
that everyone can ask and answer

107
00:04:00,859 --> 00:04:02,380
at the same time you can

108
00:04:02,380 --> 00:04:03,501
answer some of these questions

109
00:04:03,501 --> 00:04:06,584
give your comments and feedback and and so on

110
00:04:06,584 --> 00:04:10,989
but I don't want to steal precious time

111
00:04:10,989 --> 00:04:12,691
so I switch back I click on

112
00:04:12,691 --> 00:04:14,413
the eye it is also good

113
00:04:14,413 --> 00:04:16,155
because then in this rendered

114
00:04:16,155 --> 00:04:18,277
mode it's lighter for the server

115
00:04:19,819 --> 00:04:22,582
so we can get the webcams back

116
00:04:22,582 --> 00:04:25,705
and I think we could switch to

117
00:04:25,705 --> 00:04:27,988
I think [name] is starting with

118
00:04:27,988 --> 00:04:32,212
the screen share and enjoy

119
00:04:32,212 --> 00:04:34,495
day three of Collaborative Git

120
00:04:34,495 --> 00:04:36,557
Code Refinery workshop thank you

121
00:04:38,191 --> 00:04:39,072
Yeah, thank you, Nico.

122
00:04:40,294 --> 00:04:41,736
And welcome from our side.

123
00:04:41,736 --> 00:04:42,738
I always consider this day to

124
00:04:42,738 --> 00:04:43,840
be the most fun, since we

125
00:04:43,840 --> 00:04:45,502
kind of build upon what we've

126
00:04:45,502 --> 00:04:46,864
learned in the last two days.

127
00:04:46,864 --> 00:04:48,186
And we now work together with

128
00:04:48,186 --> 00:04:49,348
others on the same code base.

129
00:04:50,350 --> 00:04:51,151
Expect today to be

130
00:04:51,151 --> 00:04:53,514
slightly chaotic, because multiple

131
00:04:53,514 --> 00:04:54,957
people will now work together

132
00:04:54,957 --> 00:04:57,561
on pull requests, on code reviews.

133
00:04:57,561 --> 00:05:00,004
We'll merge into one GitHub repository.

134
00:05:00,004 --> 00:05:01,066
So not everything will work

135
00:05:01,066 --> 00:05:02,789
according to plan, but that's fine.

136
00:05:02,789 --> 00:05:05,545
That's part of the fun.

137
00:05:05,545 --> 00:05:07,148
[name] already mentioned almost

138
00:05:07,148 --> 00:05:08,951
everything in terms of bookkeeping

139
00:05:08,951 --> 00:05:10,774
that was to be said.

140
00:05:10,774 --> 00:05:11,815
Maybe just a few things on

141
00:05:11,815 --> 00:05:13,138
my side that I want to add.

142
00:05:14,219 --> 00:05:15,021
First of all, we will

143
00:05:15,021 --> 00:05:17,264
have today three exercises and

144
00:05:17,264 --> 00:05:18,466
you will have roughly 30

145
00:05:18,466 --> 00:05:20,370
minutes for every exercise.

146
00:05:20,370 --> 00:05:21,872
So it's a bit more time

147
00:05:21,872 --> 00:05:24,445
than you did have in the last two days.

148
00:05:24,445 --> 00:05:26,507
Um, so please keep an eye

149
00:05:26,507 --> 00:05:28,490
on the Mata documents that

150
00:05:28,490 --> 00:05:30,673
has mentioned, because we need to see that.

151
00:05:31,654 --> 00:05:32,875
What do you, at what stage

152
00:05:32,875 --> 00:05:33,977
you are doing the exercises.

153
00:05:33,977 --> 00:05:34,838
So please let us know

154
00:05:34,838 --> 00:05:35,719
whether you're done or not,

155
00:05:35,719 --> 00:05:37,441
whether you have any questions, this

156
00:05:37,441 --> 00:05:38,622
will be a central part now for

157
00:05:38,622 --> 00:05:40,424
us to the way how we communicate to each other.

158
00:05:41,426 --> 00:05:42,827
Also, please do remember the

159
00:05:42,827 --> 00:05:43,768
code of conduct.

160
00:05:43,768 --> 00:05:44,810
So please don't put anything

161
00:05:44,810 --> 00:05:46,712
weird into the pull requests or

162
00:05:46,712 --> 00:05:47,933
the reviews and so on.

163
00:05:49,295 --> 00:05:52,599
Um, but otherwise, um, I think

164
00:05:52,599 --> 00:05:53,440
we are ready to go.

165
00:05:54,382 --> 00:05:56,625
As [name] already mentioned, so I

166
00:05:56,625 --> 00:05:58,667
and [name], we both work at UIT

167
00:05:58,667 --> 00:05:59,368
and we're a research soft

168
00:05:59,368 --> 00:06:00,550
engineering group and we've both

169
00:06:00,550 --> 00:06:02,312
worked as researchers before.

170
00:06:02,312 --> 00:06:03,273
So in my case, it

171
00:06:03,273 --> 00:06:05,216
was fusion plasma physics.

172
00:06:05,216 --> 00:06:05,897
In the case of [name],

173
00:06:05,897 --> 00:06:07,799
you have a background in

174
00:06:07,799 --> 00:06:10,603
bioinformatics and computer science,

175
00:06:10,603 --> 00:06:11,964
if I remember correctly.

176
00:06:11,964 --> 00:06:12,145
Yes.

177
00:06:13,426 --> 00:06:14,708
So what I'm trying to say

178
00:06:14,708 --> 00:06:16,310
is we've been researchers, so we

179
00:06:16,310 --> 00:06:17,231
have been in your shoes.

180
00:06:17,231 --> 00:06:18,693
We know what kind of struggles

181
00:06:18,693 --> 00:06:20,415
and challenges you have in

182
00:06:20,415 --> 00:06:21,737
your everyday life when you work

183
00:06:21,737 --> 00:06:23,399
with code as a researcher.

184
00:06:23,399 --> 00:06:24,942
And hopefully we can

185
00:06:24,942 --> 00:06:26,383
We can help you with most

186
00:06:26,383 --> 00:06:28,485
of these topics now today during the seminar.

187
00:06:29,766 --> 00:06:30,047
Okay.

188
00:06:31,068 --> 00:06:32,449
I think that's all there is

189
00:06:32,449 --> 00:06:34,411
to be said before we start with the lecture.

190
00:06:34,411 --> 00:06:36,192
So I think we are ready to go ahead.

191
00:06:38,795 --> 00:06:40,856
So the first thing we will

192
00:06:40,856 --> 00:06:41,837
mention today is just a quick

193
00:06:41,837 --> 00:06:43,058
reminder of the concepts that

194
00:06:43,058 --> 00:06:44,640
we've discussed in the last few days.

195
00:06:44,640 --> 00:06:45,961
So that's what is a repository?

196
00:06:45,961 --> 00:06:46,622
What is a commit?

197
00:06:46,622 --> 00:06:47,222
What is a branch?

198
00:06:47,222 --> 00:06:47,622
And so on.

199
00:06:48,764 --> 00:06:49,784
You will have time during

200
00:06:49,784 --> 00:06:50,965
the exercises to read up

201
00:06:50,965 --> 00:06:52,026
on these concepts again, if

202
00:06:52,026 --> 00:06:54,237
you feel slightly unsure about some of them.

203
00:06:54,237 --> 00:06:55,078
You have 30 minutes, so

204
00:06:55,078 --> 00:06:56,260
there's plenty of time to read

205
00:06:56,260 --> 00:06:59,184
up on old topics and then build up on them.

206
00:06:59,184 --> 00:07:00,485
But there is two specific things

207
00:07:00,485 --> 00:07:01,467
that I want to pinpoint,

208
00:07:01,467 --> 00:07:03,870
which we should emphasize now,

209
00:07:03,870 --> 00:07:06,473
and that's cloning and forking the repository.

210
00:07:06,473 --> 00:07:07,154
So I think that we

211
00:07:07,154 --> 00:07:08,536
should start with discussing that

212
00:07:08,536 --> 00:07:09,798
in a little bit more detail.

213
00:07:11,280 --> 00:07:12,401
And a very easy way to

214
00:07:12,401 --> 00:07:13,803
do that is by pointing out

215
00:07:13,803 --> 00:07:16,057
this figure, which is shown here.

216
00:07:16,057 --> 00:07:16,878
So what you can see here

217
00:07:16,878 --> 00:07:18,580
now is a repository, which is

218
00:07:18,580 --> 00:07:19,841
here indicated to be on GitHub.

219
00:07:19,841 --> 00:07:21,263
So this cloud here refers

220
00:07:21,263 --> 00:07:23,125
to a server, cloud server somewhere.

221
00:07:23,125 --> 00:07:25,428
In this case, it's on GitHub.

222
00:07:25,428 --> 00:07:26,729
And this repository here

223
00:07:26,729 --> 00:07:28,091
contains multiple branches that you

224
00:07:28,091 --> 00:07:29,412
can see here indicated in

225
00:07:29,412 --> 00:07:30,654
these different colors.

226
00:07:30,654 --> 00:07:31,855
So we have the blue main branch.

227
00:07:31,855 --> 00:07:33,817
We have a green experimental branch.

228
00:07:33,817 --> 00:07:34,978
We have this red ideas branch.

229
00:07:36,220 --> 00:07:37,521
Every branch has multiple commits.

230
00:07:37,521 --> 00:07:39,343
So each square here refers to a commit.

231
00:07:39,343 --> 00:07:41,065
And we also have a tag here in this case.

232
00:07:41,065 --> 00:07:43,310
So then the version 1.0 came out.

233
00:07:43,310 --> 00:07:45,112
And then we can either clone

234
00:07:45,112 --> 00:07:46,514
or fork this repository.

235
00:07:46,514 --> 00:07:47,275
And you will do both

236
00:07:47,275 --> 00:07:48,717
things today during the exercises.

237
00:07:49,678 --> 00:07:50,879
So what you're already familiar

238
00:07:50,879 --> 00:07:52,041
with is cloning.

239
00:07:52,041 --> 00:07:52,942
So that means that you

240
00:07:52,942 --> 00:07:54,925
copy the whole repository as one

241
00:07:54,925 --> 00:07:57,147
piece to your laptop or

242
00:07:57,147 --> 00:07:59,691
your workstation, wherever you work locally.

243
00:07:59,691 --> 00:08:00,852
So you can see this then a copy,

244
00:08:00,852 --> 00:08:01,993
which then changes here the

245
00:08:01,993 --> 00:08:02,995
names of the branches, but

246
00:08:02,995 --> 00:08:04,356
otherwise it stays exactly the same.

247
00:08:04,356 --> 00:08:06,159
And then there's a second option,

248
00:08:06,159 --> 00:08:06,960
which we will work in

249
00:08:06,960 --> 00:08:08,862
the third exercise today, and that's forking.

250
00:08:09,770 --> 00:08:11,012
And forking means that we

251
00:08:11,012 --> 00:08:13,095
copy the repository inside of GitHub.

252
00:08:13,095 --> 00:08:14,357
So we copy it from the

253
00:08:14,357 --> 00:08:16,520
original place to another one,

254
00:08:16,520 --> 00:08:18,963
usually your own GitHub account.

255
00:08:18,963 --> 00:08:20,405
So then if this is,

256
00:08:20,405 --> 00:08:21,927
for instance, the recipe book from

257
00:08:21,927 --> 00:08:22,689
the code you found in the

258
00:08:22,689 --> 00:08:23,730
repository, you would copy it

259
00:08:23,730 --> 00:08:28,397
over to your personal GitHub repository.

260
00:08:29,879 --> 00:08:31,401
And it stays exactly the same.

261
00:08:31,401 --> 00:08:32,863
So conceptually, it's very much the same,

262
00:08:32,863 --> 00:08:33,624
but we will see that in

263
00:08:33,624 --> 00:08:34,646
exercise two and three what

264
00:08:34,646 --> 00:08:35,507
the major differences are.

265
00:08:36,888 --> 00:08:38,452
Now, maybe one of the first questions

266
00:08:38,452 --> 00:08:39,554
that arise then is when

267
00:08:39,554 --> 00:08:41,238
would you actually want to fork

268
00:08:41,238 --> 00:08:42,982
and when would you want to clone?

269
00:08:42,982 --> 00:08:44,285
So [name], may I ask you,

270
00:08:44,285 --> 00:08:45,688
what do you usually do in

271
00:08:45,688 --> 00:08:47,392
your everyday life when you

272
00:08:47,392 --> 00:08:48,935
work with code repositories?

273
00:08:50,178 --> 00:08:51,361
In which case do you prefer

274
00:08:51,361 --> 00:08:52,483
to clone and when do you fork?

275
00:08:53,324 --> 00:08:56,332
Well, the main thing that decides

276
00:08:56,332 --> 00:08:58,739
what you do is generally

277
00:08:58,739 --> 00:09:00,243
whether you have right access

278
00:09:01,265 --> 00:09:03,832
to the repository.

279
00:09:03,832 --> 00:09:05,377
If you do, then you can

280
00:09:05,377 --> 00:09:09,608
just clone and push your changes back.

281
00:09:09,608 --> 00:09:13,314
In many cases, if you want to work on

282
00:09:13,314 --> 00:09:15,958
or modify software that is managed

283
00:09:15,958 --> 00:09:17,280
and maintained by someone else

284
00:09:18,262 --> 00:09:20,365
at a different university or

285
00:09:20,365 --> 00:09:25,713
wherever, it is easier to just make a fork

286
00:09:25,713 --> 00:09:27,336
and then you can work on

287
00:09:27,336 --> 00:09:29,339
it and modify it without

288
00:09:29,339 --> 00:09:32,404
having to always request that

289
00:09:32,404 --> 00:09:33,726
your changes be accepted.

290
00:09:35,427 --> 00:09:36,869
Um, and so that's, that's

291
00:09:36,869 --> 00:09:38,871
one main reason to fork as

292
00:09:38,871 --> 00:09:39,973
instead of just cloning.

293
00:09:41,375 --> 00:09:42,556
And often that's the case

294
00:09:42,556 --> 00:09:44,218
when you work with repositories,

295
00:09:44,218 --> 00:09:45,119
which are much bigger and

296
00:09:45,119 --> 00:09:46,782
where multiple people are working in it.

297
00:09:46,782 --> 00:09:47,883
So if it's just inside

298
00:09:47,883 --> 00:09:49,645
of your own organization, if you only have two,

299
00:09:49,645 --> 00:09:50,526
three people working on

300
00:09:50,526 --> 00:09:52,249
one repository, then probably

301
00:09:52,249 --> 00:09:53,510
cloning is enough.

302
00:09:54,492 --> 00:09:56,474
But if you then want to contribute to,

303
00:09:56,474 --> 00:09:58,837
let's say a large project, like NumPy,

304
00:09:58,837 --> 00:09:59,939
for instance, for those of you

305
00:09:59,939 --> 00:10:00,840
who work in Python, they

306
00:10:00,840 --> 00:10:01,981
might recognize that immediately.

307
00:10:01,981 --> 00:10:03,997
That's one of the most popular libraries.

308
00:10:03,997 --> 00:10:05,098
then you cannot just clone that.

309
00:10:05,098 --> 00:10:05,980
You would have to fork it

310
00:10:05,980 --> 00:10:07,321
first and then work on the code.

311
00:10:08,743 --> 00:10:09,745
So it's also correlated with

312
00:10:09,745 --> 00:10:13,129
the size of the repository.

313
00:10:13,129 --> 00:10:15,132
And one other reason that

314
00:10:15,132 --> 00:10:16,514
people will fork is if they

315
00:10:16,514 --> 00:10:19,318
want to take the particular code base

316
00:10:19,318 --> 00:10:20,079
or software in a

317
00:10:20,079 --> 00:10:21,280
completely different direction and

318
00:10:21,280 --> 00:10:22,362
make changes that they have

319
00:10:23,363 --> 00:10:25,346
either couldn't get accepted or

320
00:10:25,346 --> 00:10:26,548
have no intention of trying to

321
00:10:26,548 --> 00:10:28,811
merge back in with the original project.

322
00:10:30,413 --> 00:10:32,043
Yes, that's also an option.

323
00:10:32,043 --> 00:10:33,445
And also always keep in mind

324
00:10:33,445 --> 00:10:34,346
what kind of license the

325
00:10:34,346 --> 00:10:35,708
repositories use, right?

326
00:10:35,708 --> 00:10:36,850
So if the license gives you

327
00:10:36,850 --> 00:10:39,653
the rights to make changes to it and use it,

328
00:10:39,653 --> 00:10:40,775
or if it's a restrictive

329
00:10:40,775 --> 00:10:42,077
license, that's also something you

330
00:10:42,077 --> 00:10:42,637
should keep in mind.

331
00:10:44,420 --> 00:10:45,281
We will also learn today

332
00:10:45,281 --> 00:10:46,763
how to synchronize the

333
00:10:46,763 --> 00:10:48,565
changes between different repositories,

334
00:10:48,565 --> 00:10:49,887
or like between fork repositories

335
00:10:49,887 --> 00:10:51,409
and cloud repositories.

336
00:10:51,409 --> 00:10:52,090
In the past, it has

337
00:10:52,090 --> 00:10:53,212
been quite cumbersome on GitHub,

338
00:10:53,212 --> 00:10:54,714
but they made it really easy now

339
00:10:54,714 --> 00:10:56,897
in the UI, so it's just a few mouse clicks.

340
00:10:56,897 --> 00:10:58,219
We will go through that later on as well.

341
00:11:01,243 --> 00:11:01,945
And

342
00:11:01,945 --> 00:11:03,026
We should also mention

343
00:11:03,026 --> 00:11:05,188
generating repositories from templates.

344
00:11:05,188 --> 00:11:06,530
That's relevant for those of you

345
00:11:06,530 --> 00:11:08,852
who are now exercise class leaders,

346
00:11:08,852 --> 00:11:09,633
so those of you who

347
00:11:11,074 --> 00:11:14,277
will clone their repository for

348
00:11:14,277 --> 00:11:15,298
your local group.

349
00:11:16,359 --> 00:11:17,100
In this case, we can

350
00:11:17,100 --> 00:11:18,722
use templates for that.

351
00:11:18,722 --> 00:11:20,123
And the difference between a template

352
00:11:20,123 --> 00:11:22,385
and a normal repository is

353
00:11:22,385 --> 00:11:25,528
simply that a template will

354
00:11:25,528 --> 00:11:26,389
flatten the history.

355
00:11:26,389 --> 00:11:27,991
So it's like a Git squash,

356
00:11:27,991 --> 00:11:29,806
if you remember from the previous days.

357
00:11:29,806 --> 00:11:31,088
basically all the history

358
00:11:31,088 --> 00:11:33,151
from this repository that you

359
00:11:33,151 --> 00:11:34,793
cloned has been flattened so that

360
00:11:34,793 --> 00:11:36,014
we start with an initial commit

361
00:11:36,014 --> 00:11:38,278
and start from a kind of new state.

362
00:11:38,278 --> 00:11:39,079
So we don't have all the

363
00:11:39,079 --> 00:11:41,402
history from the creation of the template.

364
00:11:41,402 --> 00:11:43,385
So for those of you who will work on

365
00:11:43,385 --> 00:11:44,626
or will lead an exercise

366
00:11:44,626 --> 00:11:47,010
class, this will be important.

367
00:11:48,171 --> 00:11:50,915
Okay, I think we have motivated

368
00:11:50,915 --> 00:11:52,958
what we are working on today enough.

369
00:11:52,958 --> 00:11:53,538
And I think we can

370
00:11:53,538 --> 00:11:56,362
then start with introducing the first exercise.

371
00:11:57,203 --> 00:11:58,898
Was there anything I have forgotten?

372
00:11:58,898 --> 00:12:01,402
And I think that's everything.

373
00:12:02,364 --> 00:12:04,247
Okay, so let's go to the next chapter.

374
00:12:04,247 --> 00:12:06,471
And that's now collaborating

375
00:12:06,471 --> 00:12:07,553
within the same repository.

376
00:12:08,875 --> 00:12:10,578
So imagine you work together

377
00:12:10,578 --> 00:12:12,882
with your research group on a package

378
00:12:12,882 --> 00:12:14,324
that you develop, which is

379
00:12:14,324 --> 00:12:15,346
at the moment only relevant

380
00:12:15,346 --> 00:12:16,448
for two different people in

381
00:12:16,448 --> 00:12:17,830
your research group, then you

382
00:12:17,830 --> 00:12:18,711
probably would want to

383
00:12:18,711 --> 00:12:20,254
start with collaborating inside

384
00:12:20,254 --> 00:12:20,935
of one repository.

385
00:12:20,935 --> 00:12:21,536
And that's what we will

386
00:12:21,536 --> 00:12:22,678
practice now in this first round.

387
00:12:25,477 --> 00:12:26,599
In this exercise, you will

388
00:12:26,599 --> 00:12:28,623
be asked to create a pull request.

389
00:12:28,623 --> 00:12:30,286
So what is a pull request?

390
00:12:30,286 --> 00:12:31,087
Maybe we should give like

391
00:12:32,309 --> 00:12:33,752
an explanation of the concept.

392
00:12:33,752 --> 00:12:35,214
So if you haven't heard that before,

393
00:12:36,256 --> 00:12:37,919
if the idea is to make

394
00:12:37,919 --> 00:12:39,943
some changes to the code base, it

395
00:12:39,943 --> 00:12:41,145
could be a new implementation.

396
00:12:41,145 --> 00:12:42,587
It could be something completely new.

397
00:12:42,587 --> 00:12:43,529
It could also be just a

398
00:12:43,529 --> 00:12:44,811
change to existing code or a

399
00:12:45,733 --> 00:12:48,598
fix of a mistake of a bug in the code and you

400
00:12:49,726 --> 00:12:51,368
make this change as a proposal,

401
00:12:51,368 --> 00:12:52,189
you put it out as a

402
00:12:52,189 --> 00:12:54,833
proposal, so that other people can look at it,

403
00:12:54,833 --> 00:12:55,794
give their opinion, say

404
00:12:55,794 --> 00:12:56,475
whether they're happy with the

405
00:12:56,475 --> 00:12:58,918
changes or not, and then get it merged.

406
00:12:58,918 --> 00:12:59,979
So instead of merging it

407
00:12:59,979 --> 00:13:01,662
directly into the main branch,

408
00:13:01,662 --> 00:13:02,643
you have like this additional

409
00:13:04,726 --> 00:13:06,808
sets of controls that the changes

410
00:13:06,808 --> 00:13:08,090
have to go through before you merge them.

411
00:13:09,872 --> 00:13:14,198
In this exercise, we will now start with

412
00:13:18,025 --> 00:13:20,809
the repository that is outlined here.

413
00:13:20,809 --> 00:13:21,549
I'll just quickly give

414
00:13:21,549 --> 00:13:24,073
some information about how the

415
00:13:24,073 --> 00:13:25,374
team leaders would have to work with this.

416
00:13:25,374 --> 00:13:28,698
And then I go to those of you

417
00:13:28,698 --> 00:13:29,940
who are not in the team,

418
00:13:29,940 --> 00:13:30,981
but will work directly with

419
00:13:30,981 --> 00:13:33,785
the repository together with us.

420
00:13:33,785 --> 00:13:35,367
So if you are part of a

421
00:13:35,367 --> 00:13:37,930
team or an exercise room, please

422
00:13:37,930 --> 00:13:41,034
go to this repository and book it.

423
00:13:42,356 --> 00:13:44,098
And then you would have

424
00:13:44,098 --> 00:13:46,898
to send invitations to all these people who are

425
00:13:46,898 --> 00:13:48,380
parts of this group.

426
00:13:48,380 --> 00:13:49,641
So I'll just quickly open

427
00:13:49,641 --> 00:13:50,862
that in an additional tab.

428
00:13:50,862 --> 00:13:52,444
So go to the tab now.

429
00:13:52,444 --> 00:13:54,927
So you can hear, use this template.

430
00:13:54,927 --> 00:13:56,348
And if you do that, then

431
00:13:56,348 --> 00:13:57,970
you, I will just now show

432
00:13:57,970 --> 00:13:59,852
the exercise that we will work on.

433
00:14:01,434 --> 00:14:02,855
You can go to the settings

434
00:14:02,855 --> 00:14:07,120
here, go to collaborators and

435
00:14:07,120 --> 00:14:09,763
teams, and then you can invite people.

436
00:14:10,564 --> 00:14:11,825
So in this case, let me

437
00:14:11,825 --> 00:14:12,846
just make it a little bit

438
00:14:12,846 --> 00:14:16,450
larger so that everyone can see.

439
00:14:17,982 --> 00:14:19,103
You have different roles, and

440
00:14:19,103 --> 00:14:20,204
in this case it's important.

441
00:14:21,365 --> 00:14:22,266
Okay, unfortunately I have to

442
00:14:22,266 --> 00:14:23,087
scroll down to the right.

443
00:14:25,109 --> 00:14:25,569
Let me see.

444
00:14:33,717 --> 00:14:35,920
This is slightly difficult to see.

445
00:14:35,920 --> 00:14:37,761
Let's just go back to the general one.

446
00:14:42,126 --> 00:14:44,088
You will have to set it to read.

447
00:14:44,088 --> 00:14:45,149
In this case, let's see, so

448
00:14:45,149 --> 00:14:46,771
the, ah, here it is, sorry.

449
00:14:46,771 --> 00:14:47,973
So we go to the team section.

450
00:14:58,594 --> 00:14:59,495
Sorry, here it is.

451
00:14:59,495 --> 00:14:59,816
OK.

452
00:15:00,878 --> 00:15:01,720
I'm just not used to have

453
00:15:04,786 --> 00:15:08,506
such large in the GitHub repository.

454
00:15:08,506 --> 00:15:09,808
Here you have different roles,

455
00:15:09,808 --> 00:15:10,929
so it will be important that

456
00:15:10,929 --> 00:15:12,491
you set this to write, because

457
00:15:12,491 --> 00:15:14,693
by default it might be read, which means

458
00:15:14,693 --> 00:15:15,875
that those of you that

459
00:15:15,875 --> 00:15:18,358
you invite to participate in this,

460
00:15:19,259 --> 00:15:21,301
to work on this repository, will

461
00:15:21,301 --> 00:15:23,504
not have the option to create,

462
00:15:23,504 --> 00:15:27,068
yeah, to merge as pull requests.

463
00:15:27,068 --> 00:15:28,349
So in this case, please set it to write.

464
00:15:29,471 --> 00:15:31,092
Also, one thing that we can do,

465
00:15:31,092 --> 00:15:33,075
which we should, which I want to mention,

466
00:15:33,075 --> 00:15:34,236
is if you go to branches,

467
00:15:34,236 --> 00:15:36,639
we can set additional rules for these branches.

468
00:15:36,639 --> 00:15:38,577
And in this case, I've set up here a rule

469
00:15:38,577 --> 00:15:39,818
for the main branch that

470
00:15:39,818 --> 00:15:41,821
you have worked with already in

471
00:15:41,821 --> 00:15:43,102
the last couple of days in

472
00:15:43,102 --> 00:15:45,365
the code refinery workshop, we

473
00:15:45,365 --> 00:15:48,509
can here add this additional

474
00:15:48,509 --> 00:15:49,991
rule, which says that we require

475
00:15:49,991 --> 00:15:51,272
a pull request before merging.

476
00:15:52,274 --> 00:15:53,455
And I would recommend doing that

477
00:15:53,455 --> 00:15:54,716
for repositories where multiple

478
00:15:54,716 --> 00:15:56,238
people work on it, since that means

479
00:15:56,238 --> 00:16:00,664
that no one can just change

480
00:16:00,664 --> 00:16:01,925
the code in the main branch

481
00:16:01,925 --> 00:16:03,527
without anyone else approving the changes.

482
00:16:04,388 --> 00:16:05,129
So this is something that

483
00:16:05,129 --> 00:16:06,431
you should enable, otherwise people

484
00:16:06,431 --> 00:16:07,805
might just by accident

485
00:16:07,805 --> 00:16:09,006
merge into the main byte, which

486
00:16:09,006 --> 00:16:10,128
is not what we want to achieve today.

487
00:16:12,190 --> 00:16:14,293
Okay, so let's go back to the material.

488
00:16:14,293 --> 00:16:16,155
That was all the information

489
00:16:16,155 --> 00:16:18,117
which is important for those of

490
00:16:18,117 --> 00:16:23,023
you who manage a group of participants.

491
00:16:23,023 --> 00:16:24,404
But those of you who

492
00:16:24,404 --> 00:16:25,426
will work with decentralized

493
00:16:25,426 --> 00:16:27,288
repositories, you will work together

494
00:16:27,288 --> 00:16:28,970
with us, so with [name] and

495
00:16:28,970 --> 00:16:30,371
also [name] and [name].

496
00:16:31,693 --> 00:16:32,634
In this case, you have

497
00:16:32,634 --> 00:16:34,016
two different options for this exercise.

498
00:16:34,016 --> 00:16:36,939
You have the first one that

499
00:16:36,939 --> 00:16:38,045
we will not share,

500
00:16:38,045 --> 00:16:39,587
in the stream, and then there

501
00:16:39,587 --> 00:16:41,469
is one which we will show.

502
00:16:41,469 --> 00:16:42,189
So this is the one that we

503
00:16:42,189 --> 00:16:43,371
will show on the stream.

504
00:16:43,371 --> 00:16:44,292
If you don't wish that

505
00:16:44,292 --> 00:16:47,095
your username will be shown during the stream,

506
00:16:47,095 --> 00:16:48,196
you will work on the

507
00:16:49,117 --> 00:16:50,939
centralized workflow exercise repository.

508
00:16:50,939 --> 00:16:51,940
And if you don't mind,

509
00:16:51,940 --> 00:16:54,743
then please choose the recorded one.

510
00:16:54,743 --> 00:16:55,544
It will be fun to see

511
00:16:55,544 --> 00:16:57,166
a few people trying out this one as well,

512
00:16:57,166 --> 00:16:59,088
so that we can see a

513
00:16:59,088 --> 00:17:00,529
lot of different recipes that will be added.

514
00:17:02,592 --> 00:17:02,972
Okay.

515
00:17:07,087 --> 00:17:09,471
If you haven't already sent us

516
00:17:09,471 --> 00:17:10,833
a request to be added to

517
00:17:10,833 --> 00:17:12,155
the repository, please do so now.

518
00:17:12,155 --> 00:17:13,377
You find all the instructions here.

519
00:17:13,377 --> 00:17:15,400
We will then send you an invitation

520
00:17:15,400 --> 00:17:16,161
and then which you need to

521
00:17:16,161 --> 00:17:17,102
accept and then you can

522
00:17:17,102 --> 00:17:19,947
participate in this repository.

523
00:17:19,947 --> 00:17:23,352
And also one additional thing, by default,

524
00:17:23,352 --> 00:17:24,754
you might have the setting

525
00:17:24,754 --> 00:17:29,962
here to all activity, which is not

526
00:17:29,962 --> 00:17:31,064
what you want since that would mean

527
00:17:31,064 --> 00:17:32,125
that whenever someone creates

528
00:17:32,125 --> 00:17:33,267
a pull request or an issue

529
00:17:33,267 --> 00:17:34,749
in this repository, you will

530
00:17:34,749 --> 00:17:36,027
be spammed by emails

531
00:17:36,027 --> 00:17:38,470
So set it to participants and mentions.

532
00:17:39,491 --> 00:17:40,152
That's a good idea.

533
00:17:40,152 --> 00:17:41,554
Or you can also set it to ignore

534
00:17:41,554 --> 00:17:42,255
so that you don't get

535
00:17:42,255 --> 00:17:43,377
any notifications by email

536
00:17:43,377 --> 00:17:47,202
whenever something happens in the repository.

537
00:17:48,723 --> 00:17:49,004
OK.

538
00:17:50,446 --> 00:17:52,368
So much about the whole UI stuff in GitHub.

539
00:17:52,368 --> 00:17:53,570
But let's go to the lesson itself.

540
00:17:54,511 --> 00:17:55,652
So we will work now

541
00:17:55,652 --> 00:17:58,837
with this recipe cookbook.

542
00:17:58,837 --> 00:18:00,539
So it's basically a collection

543
00:18:00,539 --> 00:18:02,541
of different recipes in this repository.

544
00:18:02,541 --> 00:18:05,325
Let me open that repository once again.

545
00:18:06,301 --> 00:18:07,182
So if you go now to the

546
00:18:07,182 --> 00:18:10,246
code, I'm now in this repository

547
00:18:10,246 --> 00:18:11,047
that those of you will work

548
00:18:11,047 --> 00:18:13,710
with who choose to work individually with us.

549
00:18:13,710 --> 00:18:14,571
We are in the centralized

550
00:18:14,571 --> 00:18:17,475
workflow exercise repository.

551
00:18:17,475 --> 00:18:18,336
And you can see here, we

552
00:18:18,336 --> 00:18:19,777
have here multiple directories,

553
00:18:19,777 --> 00:18:22,681
which all contain different recipes.

554
00:18:22,681 --> 00:18:24,183
So if I let's go to salads, for instance,

555
00:18:24,183 --> 00:18:25,645
and I will just now open

556
00:18:25,645 --> 00:18:27,266
a random document, let's say the

557
00:18:27,266 --> 00:18:28,368
fruit salad in this case.

558
00:18:29,309 --> 00:18:31,031
And you can see, we have here this file,

559
00:18:31,031 --> 00:18:32,653
which contains an ingredient section

560
00:18:32,653 --> 00:18:34,716
and also instructions, which are

561
00:18:34,716 --> 00:18:35,937
in this case, relatively detailed.

562
00:18:36,777 --> 00:18:37,878
Now, we don't ask you to spend

563
00:18:37,878 --> 00:18:39,280
that much time on creating

564
00:18:39,280 --> 00:18:41,522
a very sophisticated recipe.

565
00:18:41,522 --> 00:18:43,084
It can be something super simple.

566
00:18:43,084 --> 00:18:43,825
The idea is just that

567
00:18:43,825 --> 00:18:45,467
you contribute or make a pull

568
00:18:45,467 --> 00:18:46,428
request to a new recipe.

569
00:18:47,469 --> 00:18:50,352
Now, some of the steps

570
00:18:50,352 --> 00:18:51,593
you're already familiar with.

571
00:18:51,593 --> 00:18:52,775
So you will have to

572
00:18:52,775 --> 00:18:55,318
first clone a repository, then create a branch,

573
00:18:55,318 --> 00:18:56,399
then commit the changes to

574
00:18:56,399 --> 00:18:58,121
a new branch, and then submit a pull request.

575
00:18:58,121 --> 00:19:00,483
So that's what you've done so far already.

576
00:19:00,483 --> 00:19:01,505
But then the new concepts here

577
00:19:01,505 --> 00:19:06,430
will be how to push to this remote repository.

578
00:19:07,642 --> 00:19:09,484
creates an issue, cross-reference

579
00:19:09,484 --> 00:19:11,267
the issue in the pull request,

580
00:19:11,267 --> 00:19:13,109
and then break the pull request.

581
00:19:13,109 --> 00:19:14,611
The instructions are here, and

582
00:19:14,611 --> 00:19:17,114
then you also find the solutions down here.

583
00:19:17,114 --> 00:19:19,257
And checking the solutions is not cheating,

584
00:19:19,257 --> 00:19:20,178
so please just have a look

585
00:19:20,178 --> 00:19:23,342
at the solutions and follow them

586
00:19:23,342 --> 00:19:24,984
in order to contribute.

587
00:19:26,566 --> 00:19:27,247
Is there anything else we

588
00:19:27,247 --> 00:19:28,889
should mention, or should we just

589
00:19:28,889 --> 00:19:30,351
go into the exercises?

590
00:19:30,351 --> 00:19:31,993
[name], did I forget anything?

591
00:19:33,295 --> 00:19:34,156
Not that I'm aware.

592
00:19:34,156 --> 00:19:34,797
That should be good.

593
00:19:36,869 --> 00:19:38,871
Okay, so in this case, we

594
00:19:38,871 --> 00:19:41,093
will then start the exercises.

595
00:19:43,956 --> 00:19:45,518
It's now 20 past, so we

596
00:19:45,518 --> 00:19:46,839
give you roughly half an hour.

597
00:19:46,839 --> 00:19:49,362
So it's 10 to 12 in

598
00:19:49,362 --> 00:19:51,164
Central European time, whatever that

599
00:19:51,164 --> 00:19:54,747
is in your time area.

600
00:19:54,747 --> 00:19:55,769
We will then get back to

601
00:19:55,769 --> 00:19:57,731
you on the screen and then

602
00:19:57,731 --> 00:19:59,052
start the break for 10 minutes.

603
00:19:59,052 --> 00:20:00,093
So please use that break and

604
00:20:00,093 --> 00:20:02,516
then we will go for this exercise ourselves.

605
00:20:02,516 --> 00:20:04,460
So [name] will then contribute

606
00:20:04,460 --> 00:20:06,624
a new recipe to the repository

607
00:20:06,624 --> 00:20:09,670
and then we will go for the exercise together.

608
00:20:11,714 --> 00:20:14,359
Okay, then I'll leave you

609
00:20:14,359 --> 00:20:16,944
to the exercises and see you in half an hour.

610
00:20:16,944 --> 00:20:17,305
Bye.

611
00:20:20,288 --> 00:20:21,950
Hey, welcome back from the exercises.

612
00:20:23,513 --> 00:20:24,674
You can see that there is

613
00:20:24,674 --> 00:20:25,996
already a lot of nice

614
00:20:25,996 --> 00:20:27,499
contributions to the recipe book.

615
00:20:27,499 --> 00:20:28,820
So thank you all for contributing.

616
00:20:30,022 --> 00:20:30,964
So you can see here in

617
00:20:30,964 --> 00:20:32,426
this repository, the central aspect

618
00:20:32,426 --> 00:20:34,389
for exercises recorded repository,

619
00:20:34,389 --> 00:20:35,570
there's a bunch of issues, a

620
00:20:35,570 --> 00:20:37,053
lot of them have already been closed as well.

621
00:20:37,854 --> 00:20:39,035
There's a lot of pull

622
00:20:39,035 --> 00:20:40,377
requests, many of them have

623
00:20:40,377 --> 00:20:42,260
also been already matched.

624
00:20:42,260 --> 00:20:43,382
So thank you all for contributing.

625
00:20:43,382 --> 00:20:44,043
That looks really good.

626
00:20:45,164 --> 00:20:46,066
Before we go into the break

627
00:20:46,066 --> 00:20:47,488
in 30 seconds, let me just

628
00:20:47,488 --> 00:20:50,056
quickly show you the graph.

629
00:20:50,056 --> 00:20:52,159
So we can go here on insights

630
00:20:52,159 --> 00:20:53,280
and the repository, and you can

631
00:20:53,280 --> 00:20:54,061
go to the network.

632
00:20:55,062 --> 00:20:56,083
And that gives us a very

633
00:20:56,083 --> 00:20:58,326
good overview of the different

634
00:20:58,326 --> 00:21:00,128
branches and who's working on what.

635
00:21:00,128 --> 00:21:01,410
So we can see here the main branch,

636
00:21:01,410 --> 00:21:02,111
and then we see here

637
00:21:02,111 --> 00:21:04,013
already some merged branches.

638
00:21:04,013 --> 00:21:05,014
This is the other one, for

639
00:21:05,014 --> 00:21:06,376
instance, and we have some

640
00:21:06,376 --> 00:21:07,397
branches here, which are open.

641
00:21:09,400 --> 00:21:10,020
So we can see there's

642
00:21:10,020 --> 00:21:11,202
a lot of contributions already made.

643
00:21:12,604 --> 00:21:13,124
Okay.

644
00:21:13,124 --> 00:21:14,828
So let's go into the break.

645
00:21:14,828 --> 00:21:16,496
for 10 minutes and afterwards,

646
00:21:16,496 --> 00:21:18,284
[name] will create his own pull

647
00:21:18,284 --> 00:21:19,208
request and we will discuss

648
00:21:19,208 --> 00:21:20,353
the whole exercise in detail.

649
00:21:22,423 --> 00:21:23,000
See you then, bye.

650
00:21:25,482 --> 00:21:26,904
Okay, welcome back, everyone.

651
00:21:28,926 --> 00:21:29,647
I see that a lot of

652
00:21:29,647 --> 00:21:31,430
you have already submitted very nice recipes.

653
00:21:32,311 --> 00:21:33,052
Thank you all for that.

654
00:21:34,173 --> 00:21:35,415
And I have seen that there

655
00:21:35,415 --> 00:21:36,836
was a couple of questions

656
00:21:36,836 --> 00:21:38,138
about these automated tests.

657
00:21:39,059 --> 00:21:40,161
So if you know, look here

658
00:21:40,161 --> 00:21:42,404
at the repository again.

659
00:21:42,404 --> 00:21:43,545
So I'm here to centralize

660
00:21:43,545 --> 00:21:44,646
that exercise is recorded one.

661
00:21:45,588 --> 00:21:46,629
You can see that some of

662
00:21:46,629 --> 00:21:48,171
these recipes have like this

663
00:21:48,171 --> 00:21:49,713
green checkmark and some of them

664
00:21:49,713 --> 00:21:51,615
have this red X, which

665
00:21:51,615 --> 00:21:52,657
we haven't discussed yet.

666
00:21:52,657 --> 00:21:53,878
So let's, let's have a look.

667
00:21:53,878 --> 00:21:54,699
Let's let's click on it

668
00:21:54,699 --> 00:21:55,320
and see what's happening.

669
00:21:56,228 --> 00:21:56,909
So we have here this

670
00:21:56,909 --> 00:21:59,252
really nice biryani recipe that has been added.

671
00:22:00,174 --> 00:22:04,520
And if you scroll down, aha, okay.

672
00:22:04,520 --> 00:22:05,321
It tells us that there

673
00:22:05,321 --> 00:22:06,042
have been some checks.

674
00:22:07,144 --> 00:22:08,365
We'll discuss them in a minute.

675
00:22:08,365 --> 00:22:09,106
And if you look at them,

676
00:22:10,629 --> 00:22:12,391
it gives us an error message.

677
00:22:12,391 --> 00:22:12,731
Okay.

678
00:22:14,875 --> 00:22:16,617
Looks like the instructions are missing.

679
00:22:17,761 --> 00:22:21,286
Okay, so what is this test here?

680
00:22:21,286 --> 00:22:22,467
That's something that we'll discuss

681
00:22:22,467 --> 00:22:23,489
in more detail later on.

682
00:22:23,489 --> 00:22:24,130
And also there will be

683
00:22:24,130 --> 00:22:25,392
a whole section about this in

684
00:22:25,392 --> 00:22:28,356
a later stage of this workshop, so not today.

685
00:22:29,297 --> 00:22:31,640
But just to give you a hint already,

686
00:22:31,640 --> 00:22:33,683
so on GitHub, we can

687
00:22:35,225 --> 00:22:37,508
create additional tests, which are

688
00:22:37,508 --> 00:22:41,594
here in this .github workflow directory.

689
00:22:41,594 --> 00:22:42,435
So let's click on that.

690
00:22:44,170 --> 00:22:45,892
And here we have a file,

691
00:22:45,892 --> 00:22:48,114
which is called check-recipes.yaml.

692
00:22:49,055 --> 00:22:50,076
So let's open that.

693
00:22:52,578 --> 00:22:55,381
And this now contains the tests

694
00:22:55,381 --> 00:22:56,622
that we run every time you

695
00:22:56,622 --> 00:22:57,763
create a pull request and if

696
00:22:57,763 --> 00:23:00,246
you push towards the repository.

697
00:23:00,246 --> 00:23:01,187
So at the beginning, it gives

698
00:23:01,187 --> 00:23:02,228
us a name of this check.

699
00:23:02,228 --> 00:23:03,870
In this case, it's just basic recipe check.

700
00:23:04,830 --> 00:23:06,152
We can specify which branches

701
00:23:06,152 --> 00:23:07,733
we want to run these checks on,

702
00:23:07,733 --> 00:23:09,435
on main in this case.

703
00:23:11,018 --> 00:23:12,760
And then down here, we can

704
00:23:12,760 --> 00:23:14,422
then specify on what kind of

705
00:23:14,422 --> 00:23:15,223
server this is running.

706
00:23:15,223 --> 00:23:16,785
So this is something that GitHub provides.

707
00:23:16,785 --> 00:23:17,726
So in this case, we just

708
00:23:17,726 --> 00:23:19,568
use a standard Linux server.

709
00:23:20,429 --> 00:23:21,290
And then at the very end,

710
00:23:21,290 --> 00:23:22,511
this is the relevant part.

711
00:23:22,511 --> 00:23:24,293
We run a file, which is

712
00:23:24,293 --> 00:23:26,496
called Python check recipes.

713
00:23:26,496 --> 00:23:27,237
And if you go back to

714
00:23:27,237 --> 00:23:28,838
the repository, you can see that

715
00:23:28,838 --> 00:23:29,559
there is this file.

716
00:23:31,461 --> 00:23:32,382
Now, if you don't know

717
00:23:32,382 --> 00:23:33,824
Python syntax, that's perfectly fine.

718
00:23:33,824 --> 00:23:34,605
You don't have to understand

719
00:23:34,605 --> 00:23:35,947
what's going on here.

720
00:23:35,947 --> 00:23:36,687
So let me just tell you

721
00:23:36,687 --> 00:23:38,339
the only thing that this file does

722
00:23:38,339 --> 00:23:40,061
is it checks whether there

723
00:23:40,061 --> 00:23:41,162
is an ingredients and an

724
00:23:41,162 --> 00:23:43,745
instruction section in the recipe.

725
00:23:43,745 --> 00:23:44,326
That's all it does.

726
00:23:45,147 --> 00:23:46,048
And then if there is one,

727
00:23:46,048 --> 00:23:47,109
it gives a green check.

728
00:23:47,109 --> 00:23:48,270
And then if there isn't one,

729
00:23:48,270 --> 00:23:49,391
then it gives this red cross.

730
00:23:50,713 --> 00:23:51,814
Now, this is of course

731
00:23:51,814 --> 00:23:53,536
a somehow silly example, like

732
00:23:53,536 --> 00:23:55,198
you would use this later on, for instance,

733
00:23:55,198 --> 00:23:57,521
if you have tests written for your code

734
00:23:57,521 --> 00:23:58,341
and you want to make sure

735
00:23:58,341 --> 00:23:59,182
that every time there's a

736
00:23:59,182 --> 00:24:00,944
new contribution to your code,

737
00:24:00,944 --> 00:24:02,366
that this doesn't break any

738
00:24:02,366 --> 00:24:04,428
of the existing functionalities of

739
00:24:04,428 --> 00:24:05,089
your code base.

740
00:24:05,980 --> 00:24:06,861
But in this particular case,

741
00:24:06,861 --> 00:24:07,923
we can now have a look

742
00:24:07,923 --> 00:24:09,104
why this exactly happened.

743
00:24:10,566 --> 00:24:12,829
So let's go to the changes.

744
00:24:12,829 --> 00:24:13,971
We can click on file changed.

745
00:24:16,835 --> 00:24:18,076
And we see, okay, the problem

746
00:24:18,076 --> 00:24:21,741
is that this user outsmarted us.

747
00:24:21,741 --> 00:24:23,924
Like the check is really stupid

748
00:24:23,924 --> 00:24:24,905
and just checks whether there's

749
00:24:24,905 --> 00:24:27,529
a hashtag, hashtag ingredients

750
00:24:27,529 --> 00:24:28,811
and instruction section.

751
00:24:28,811 --> 00:24:30,212
What we haven't thought of is

752
00:24:30,212 --> 00:24:31,955
that you might use Unicode characters here,

753
00:24:32,796 --> 00:24:33,697
which look really nice,

754
00:24:33,697 --> 00:24:35,179
but unfortunately our tests have

755
00:24:35,179 --> 00:24:35,920
not been prepared for.

756
00:24:39,258 --> 00:24:40,860
So one could change that

757
00:24:40,860 --> 00:24:44,225
by suggesting to, there's a refresh button.

758
00:24:44,225 --> 00:24:45,106
Let's click that.

759
00:24:45,106 --> 00:24:46,509
Someone has made changes to it right now.

760
00:24:50,875 --> 00:24:52,657
Okay, these things have not been changed,

761
00:24:52,657 --> 00:24:53,919
but what we could do now

762
00:24:53,919 --> 00:24:55,121
is to suggest to make the

763
00:24:55,121 --> 00:24:57,004
changes here, to remove this

764
00:24:57,004 --> 00:24:59,527
Unicode character here, and then

765
00:24:59,527 --> 00:25:00,929
the tests would pass.

766
00:25:01,851 --> 00:25:02,632
So this was just a

767
00:25:02,632 --> 00:25:07,419
quick kind of introduction to tests.

768
00:25:07,419 --> 00:25:08,380
We'll discuss it in further

769
00:25:08,380 --> 00:25:08,961
detail later on,

770
00:25:10,207 --> 00:25:10,607
Okay.

771
00:25:12,269 --> 00:25:13,410
I think it's time that we

772
00:25:13,410 --> 00:25:15,592
now discuss the whole exercise

773
00:25:15,592 --> 00:25:16,412
in further detail.

774
00:25:16,412 --> 00:25:18,714
So [name], can I give you

775
00:25:18,714 --> 00:25:21,116
the mic and you would focus for the exercise?

776
00:25:22,678 --> 00:25:22,898
Sure.

777
00:25:24,899 --> 00:25:25,200
Okay.

778
00:25:26,981 --> 00:25:28,302
And I guess we can switch

779
00:25:28,302 --> 00:25:29,683
to my screen share.

780
00:25:33,387 --> 00:25:34,307
Oh, sorry.

781
00:25:36,289 --> 00:25:38,331
Let's unpause that, resume.

782
00:25:38,331 --> 00:25:39,792
Okay, there we go.

783
00:25:40,717 --> 00:25:42,439
All right, so we're working

784
00:25:42,439 --> 00:25:45,322
our way through the exercise tasks.

785
00:25:45,322 --> 00:25:47,023
We begin with opening an issue.

786
00:25:47,023 --> 00:25:49,206
And so let's find a

787
00:25:49,206 --> 00:25:52,108
particular issue that we have

788
00:25:52,108 --> 00:25:53,610
that needs modifying.

789
00:25:53,610 --> 00:25:54,431
So here I'm looking at

790
00:25:54,431 --> 00:25:55,552
the guacamole recipe.

791
00:25:56,493 --> 00:25:58,595
And I happen to think that

792
00:25:58,595 --> 00:26:00,076
it needs some garlic to give

793
00:26:00,076 --> 00:26:00,957
it a little more kick.

794
00:26:02,279 --> 00:26:05,382
So let's go ahead and do that.

795
00:26:05,382 --> 00:26:06,623
So we'll create an issue here.

796
00:26:08,257 --> 00:26:09,841
And let me just resize this

797
00:26:09,841 --> 00:26:10,884
so we can see that.

798
00:26:10,884 --> 00:26:11,787
Here's our new issue.

799
00:26:14,915 --> 00:26:18,024
And we'll call it guacamole

800
00:26:18,024 --> 00:26:22,215
needs more garlic or it needs garlic.

801
00:26:23,917 --> 00:26:33,370
Okay, guacamole tastes better if

802
00:26:34,411 --> 00:26:35,753
it has garlic.

803
00:26:36,754 --> 00:26:44,044
So we should include it as an ingredient.

804
00:26:46,428 --> 00:26:48,370
Okay, so there's our issue

805
00:26:48,370 --> 00:26:50,193
that we can reference and we'll

806
00:26:50,193 --> 00:26:51,915
go ahead and click on create there.

807
00:26:53,262 --> 00:26:55,625
All right, now heading back

808
00:26:55,625 --> 00:26:56,425
over to the code.

809
00:26:58,508 --> 00:27:00,129
So here we're not working

810
00:27:00,129 --> 00:27:02,772
locally, so we're going to skip step two.

811
00:27:02,772 --> 00:27:05,155
If you are working locally,

812
00:27:05,155 --> 00:27:10,260
then you need to clone using the URL here.

813
00:27:11,101 --> 00:27:13,424
And that's covered elsewhere, so

814
00:27:13,424 --> 00:27:15,346
I'm not going to go over that right now.

815
00:27:15,346 --> 00:27:16,387
But we need to create our

816
00:27:16,387 --> 00:27:18,409
new branch that's going to contain our changes.

817
00:27:19,942 --> 00:27:22,887
So here we can just type

818
00:27:22,887 --> 00:27:28,035
in, and I'm all for descriptive naming.

819
00:27:28,035 --> 00:27:34,825
So guacamole, add garlic.

820
00:27:35,687 --> 00:27:36,748
Okay, and so we can say

821
00:27:36,748 --> 00:27:40,755
create that branch from Maine.

822
00:27:42,097 --> 00:27:42,878
And so there we go.

823
00:27:44,680 --> 00:27:45,662
So now we're working in

824
00:27:45,662 --> 00:27:47,926
this branch rather than main.

825
00:27:47,926 --> 00:27:49,488
You can see that it doesn't say main here.

826
00:27:49,488 --> 00:27:51,131
It says guacamole, add garlic.

827
00:27:51,973 --> 00:27:52,714
And so now we're going to

828
00:27:52,714 --> 00:27:54,377
go ahead and make this modification.

829
00:27:56,200 --> 00:27:57,122
If you're working locally, this

830
00:27:57,122 --> 00:27:57,803
would be where you would

831
00:27:57,803 --> 00:28:00,207
edit the file directly, but we're

832
00:28:00,207 --> 00:28:02,451
going to do that in GitHub.

833
00:28:03,613 --> 00:28:05,957
So here's the guacamole recipe

834
00:28:05,957 --> 00:28:08,141
here, and we can go and edit it.

835
00:28:08,141 --> 00:28:09,523
And there's the edit this file.

836
00:28:12,406 --> 00:28:14,209
And so we can go down

837
00:28:14,209 --> 00:28:25,529
here and add two cloves of garlic.

838
00:28:27,453 --> 00:28:28,555
And then additionally in

839
00:28:28,555 --> 00:28:34,465
the instructions, mince garlic.

840
00:28:37,533 --> 00:28:39,535
Okay, so there we go.

841
00:28:39,535 --> 00:28:41,517
And we can then go back up

842
00:28:41,517 --> 00:28:43,159
here and go to commit changes.

843
00:28:46,242 --> 00:28:47,704
And so then when our

844
00:28:47,704 --> 00:28:53,910
commit message add garlic, and we

845
00:28:53,910 --> 00:28:55,392
can add an extended description,

846
00:28:55,392 --> 00:28:56,513
but I think it's pretty simple.

847
00:28:57,654 --> 00:29:00,016
Here, we can add garlic

848
00:29:01,658 --> 00:29:06,443
as an ingredient and include.

849
00:29:07,975 --> 00:29:09,839
instruction item.

850
00:29:11,041 --> 00:29:11,361
OK.

851
00:29:12,484 --> 00:29:17,233
So we can then commit that.

852
00:29:17,233 --> 00:29:18,295
There is also an option.

853
00:29:18,295 --> 00:29:19,337
We could have skipped the

854
00:29:19,337 --> 00:29:22,022
branch creation previously and just

855
00:29:22,022 --> 00:29:25,729
done that right here and given it a new one.

856
00:29:25,729 --> 00:29:29,356
And that's fine if you're just doing one

857
00:29:29,356 --> 00:29:32,340
one change, but in this case,

858
00:29:32,340 --> 00:29:33,281
you often may want to

859
00:29:33,281 --> 00:29:34,543
have multiple files change and

860
00:29:34,543 --> 00:29:37,507
so it's easier to use a

861
00:29:37,507 --> 00:29:39,330
dedicated branch that you've already created.

862
00:29:40,472 --> 00:29:42,214
Okay, so then we'll commit changes.

863
00:29:46,099 --> 00:29:50,546
Okay, and so then we can see that

864
00:29:50,546 --> 00:29:52,528
that is now added there and

865
00:29:52,528 --> 00:29:54,391
we have the instruction there.

866
00:29:55,613 --> 00:29:57,996
Okay, and then going back

867
00:29:59,663 --> 00:30:01,104
We can see that it says

868
00:30:01,104 --> 00:30:05,048
now that this branch is one commit ahead.

869
00:30:06,189 --> 00:30:07,210
And because of that, we

870
00:30:07,210 --> 00:30:08,071
have the option here to

871
00:30:08,071 --> 00:30:11,414
contribute our changes back to the main branch.

872
00:30:11,414 --> 00:30:13,856
And so let's see, looking

873
00:30:13,856 --> 00:30:16,158
at the instructions here, we've

874
00:30:16,158 --> 00:30:17,939
created a change on the new branch.

875
00:30:18,820 --> 00:30:21,142
Oh, we forgot to commit

876
00:30:21,142 --> 00:30:22,484
the cross-reference to the issue.

877
00:30:23,484 --> 00:30:25,807
So let's go back and do that real quick.

878
00:30:25,807 --> 00:30:27,868
First of all, the issue is number 23.

879
00:30:27,868 --> 00:30:29,650
We can see that here.

880
00:30:29,650 --> 00:30:33,117
Then let's come back over and

881
00:30:33,117 --> 00:30:36,303
go to this commit.

882
00:30:36,303 --> 00:30:42,715
Okay.

883
00:30:45,732 --> 00:30:46,753
Well, I think we'll just

884
00:30:47,694 --> 00:30:49,997
reference that in the pull request.

885
00:30:49,997 --> 00:30:51,800
So here we have the option

886
00:30:51,800 --> 00:30:52,901
then to create the pull request.

887
00:30:52,901 --> 00:30:54,002
As you can see, we can

888
00:30:54,002 --> 00:30:56,225
create it from the commit itself,

889
00:30:56,225 --> 00:31:00,731
or we also have the option to,

890
00:31:00,731 --> 00:31:03,274
if we're in that particular branch,

891
00:31:04,215 --> 00:31:07,239
to use the contribute option here.

892
00:31:08,120 --> 00:31:10,963
So let's do that open pull request.

893
00:31:10,963 --> 00:31:11,884
Let's make sure.

894
00:31:11,884 --> 00:31:13,326
Yeah, open pull request towards

895
00:31:13,326 --> 00:31:14,828
the main branch, step six.

896
00:31:16,732 --> 00:31:17,933
open pull request.

897
00:31:19,775 --> 00:31:22,698
Okay, so here we have the description.

898
00:31:22,698 --> 00:31:31,346
This solves the issue number 23,

899
00:31:31,346 --> 00:31:33,409
and it automatically knows where

900
00:31:33,409 --> 00:31:34,009
that is for us.

901
00:31:35,230 --> 00:31:36,131
And then we can do this.

902
00:31:36,992 --> 00:31:41,216
Okay, so we now can then

903
00:31:41,216 --> 00:31:42,958
create the pull request.

904
00:31:47,107 --> 00:31:51,973
Okay, so now it is telling

905
00:31:51,973 --> 00:31:53,535
us that we have a review required.

906
00:31:54,335 --> 00:31:55,217
And it is also, as we

907
00:31:55,217 --> 00:31:56,838
can see right here, that it

908
00:31:56,838 --> 00:32:00,423
is performing the basic recipe checks.

909
00:32:00,423 --> 00:32:04,547
And since the ingredients heading

910
00:32:04,547 --> 00:32:08,032
and the instructions headings were

911
00:32:08,032 --> 00:32:09,954
both there properly, then

912
00:32:09,954 --> 00:32:12,737
that particular pass check passes.

913
00:32:13,758 --> 00:32:15,781
[name], do you want to switch

914
00:32:15,781 --> 00:32:16,962
to your share and do the review?

915
00:32:17,870 --> 00:32:18,897
We can.

916
00:32:18,897 --> 00:32:20,227
First, what you could do is

917
00:32:20,227 --> 00:32:21,516
to assign me as a reviewer.

918
00:32:21,516 --> 00:32:22,382
That's something we could share.

919
00:32:22,382 --> 00:32:22,986
Sure, yeah.

920
00:32:24,755 --> 00:32:25,616
OK.

921
00:32:28,481 --> 00:32:31,144
Yes, now this we have this

922
00:32:31,144 --> 00:32:32,446
window is very narrow, so

923
00:32:32,446 --> 00:32:36,412
that assignment is shows up in the bottom.

924
00:32:36,412 --> 00:32:37,554
If we were to actually have

925
00:32:37,554 --> 00:32:40,598
a normal sized window that's going

926
00:32:40,598 --> 00:32:42,101
to show up on the right hand

927
00:32:42,101 --> 00:32:45,566
side here so we can see here reviewers.

928
00:32:45,566 --> 00:32:46,848
And so then it makes a

929
00:32:46,848 --> 00:32:49,231
suggestion here and we can request that.

930
00:32:49,231 --> 00:32:51,274
We also click here and search

931
00:32:51,274 --> 00:32:52,997
for or choose a user that way.

932
00:32:52,997 --> 00:32:54,539
So we'll go ahead and click on

933
00:32:54,539 --> 00:32:57,303
[name] there.

934
00:32:57,303 --> 00:33:00,508
And so he is now listed

935
00:33:00,508 --> 00:33:02,531
as a reviewer and will

936
00:33:02,531 --> 00:33:04,434
hopefully approve our changes.

937
00:33:06,938 --> 00:33:08,060
So over to you, [name].

938
00:33:10,564 --> 00:33:11,305
Okay, thank you.

939
00:33:12,848 --> 00:33:14,049
So we'll now wait until

940
00:33:15,932 --> 00:33:16,914
I'm sharing the screen again.

941
00:33:21,401 --> 00:33:22,082
Okay, here we go.

942
00:33:23,615 --> 00:33:24,896
Nice, so I'm now still

943
00:33:24,896 --> 00:33:25,897
in the same repository.

944
00:33:25,897 --> 00:33:27,559
And I see in the issues, I see

945
00:33:27,559 --> 00:33:31,704
that [name] has created this issue

946
00:33:31,704 --> 00:33:32,424
where he says that the

947
00:33:32,424 --> 00:33:33,866
guacamole recipe needs more garlic,

948
00:33:36,309 --> 00:33:37,210
which is quite nice.

949
00:33:37,210 --> 00:33:38,211
I can already see that there

950
00:33:38,211 --> 00:33:40,073
is a pull request here linked to it.

951
00:33:40,073 --> 00:33:41,314
So that's because [name] has

952
00:33:41,314 --> 00:33:43,897
now linked the pull request

953
00:33:43,897 --> 00:33:45,218
to this issue number.

954
00:33:46,439 --> 00:33:48,021
So that's what shows up already here.

955
00:33:48,021 --> 00:33:49,723
So I could now click on that directly.

956
00:33:50,665 --> 00:33:51,686
But of course, I could also

957
00:33:51,686 --> 00:33:52,727
find the same thing if I

958
00:33:52,727 --> 00:33:54,149
click on pull request here, it

959
00:33:54,149 --> 00:33:54,849
will also show up.

960
00:33:55,810 --> 00:33:56,932
So I will now open this file.

961
00:33:59,554 --> 00:34:01,256
Okay, so let's have a look.

962
00:34:02,457 --> 00:34:03,318
So what are the first things

963
00:34:03,318 --> 00:34:04,600
you should do when you look

964
00:34:04,600 --> 00:34:07,563
at a pull request as a reviewer?

965
00:34:07,563 --> 00:34:08,824
So first of all, of course,

966
00:34:08,824 --> 00:34:10,005
let's look at the title.

967
00:34:10,005 --> 00:34:11,086
Does this seem to make sense?

968
00:34:12,107 --> 00:34:13,669
Yeah, that sounds reasonable.

969
00:34:13,669 --> 00:34:14,630
That's something we can work on.

970
00:34:15,631 --> 00:34:16,332
It's not some kind of

971
00:34:16,332 --> 00:34:17,253
spam or something which has

972
00:34:17,253 --> 00:34:18,394
no relevance for the project.

973
00:34:20,163 --> 00:34:21,204
Now, if you scroll down, what

974
00:34:21,204 --> 00:34:21,705
do we see here?

975
00:34:22,966 --> 00:34:25,809
We see the initial message

976
00:34:25,809 --> 00:34:27,591
that [name] has written.

977
00:34:28,552 --> 00:34:30,094
I can click here to see the commits.

978
00:34:30,094 --> 00:34:31,555
So in this case, it's one simple commit.

979
00:34:31,555 --> 00:34:32,416
So this would then show

980
00:34:32,416 --> 00:34:34,578
me the commit message, which

981
00:34:34,578 --> 00:34:35,800
you remember from the previous days.

982
00:34:37,862 --> 00:34:39,544
Now, since we have a check,

983
00:34:39,544 --> 00:34:40,885
it also shows me whether

984
00:34:40,885 --> 00:34:41,706
the checks have passed.

985
00:34:41,706 --> 00:34:42,827
In this case, they have.

986
00:34:42,827 --> 00:34:44,589
So everything seems to be fine.

987
00:34:45,430 --> 00:34:46,711
And now the most important tab

988
00:34:46,711 --> 00:34:48,533
is this one called Files Changed.

989
00:34:49,576 --> 00:34:50,557
because that actually shows me

990
00:34:50,557 --> 00:34:51,438
the changes in the code.

991
00:34:51,438 --> 00:34:54,761
So I will click on that now.

992
00:34:54,761 --> 00:34:55,102
Okay.

993
00:34:59,046 --> 00:35:00,347
So in this tab, it shows

994
00:35:00,347 --> 00:35:02,309
me which documents or which

995
00:35:02,309 --> 00:35:04,131
files have been changed in this pull request.

996
00:35:04,131 --> 00:35:05,352
In this case, it's only one.

997
00:35:05,352 --> 00:35:07,054
It's in the site directory

998
00:35:07,054 --> 00:35:09,136
and it's the guacamole.md, so

999
00:35:09,136 --> 00:35:10,737
this markdown document.

1000
00:35:10,737 --> 00:35:12,039
If this pull request would

1001
00:35:12,039 --> 00:35:13,500
contain multiple files that

1002
00:35:13,500 --> 00:35:15,282
have contained changes, then they

1003
00:35:15,282 --> 00:35:16,343
would be listed down here.

1004
00:35:17,352 --> 00:35:18,233
So we could scroll down

1005
00:35:18,233 --> 00:35:20,014
and then multiple files would be listed here.

1006
00:35:20,975 --> 00:35:21,756
In this case, there was

1007
00:35:21,756 --> 00:35:23,337
only two lines which are added.

1008
00:35:24,378 --> 00:35:25,879
So if this pull request

1009
00:35:25,879 --> 00:35:26,900
would delete some lines or

1010
00:35:26,900 --> 00:35:29,422
rename them, they would also appear as red.

1011
00:35:29,422 --> 00:35:30,944
So you've probably already seen it.

1012
00:35:30,944 --> 00:35:32,145
If you have reviewed some

1013
00:35:32,145 --> 00:35:33,226
other pull requests, otherwise you

1014
00:35:33,226 --> 00:35:34,747
will see probably later.

1015
00:35:34,747 --> 00:35:37,189
So if like [name] would have said, okay,

1016
00:35:37,189 --> 00:35:38,770
I don't want any onions in my recipe,

1017
00:35:38,770 --> 00:35:39,971
then this would have been

1018
00:35:39,971 --> 00:35:45,977
shown as missing now in this pull request.

1019
00:35:45,977 --> 00:35:46,397
Okay.

1020
00:35:47,339 --> 00:35:50,722
So what should we do now as a reviewer?

1021
00:35:50,722 --> 00:35:51,383
First of all, we have a

1022
00:35:51,383 --> 00:35:52,464
look whether the changes in the

1023
00:35:52,464 --> 00:35:53,565
code make any sense.

1024
00:35:53,565 --> 00:35:54,346
So in this case, we see

1025
00:35:54,346 --> 00:35:56,168
that the only changes that happened

1026
00:35:56,168 --> 00:35:58,650
is that two cloves of garlic have been added.

1027
00:35:58,650 --> 00:35:59,791
And in the instructions, we

1028
00:35:59,791 --> 00:36:02,234
see that the garlic needs to be minced.

1029
00:36:02,234 --> 00:36:03,655
So that's very simple.

1030
00:36:03,655 --> 00:36:04,876
There's not many things going on here.

1031
00:36:05,877 --> 00:36:06,738
So in this case, I can

1032
00:36:06,738 --> 00:36:07,599
then click on review.

1033
00:36:09,521 --> 00:36:11,883
And since it's just very small changes,

1034
00:36:11,883 --> 00:36:13,005
I will just approve them

1035
00:36:13,005 --> 00:36:15,507
right away and write a nice message.

1036
00:36:24,953 --> 00:36:25,674
something like that.

1037
00:36:28,098 --> 00:36:29,520
And I can submit a review

1038
00:36:29,520 --> 00:36:32,344
and say that I approve this request.

1039
00:36:34,948 --> 00:36:35,670
Now, I think it's always

1040
00:36:35,670 --> 00:36:37,993
very important to be very polite

1041
00:36:37,993 --> 00:36:39,996
since in this case, it didn't

1042
00:36:39,996 --> 00:36:42,320
take [name] a lot of time to make this change,

1043
00:36:42,320 --> 00:36:43,882
but let's assume this is now

1044
00:36:43,882 --> 00:36:45,505
a very large code base and

1045
00:36:45,505 --> 00:36:50,092
[name] has spent weeks on working

1046
00:36:50,092 --> 00:36:51,434
on a specific feature that

1047
00:36:51,434 --> 00:36:53,422
he contributed to this project.

1048
00:36:53,422 --> 00:36:54,303
And if you then kind of

1049
00:36:54,303 --> 00:36:55,825
submit like after weeks of

1050
00:36:55,825 --> 00:36:57,468
work, it's pull request.

1051
00:36:57,468 --> 00:36:59,511
And then the only feedback you

1052
00:36:59,511 --> 00:37:00,612
get from a reviewer is like,

1053
00:37:00,612 --> 00:37:01,614
here's a spelling mistake.

1054
00:37:01,614 --> 00:37:03,316
And here is like something

1055
00:37:03,316 --> 00:37:04,338
which is not really relevant.

1056
00:37:04,338 --> 00:37:06,521
Then this can be quite discouraging.

1057
00:37:06,521 --> 00:37:08,103
So I think it's always very important

1058
00:37:08,103 --> 00:37:09,525
that the first time an

1059
00:37:09,525 --> 00:37:11,027
external person collaborates with

1060
00:37:11,027 --> 00:37:12,009
a new project that it gets

1061
00:37:12,870 --> 00:37:15,133
welcomed and gets a good impression.

1062
00:37:15,133 --> 00:37:16,916
Because otherwise, if you would

1063
00:37:16,916 --> 00:37:18,017
be now very nitpicky and

1064
00:37:18,017 --> 00:37:19,720
mean, then [name] would probably

1065
00:37:19,720 --> 00:37:20,901
think twice whether he would

1066
00:37:20,901 --> 00:37:22,163
want to contribute to that project again.

1067
00:37:23,712 --> 00:37:24,072
Okay.

1068
00:37:25,114 --> 00:37:25,995
And in this case, I

1069
00:37:25,995 --> 00:37:27,237
think everything seems fine.

1070
00:37:27,237 --> 00:37:28,578
So we can go ahead and

1071
00:37:28,578 --> 00:37:29,480
merge the pull request.

1072
00:37:33,745 --> 00:37:34,747
And guess what this merge is?

1073
00:37:34,747 --> 00:37:36,309
It's another commit, right?

1074
00:37:36,309 --> 00:37:38,552
So we can here create a commit message.

1075
00:37:38,552 --> 00:37:40,033
In this case, it already

1076
00:37:40,033 --> 00:37:43,959
has this proposal here, which

1077
00:37:43,959 --> 00:37:45,160
is simply merge pull request

1078
00:37:45,160 --> 00:37:47,283
number 24 from this branch

1079
00:37:47,283 --> 00:37:48,044
into the main branch.

1080
00:37:49,346 --> 00:37:50,127
So in this case, now we

1081
00:37:50,127 --> 00:37:51,829
click on that merge.

1082
00:37:56,011 --> 00:37:57,493
And now what I can do

1083
00:37:57,493 --> 00:37:58,694
is to delete the branch.

1084
00:37:58,694 --> 00:37:59,896
And that is safe to do,

1085
00:37:59,896 --> 00:38:01,078
because now the changes from

1086
00:38:01,078 --> 00:38:02,259
this particular branch are already

1087
00:38:02,259 --> 00:38:03,300
in the main branch, so all

1088
00:38:03,300 --> 00:38:05,443
the checks have been stored.

1089
00:38:05,443 --> 00:38:06,404
So I can now delete this one.

1090
00:38:08,347 --> 00:38:09,408
It's often good practice to

1091
00:38:09,408 --> 00:38:11,351
delete unused branches, stale

1092
00:38:11,351 --> 00:38:13,213
branches, so that you keep a good overview.

1093
00:38:14,575 --> 00:38:15,797
If you would now go to the code

1094
00:38:20,823 --> 00:38:22,025
and have a look here at

1095
00:38:22,025 --> 00:38:23,847
the history of our repository, then

1096
00:38:23,847 --> 00:38:24,668
we see here that

1097
00:38:25,897 --> 00:38:27,200
The latest commit now refers

1098
00:38:27,200 --> 00:38:28,162
to the launch pull request.

1099
00:38:31,309 --> 00:38:32,311
One thing we haven't mentioned

1100
00:38:32,311 --> 00:38:34,776
yet are draft pull requests.

1101
00:38:35,578 --> 00:38:36,681
I really quickly want to

1102
00:38:36,681 --> 00:38:37,763
mention them since that was one

1103
00:38:37,763 --> 00:38:38,725
point of the exercise.

1104
00:38:40,325 --> 00:38:40,906
Sure.

1105
00:38:42,729 --> 00:38:45,132
Certainly, there are times

1106
00:38:45,132 --> 00:38:47,376
when it's important that you

1107
00:38:47,376 --> 00:38:49,579
keep your collaborators informed

1108
00:38:49,579 --> 00:38:51,382
of your progress, that they can review it

1109
00:38:52,384 --> 00:38:55,248
and catch if you're heading

1110
00:38:55,248 --> 00:38:56,490
off in the wrong direction as

1111
00:38:56,490 --> 00:38:58,533
far as the approach that you're taking.

1112
00:38:58,533 --> 00:39:00,896
Or if you need feedback on

1113
00:39:00,896 --> 00:39:02,617
what you've done so far, it

1114
00:39:02,617 --> 00:39:06,842
can be useful to have draft pull requests

1115
00:39:06,842 --> 00:39:09,425
that are works in progress so

1116
00:39:09,425 --> 00:39:10,346
that you can get that

1117
00:39:10,346 --> 00:39:12,648
feedback and people can look and

1118
00:39:12,648 --> 00:39:14,450
see what you have so far.

1119
00:39:14,450 --> 00:39:17,273
And that can be very useful.

1120
00:39:17,273 --> 00:39:20,537
And the other issue is that, of course,

1121
00:39:20,537 --> 00:39:22,799
it's important not to commit

1122
00:39:22,799 --> 00:39:27,865
half working code into your tree, obviously.

1123
00:39:30,123 --> 00:39:31,084
Yeah, it's always important

1124
00:39:31,084 --> 00:39:32,546
to communicate with the maintainers

1125
00:39:32,546 --> 00:39:34,488
and the other people in the project

1126
00:39:34,488 --> 00:39:35,990
because the last thing you want

1127
00:39:35,990 --> 00:39:39,013
to do is to write 5,000 lines of codes

1128
00:39:39,013 --> 00:39:40,254
and then realize that no

1129
00:39:40,254 --> 00:39:41,256
one else is interested or no

1130
00:39:41,256 --> 00:39:42,577
one else actually wants that feature

1131
00:39:42,577 --> 00:39:43,658
or has a different plan.

1132
00:39:43,658 --> 00:39:45,440
So if the reviewer says, okay,

1133
00:39:45,440 --> 00:39:47,282
I want this repository to go

1134
00:39:47,282 --> 00:39:48,864
in a different direction, I'm

1135
00:39:48,864 --> 00:39:49,585
not interested in your

1136
00:39:49,585 --> 00:39:52,028
particular implementation, then it's

1137
00:39:52,028 --> 00:39:53,329
much better to ask in advance

1138
00:39:53,329 --> 00:39:55,071
instead of like working on

1139
00:39:55,071 --> 00:39:57,308
it without telling anyone else.

1140
00:39:57,308 --> 00:39:59,276
Also by communicating that way

1141
00:39:59,276 --> 00:40:00,420
you make sure that no one

1142
00:40:00,420 --> 00:40:02,066
else is duplicating your work.

1143
00:40:02,066 --> 00:40:04,194
So you save time as a, as a whole group.

1144
00:40:05,881 --> 00:40:06,222
Yeah.

1145
00:40:07,484 --> 00:40:08,945
- it's that's sorry

1146
00:40:08,945 --> 00:40:11,067
I just that's also why we

1147
00:40:11,067 --> 00:40:12,769
started out this with the creation

1148
00:40:12,769 --> 00:40:15,271
of an issue, so that if even before you begin.

1149
00:40:15,271 --> 00:40:17,233
- Writing your 5000

1150
00:40:17,233 --> 00:40:19,194
lines of code, you can get feedback

1151
00:40:19,194 --> 00:40:21,036
and not really opening an issue

1152
00:40:21,036 --> 00:40:23,858
to say this is a problem and then going off

1153
00:40:23,858 --> 00:40:26,100
and working to solve it, but

1154
00:40:26,100 --> 00:40:27,602
opening it up and including

1155
00:40:27,602 --> 00:40:28,262
a statement that you're

1156
00:40:28,262 --> 00:40:29,463
planning on approaching.

1157
00:40:29,463 --> 00:40:31,885
The solution

1158
00:40:31,885 --> 00:40:32,946
in a particular way, so you

1159
00:40:32,946 --> 00:40:34,548
can get feedback as soon as possible.

1160
00:40:36,910 --> 00:40:37,170
Exactly yeah.

1161
00:40:38,062 --> 00:40:38,865
[name], what do you think?

1162
00:40:38,865 --> 00:40:40,009
How large should pull requests

1163
00:40:40,009 --> 00:40:40,631
be on average?

1164
00:40:43,079 --> 00:40:46,671
They can be any size.

1165
00:40:47,714 --> 00:40:53,022
They should be cohesive, one unit.

1166
00:40:53,022 --> 00:40:55,866
You don't want to make a

1167
00:40:55,866 --> 00:40:59,952
set of changes that make

1168
00:40:59,952 --> 00:41:01,295
changes in three different places

1169
00:41:01,295 --> 00:41:02,817
in the file and commit

1170
00:41:02,817 --> 00:41:04,620
those all three separately if

1171
00:41:04,620 --> 00:41:07,324
they don't actually function collectively

1172
00:41:07,324 --> 00:41:10,208
as a unit.

1173
00:41:10,208 --> 00:41:13,533
For larger code base, yeah.

1174
00:41:13,533 --> 00:41:15,456
Ideally, your commits should

1175
00:41:15,456 --> 00:41:21,885
always leave the branch or in working state.

1176
00:41:23,147 --> 00:41:24,549
It's not always possible, but

1177
00:41:24,549 --> 00:41:25,951
it certainly is an ideal

1178
00:41:25,951 --> 00:41:26,873
that you should strive for.

1179
00:41:28,936 --> 00:41:30,378
Yeah, so you should have,

1180
00:41:30,378 --> 00:41:31,239
the better thing is to have

1181
00:41:31,239 --> 00:41:33,262
many small pull requests if that's possible.

1182
00:41:33,262 --> 00:41:35,302
Of course, sometimes it's just impossible.

1183
00:41:35,302 --> 00:41:36,845
If you have a very large change

1184
00:41:36,845 --> 00:41:38,168
that needs to be done to the code base,

1185
00:41:38,168 --> 00:41:39,832
but in principle, it's always

1186
00:41:39,832 --> 00:41:40,934
better to have many small

1187
00:41:40,934 --> 00:41:42,858
ones, since it's less work for

1188
00:41:42,858 --> 00:41:45,464
the reviewer to go through 50

1189
00:41:45,464 --> 00:41:46,667
or 100 lines of code and

1190
00:41:46,667 --> 00:41:47,930
understand what's going on than

1191
00:41:47,930 --> 00:41:49,593
going through a major rewrite of

1192
00:41:49,593 --> 00:41:50,275
the whole code base.

1193
00:41:53,021 --> 00:41:55,065
Also,

1194
00:41:56,210 --> 00:41:57,471
As you said, we should always

1195
00:41:57,471 --> 00:41:59,193
keep the pull requests cohesive in

1196
00:41:59,193 --> 00:42:01,375
a sense of like it's one particular feature

1197
00:42:01,375 --> 00:42:02,195
and then it doesn't matter

1198
00:42:02,195 --> 00:42:03,336
whether it's spread over three

1199
00:42:03,336 --> 00:42:04,718
or four different files or

1200
00:42:04,718 --> 00:42:06,039
whether it's just one.

1201
00:42:06,039 --> 00:42:06,900
That's much better to have

1202
00:42:06,900 --> 00:42:08,881
like one coherent feature in

1203
00:42:08,881 --> 00:42:09,882
one pull request than having

1204
00:42:09,882 --> 00:42:12,605
like three completely unrelated things

1205
00:42:12,605 --> 00:42:14,306
in one pull request.

1206
00:42:14,306 --> 00:42:16,909
So it's better to keep it that way

1207
00:42:16,909 --> 00:42:19,111
so that you have a, that

1208
00:42:19,111 --> 00:42:20,051
you also make it easier for

1209
00:42:20,051 --> 00:42:21,132
the review of what's going on.

1210
00:42:21,132 --> 00:42:21,733
Like if there are two

1211
00:42:21,733 --> 00:42:22,934
completely separate things from each

1212
00:42:22,934 --> 00:42:24,323
other in a pull request,

1213
00:42:24,323 --> 00:42:29,007
then it's not good practice.

1214
00:42:29,868 --> 00:42:30,729
There were a few other things

1215
00:42:30,729 --> 00:42:31,790
that I wanted to mention

1216
00:42:31,790 --> 00:42:33,591
about good practice for pull requests.

1217
00:42:35,433 --> 00:42:37,035
And one thing we've already

1218
00:42:37,035 --> 00:42:38,896
seen are these automated tests.

1219
00:42:38,896 --> 00:42:39,997
So what you should focus on

1220
00:42:39,997 --> 00:42:42,439
as a reviewer is doing things

1221
00:42:42,439 --> 00:42:43,961
that humans are good at and

1222
00:42:43,961 --> 00:42:45,722
not things that can be easily automated.

1223
00:42:46,643 --> 00:42:47,704
So if you, for instance,

1224
00:42:48,765 --> 00:42:50,006
have a particular way how you

1225
00:42:50,006 --> 00:42:52,437
want the code style to look like,

1226
00:42:52,437 --> 00:42:54,479
then you can use something called linters,

1227
00:42:54,479 --> 00:42:55,260
which is a tool that

1228
00:42:55,260 --> 00:42:56,581
checks whether the code formatting

1229
00:42:56,581 --> 00:42:57,602
is the way you want it to.

1230
00:42:58,743 --> 00:42:59,584
This will be mentioned in

1231
00:42:59,584 --> 00:43:00,545
further detail at a later

1232
00:43:00,545 --> 00:43:02,427
stage, but I'm mentioning this

1233
00:43:02,427 --> 00:43:03,848
in order to pinpoint like you

1234
00:43:03,848 --> 00:43:05,910
as a code reviewer should really

1235
00:43:05,910 --> 00:43:07,011
focus on the things that only

1236
00:43:07,011 --> 00:43:07,872
you as a human could do

1237
00:43:07,872 --> 00:43:10,354
that no automation tool can do for you.

1238
00:43:13,798 --> 00:43:14,939
You should also probably merge

1239
00:43:14,939 --> 00:43:16,220
as soon as possible since

1240
00:43:16,220 --> 00:43:18,642
you want the other collaborators,

1241
00:43:18,642 --> 00:43:20,164
so everyone in your team have

1242
00:43:20,164 --> 00:43:21,715
access to the latest changes.

1243
00:43:21,715 --> 00:43:22,496
So you don't want to keep

1244
00:43:22,496 --> 00:43:24,579
that away from everyone for a few months

1245
00:43:24,579 --> 00:43:25,681
and then only merge it once

1246
00:43:25,681 --> 00:43:26,943
it's a hundred percent perfect.

1247
00:43:26,943 --> 00:43:29,086
Like things are never fully perfect.

1248
00:43:29,086 --> 00:43:30,989
It's better to merge as soon as possible

1249
00:43:30,989 --> 00:43:32,010
so that like everyone can

1250
00:43:33,152 --> 00:43:34,434
benefit from the changes that you make.

1251
00:43:35,916 --> 00:43:37,158
And also it doesn't really matter

1252
00:43:37,158 --> 00:43:38,460
whether the review is done by someone

1253
00:43:38,460 --> 00:43:40,082
who is more experienced or not,

1254
00:43:40,082 --> 00:43:41,945
because code review is not

1255
00:43:41,945 --> 00:43:43,227
just there to make sure that

1256
00:43:43,227 --> 00:43:45,450
the changes that you do don't

1257
00:43:45,450 --> 00:43:46,812
screw up anything in the code.

1258
00:43:46,812 --> 00:43:48,195
They're also there to communicate.

1259
00:43:48,195 --> 00:43:50,338
So if [name] now, for instance,

1260
00:43:50,338 --> 00:43:51,618
as a very senior

1261
00:43:51,618 --> 00:43:53,260
engineer has a brilliant idea

1262
00:43:53,260 --> 00:43:54,162
what to implement, then he

1263
00:43:54,162 --> 00:43:55,143
can create a pull request, and

1264
00:43:55,143 --> 00:43:58,428
me, let's say I'm a junior member of the team,

1265
00:43:58,428 --> 00:43:59,689
I'm not as experienced yet,

1266
00:43:59,689 --> 00:44:01,172
I still would learn a lot

1267
00:44:01,172 --> 00:44:02,874
from doing the code review, since

1268
00:44:02,874 --> 00:44:04,797
that's a very easy or very

1269
00:44:04,797 --> 00:44:07,340
good way of transferring

1270
00:44:07,340 --> 00:44:08,682
information and transferring knowledge.

1271
00:44:09,564 --> 00:44:12,468
Also, the perspective of someone

1272
00:44:12,468 --> 00:44:13,689
who is not as experienced can

1273
00:44:13,689 --> 00:44:14,851
also be very important, since

1274
00:44:15,973 --> 00:44:18,076
one quality of code, it's not

1275
00:44:18,076 --> 00:44:19,077
just what it works well,

1276
00:44:20,305 --> 00:44:21,027
I mean, of course it should

1277
00:44:21,027 --> 00:44:22,430
do what it's supposed to do.

1278
00:44:22,430 --> 00:44:24,314
It should be hopefully performant

1279
00:44:24,314 --> 00:44:26,418
and so on, but readability is

1280
00:44:26,418 --> 00:44:29,064
also a major criteria for good code.

1281
00:44:29,064 --> 00:44:31,269
So if I, as someone who let's

1282
00:44:31,269 --> 00:44:31,950
say is new to this

1283
00:44:31,950 --> 00:44:34,008
programming language that [name] is using,

1284
00:44:34,008 --> 00:44:35,229
and completely unable to

1285
00:44:35,229 --> 00:44:36,571
understand what's happening, then

1286
00:44:36,571 --> 00:44:38,714
maybe that's on one hand the side

1287
00:44:38,714 --> 00:44:40,075
that I'm not particularly experienced

1288
00:44:40,075 --> 00:44:41,137
and I should learn more, but

1289
00:44:41,137 --> 00:44:42,178
it could also be a sign that

1290
00:44:42,178 --> 00:44:43,499
maybe the code is written in such a way

1291
00:44:43,499 --> 00:44:45,302
that it's very overcomplicated

1292
00:44:45,302 --> 00:44:46,563
and it could be written in

1293
00:44:46,563 --> 00:44:47,444
an easier way, which is

1294
00:44:47,444 --> 00:44:49,507
then better for everyone who

1295
00:44:49,507 --> 00:44:50,928
works with the code and also for new users.

1296
00:44:51,729 --> 00:44:54,733
So the perspective of like

1297
00:44:54,733 --> 00:44:55,794
a diverse team of different

1298
00:44:55,794 --> 00:44:56,655
people with different levels of

1299
00:44:56,655 --> 00:44:58,197
experience can be very valuable.

1300
00:44:58,197 --> 00:44:59,879
So there's no reason to assume

1301
00:44:59,879 --> 00:45:00,920
that code reviews can only

1302
00:45:00,920 --> 00:45:02,222
be done by senior people

1303
00:45:02,222 --> 00:45:03,103
who are very experienced.

1304
00:45:04,720 --> 00:45:06,081
Is there anything else, [name],

1305
00:45:06,081 --> 00:45:07,362
that we should mention before we

1306
00:45:07,362 --> 00:45:08,804
go back to the material?

1307
00:45:11,066 --> 00:45:12,667
I think that's most of it.

1308
00:45:14,689 --> 00:45:15,010
Okay.

1309
00:45:16,591 --> 00:45:19,994
So in that case, let's go

1310
00:45:19,994 --> 00:45:22,937
now to the next section.

1311
00:45:22,937 --> 00:45:28,782
So I'm here, the material of the lesson.

1312
00:45:28,782 --> 00:45:29,843
So I just scroll to the bottom.

1313
00:45:31,325 --> 00:45:32,486
We have discussed protected

1314
00:45:32,486 --> 00:45:33,647
branches already.

1315
00:45:35,534 --> 00:45:36,955
And then we have here a quick summary.

1316
00:45:38,056 --> 00:45:39,338
Let's just quickly have a look

1317
00:45:39,338 --> 00:45:40,499
whether there are any questions

1318
00:45:40,499 --> 00:45:44,002
in the markdown document that

1319
00:45:44,002 --> 00:45:45,123
we could answer now, which

1320
00:45:45,123 --> 00:45:47,486
are still connected to this topic.

1321
00:45:47,486 --> 00:45:48,206
Let's see.

1322
00:45:48,206 --> 00:45:49,187
I'm just going here to the

1323
00:45:49,187 --> 00:45:50,248
end of this document.

1324
00:45:53,351 --> 00:45:54,372
I see that there are already

1325
00:45:54,372 --> 00:45:55,554
a lot of answers there.

1326
00:45:58,236 --> 00:45:59,878
Any recommendations of using Copilot?

1327
00:46:01,099 --> 00:46:02,200
Okay, that's a good question.

1328
00:46:04,525 --> 00:46:05,186
[name], do you want to

1329
00:46:05,186 --> 00:46:06,388
share your thoughts on this?

1330
00:46:07,910 --> 00:46:08,591
I will pass to you.

1331
00:46:10,473 --> 00:46:13,217
Okay.

1332
00:46:15,300 --> 00:46:16,582
So personally, that's not

1333
00:46:16,582 --> 00:46:17,743
my personal opinion.

1334
00:46:17,743 --> 00:46:19,586
So take that with a pinch of salt.

1335
00:46:19,586 --> 00:46:20,607
I think it can be very

1336
00:46:20,607 --> 00:46:24,813
useful to use Copilot if you're familiar with,

1337
00:46:25,635 --> 00:46:27,177
if you can decipher what

1338
00:46:27,177 --> 00:46:30,642
the code that Copilot spits out does.

1339
00:46:30,642 --> 00:46:32,204
So if you're already experienced

1340
00:46:32,204 --> 00:46:33,500
in your programming language,

1341
00:46:33,500 --> 00:46:34,682
and you can understand everything

1342
00:46:34,682 --> 00:46:35,463
that Copilot does, then I

1343
00:46:35,463 --> 00:46:38,667
think it's a great tool that

1344
00:46:38,667 --> 00:46:40,209
can make you much more productive.

1345
00:46:41,611 --> 00:46:42,913
However, you should always remember

1346
00:46:42,913 --> 00:46:44,835
that you still have the

1347
00:46:44,835 --> 00:46:46,798
responsibility for the code.

1348
00:46:46,798 --> 00:46:47,639
Copilot doesn't take this

1349
00:46:47,639 --> 00:46:48,480
responsibility away.

1350
00:46:49,442 --> 00:46:51,384
So if you are unsure

1351
00:46:51,384 --> 00:46:54,128
whether what Copilot does makes

1352
00:46:54,128 --> 00:46:55,770
sense, then that's maybe a

1353
00:46:55,770 --> 00:46:58,153
sign that you shouldn't fully rely on it.

1354
00:46:58,153 --> 00:46:58,734
And you should always

1355
00:46:58,734 --> 00:47:02,002
check yourself whether

1356
00:47:02,002 --> 00:47:03,164
What are the changes that

1357
00:47:03,164 --> 00:47:04,326
couplet suggests make sense?

1358
00:47:04,326 --> 00:47:05,087
I mean, that's the case for

1359
00:47:05,087 --> 00:47:05,908
any AI tool, really.

1360
00:47:08,132 --> 00:47:09,654
So I would encourage you to

1361
00:47:09,654 --> 00:47:14,322
use it, but always don't become too complacent.

1362
00:47:14,322 --> 00:47:18,568
Always try to always understand

1363
00:47:18,568 --> 00:47:19,830
what couplet does, whether that

1364
00:47:19,830 --> 00:47:21,577
makes any sense for your quick base.

1365
00:47:21,577 --> 00:47:22,518
Yeah.

1366
00:47:22,518 --> 00:47:24,861
I was just going to say

1367
00:47:24,861 --> 00:47:27,264
that it's very important to

1368
00:47:27,264 --> 00:47:29,848
understand the code, not rely on

1369
00:47:29,848 --> 00:47:32,812
does it give me an error when I run it.

1370
00:47:32,812 --> 00:47:33,492
If it doesn't give me

1371
00:47:33,492 --> 00:47:34,193
an error, that doesn't mean

1372
00:47:34,193 --> 00:47:36,056
the code is correct.

1373
00:47:37,077 --> 00:47:40,702
So you have to be very careful about,

1374
00:47:40,702 --> 00:47:42,624
particularly with more extensive

1375
00:47:42,624 --> 00:47:46,349
amounts of code being provided.

1376
00:47:46,349 --> 00:47:49,574
it's very critical because particularly

1377
00:47:49,574 --> 00:47:50,535
if you're working with anything

1378
00:47:50,535 --> 00:47:51,857
that has the potential for

1379
00:47:52,779 --> 00:47:55,763
resulting in erroneous results

1380
00:47:55,763 --> 00:47:57,646
or potential for security

1381
00:47:57,646 --> 00:48:00,651
implications, those are all things

1382
00:48:00,651 --> 00:48:02,534
where it's particularly important

1383
00:48:02,534 --> 00:48:03,796
to be very careful in

1384
00:48:03,796 --> 00:48:06,620
reviewing AI generated code.

1385
00:48:09,865 --> 00:48:12,329
Okay.

1386
00:48:12,329 --> 00:48:15,425
Yes, so someone has posted a question

1387
00:48:15,425 --> 00:48:17,648
probably a very good resource

1388
00:48:17,648 --> 00:48:18,449
that you can read up on.

1389
00:48:19,270 --> 00:48:20,352
Let's see, there's another question.

1390
00:48:20,352 --> 00:48:22,755
In the exercise, we created a branch.

1391
00:48:22,755 --> 00:48:24,277
Does modifying a file work the

1392
00:48:24,277 --> 00:48:26,380
same way of pull requests?

1393
00:48:27,682 --> 00:48:30,686
Yeah, so if you remember from the lecture,

1394
00:48:30,686 --> 00:48:31,747
pull requests, they're always

1395
00:48:31,747 --> 00:48:33,410
from one branch to another branch.

1396
00:48:35,172 --> 00:48:39,138
So if you would contribute

1397
00:48:39,138 --> 00:48:41,321
directly, let's say if you

1398
00:48:41,321 --> 00:48:43,103
push something directly from your

1399
00:48:43,103 --> 00:48:45,142
main branch locally to the main branch,

1400
00:48:45,142 --> 00:48:46,063
on GitHub, or if you

1401
00:48:46,063 --> 00:48:47,245
just change something directly on

1402
00:48:47,245 --> 00:48:49,088
GitHub, it is not a pull request.

1403
00:48:50,610 --> 00:48:51,691
Pull requests always work from

1404
00:48:51,691 --> 00:48:52,693
one branch to another branch.

1405
00:48:55,417 --> 00:48:56,138
So let's see, does that

1406
00:48:56,138 --> 00:48:57,319
answer the question, does modifying

1407
00:48:57,319 --> 00:48:59,743
a file work the same way for pull requests?

1408
00:48:59,743 --> 00:49:01,005
Yeah, so if you then change

1409
00:49:01,005 --> 00:49:04,309
the file in one pull request, then, sorry,

1410
00:49:04,309 --> 00:49:05,932
in one branch that is connected

1411
00:49:05,932 --> 00:49:07,294
by a pull request, then it

1412
00:49:07,294 --> 00:49:08,836
will update the pull request automatically.

1413
00:49:09,717 --> 00:49:10,478
So that's maybe something

1414
00:49:10,478 --> 00:49:11,600
we haven't explicitly mentioned,

1415
00:49:11,600 --> 00:49:12,601
but how would we deal

1416
00:49:12,601 --> 00:49:14,740
with a situation where we are,

1417
00:49:14,740 --> 00:49:16,783
I'm happy with some changes, right?

1418
00:49:17,624 --> 00:49:22,850
So I'll open the repository again.

1419
00:49:22,850 --> 00:49:28,016
And I will now use

1420
00:49:28,016 --> 00:49:29,498
again this adding Periani recipe.

1421
00:49:32,542 --> 00:49:34,244
We can see here that's a

1422
00:49:34,244 --> 00:49:39,350
pull request from Bergen to Maine.

1423
00:49:40,832 --> 00:49:42,895
And we saw that particular

1424
00:49:42,895 --> 00:49:44,697
pull request had the issue that

1425
00:49:45,571 --> 00:49:49,377
the tests failed because there

1426
00:49:49,377 --> 00:49:51,420
was this Unicode character which

1427
00:49:51,420 --> 00:49:53,663
our automated tested capsule

1428
00:49:53,663 --> 00:49:54,484
were unprepared for.

1429
00:49:55,666 --> 00:49:56,547
So what we did here was

1430
00:49:56,547 --> 00:49:58,790
to change the file in this branch.

1431
00:50:00,012 --> 00:50:02,916
I suggested here, let us show the change.

1432
00:50:02,916 --> 00:50:03,838
What I suggested here is

1433
00:50:03,838 --> 00:50:06,321
to remove this character so

1434
00:50:06,321 --> 00:50:09,266
that we have ingredients here

1435
00:50:09,266 --> 00:50:10,507
written only like that without

1436
00:50:10,507 --> 00:50:12,217
a Unicode character.

1437
00:50:12,217 --> 00:50:14,299
And this was then committed.

1438
00:50:14,299 --> 00:50:15,220
So if you see here, I

1439
00:50:15,220 --> 00:50:17,202
made a commit, which is, you can

1440
00:50:17,202 --> 00:50:18,023
have a look at this commit.

1441
00:50:20,045 --> 00:50:21,867
So I changed here this line.

1442
00:50:21,867 --> 00:50:22,868
I removed just this character.

1443
00:50:24,309 --> 00:50:25,771
And this now updates the branch.

1444
00:50:27,032 --> 00:50:28,413
And by updating the branch,

1445
00:50:28,413 --> 00:50:29,294
which is connected by a

1446
00:50:29,294 --> 00:50:31,897
pull request, it automatically updates

1447
00:50:31,897 --> 00:50:33,518
the pull request as well.

1448
00:50:33,518 --> 00:50:34,960
And then the tests will run again.

1449
00:50:34,960 --> 00:50:37,022
And in this case, they passed.

1450
00:50:37,022 --> 00:50:38,283
So in theory, now we see

1451
00:50:38,283 --> 00:50:39,304
that all checks have passed.

1452
00:50:40,516 --> 00:50:41,617
And we see that someone

1453
00:50:41,617 --> 00:50:43,179
had, okay, we actually didn't

1454
00:50:43,179 --> 00:50:44,601
do a formal review.

1455
00:50:44,601 --> 00:50:45,802
So let's do it quickly.

1456
00:50:45,802 --> 00:50:46,223
Let's go up.

1457
00:50:47,464 --> 00:50:48,505
And it already has this pop

1458
00:50:48,505 --> 00:50:50,147
up here asking me to do a review.

1459
00:50:50,147 --> 00:50:50,888
So I'm going to click on it.

1460
00:50:54,192 --> 00:50:54,492
Okay.

1461
00:50:55,313 --> 00:50:56,234
I'll have one last look.

1462
00:51:01,340 --> 00:51:01,720
Okay.

1463
00:51:01,720 --> 00:51:02,601
That looks all good.

1464
00:51:08,328 --> 00:51:08,748
Ah.

1465
00:51:08,748 --> 00:51:09,409
Okay.

1466
00:51:09,409 --> 00:51:10,410
So I can give some additional

1467
00:51:10,410 --> 00:51:11,552
comments if I want to, I can say.

1468
00:51:18,862 --> 00:51:19,162
I don't know.

1469
00:51:19,162 --> 00:51:20,204
Let me make sure I don't

1470
00:51:20,204 --> 00:51:21,125
make any spelling mistakes.

1471
00:51:22,347 --> 00:51:23,188
Let's just start to review.

1472
00:51:24,970 --> 00:51:25,150
Okay.

1473
00:51:26,592 --> 00:51:27,333
Let's see if there's anything

1474
00:51:27,333 --> 00:51:29,657
else that needs special attention.

1475
00:51:29,657 --> 00:51:31,439
It looks all good.

1476
00:51:31,439 --> 00:51:32,040
Even tips.

1477
00:51:32,901 --> 00:51:33,642
That's very helpful.

1478
00:51:39,325 --> 00:51:40,827
quickly add review comment, okay?

1479
00:51:43,530 --> 00:51:45,072
Okay, so let's go up and

1480
00:51:45,072 --> 00:51:46,474
we can finish your review.

1481
00:51:46,474 --> 00:51:47,215
We can click on it and

1482
00:51:47,215 --> 00:51:49,437
I can approve it now.

1483
00:51:49,437 --> 00:51:50,959
So I'm gonna now submit the review.

1484
00:51:55,284 --> 00:51:55,945
And we can merge it.

1485
00:52:04,596 --> 00:52:05,597
Okay, let's see, are there

1486
00:52:05,597 --> 00:52:07,459
any other questions in the document?

1487
00:52:09,886 --> 00:52:11,087
I hope that this question

1488
00:52:11,087 --> 00:52:12,809
is answered, number 20.

1489
00:52:12,809 --> 00:52:15,131
So let's go back to the material.

1490
00:52:16,172 --> 00:52:16,913
I'll just bring it up again.

1491
00:52:19,896 --> 00:52:20,717
We now go to the next

1492
00:52:20,717 --> 00:52:23,359
page, and we now start with the next exercise.

1493
00:52:23,359 --> 00:52:24,220
So this will be the last

1494
00:52:24,220 --> 00:52:25,882
thing we do before we go into the lunch break.

1495
00:52:27,784 --> 00:52:29,546
We will now basically focus

1496
00:52:29,546 --> 00:52:30,527
on the code review process.

1497
00:52:31,367 --> 00:52:36,012
So a lot of it is repetition.

1498
00:52:40,193 --> 00:52:41,335
Just to focus this time is

1499
00:52:41,335 --> 00:52:42,656
now on the creating the

1500
00:52:42,656 --> 00:52:45,280
pull request and suggesting changes to it.

1501
00:52:45,280 --> 00:52:46,622
So we've already shown most

1502
00:52:46,622 --> 00:52:50,347
of these steps here during the stream,

1503
00:52:50,347 --> 00:52:51,208
but I will ask you

1504
00:52:51,208 --> 00:52:56,375
now to create additional, let's

1505
00:52:56,375 --> 00:52:57,917
see how many pull requests we have.

1506
00:52:57,917 --> 00:52:59,680
If we don't have enough, we

1507
00:52:59,680 --> 00:53:01,342
might need to make a few more pull requests.

1508
00:53:01,342 --> 00:53:02,824
Let me just take this down.

1509
00:53:02,824 --> 00:53:03,705
No, sorry, how do I?

1510
00:53:04,827 --> 00:53:07,971
Okay, let's go to the number

1511
00:53:07,971 --> 00:53:09,843
of issues and pull requests

1512
00:53:09,843 --> 00:53:11,405
Okay.

1513
00:53:11,405 --> 00:53:12,386
So for this exercise, we'll

1514
00:53:12,386 --> 00:53:13,727
ask you to create a pull request again,

1515
00:53:13,727 --> 00:53:14,749
and now then go through

1516
00:53:14,749 --> 00:53:16,450
the review process here, which is mentioned.

1517
00:53:17,852 --> 00:53:19,554
So I just screwed up my

1518
00:53:19,554 --> 00:53:20,455
screen share a little bit.

1519
00:53:20,455 --> 00:53:21,436
Let's open the other window.

1520
00:53:23,899 --> 00:53:24,139
Okay.

1521
00:53:25,841 --> 00:53:27,202
Okay, so all the, what you

1522
00:53:27,202 --> 00:53:29,665
need to do is describe here exercise number two.

1523
00:53:29,665 --> 00:53:32,669
As I said, focus on the review button,

1524
00:53:32,669 --> 00:53:34,651
on the review function, use

1525
00:53:34,651 --> 00:53:39,276
this plus minus button to suggest changes, and

1526
00:53:40,201 --> 00:53:41,583
Otherwise, I think it's mainly

1527
00:53:41,583 --> 00:53:42,043
the same thing.

1528
00:53:42,043 --> 00:53:43,445
So now you can practice doing code reviews.

1529
00:53:44,506 --> 00:53:48,870
And I think we give you roughly 25 minutes.

1530
00:53:48,870 --> 00:53:51,273
So we would then finish

1531
00:53:51,273 --> 00:53:54,997
at Central European time, that would be 12.58.

1532
00:53:54,997 --> 00:53:57,540
I will then just quickly say

1533
00:53:57,540 --> 00:53:58,521
a few words before we then

1534
00:53:58,521 --> 00:53:59,342
go into the lunch break.

1535
00:54:00,283 --> 00:54:01,724
So with that said, good

1536
00:54:01,724 --> 00:54:04,387
luck with the exercise and see

1537
00:54:04,387 --> 00:54:05,689
you in 25 minutes.

1538
00:54:05,689 --> 00:54:05,989
Bye.

1539
00:54:09,254 --> 00:54:10,516
Okay, welcome back from

1540
00:54:10,516 --> 00:54:11,377
exercise number two.

1541
00:54:12,699 --> 00:54:14,442
We are almost at the lunch break,

1542
00:54:14,442 --> 00:54:16,305
but let me just use the

1543
00:54:16,305 --> 00:54:17,767
remaining time to quickly discuss

1544
00:54:17,767 --> 00:54:18,829
one question which appeared here

1545
00:54:18,829 --> 00:54:19,810
in the collaborative document.

1546
00:54:20,832 --> 00:54:23,155
And that is here, one

1547
00:54:23,155 --> 00:54:24,818
participant has a hard time to

1548
00:54:24,818 --> 00:54:25,939
find a plus and minus symbol.

1549
00:54:25,939 --> 00:54:28,023
So let me quickly show where

1550
00:54:28,023 --> 00:54:29,224
you can find that by creating

1551
00:54:29,224 --> 00:54:31,207
a pull request or doing a readme.

1552
00:54:32,249 --> 00:54:33,992
So I'm now again at the

1553
00:54:33,992 --> 00:54:35,033
same repository as before.

1554
00:54:35,033 --> 00:54:36,475
And now let me just pick

1555
00:54:36,475 --> 00:54:38,198
one of the pull requests here.

1556
00:54:39,022 --> 00:54:41,245
I go again to files changed to see

1557
00:54:41,245 --> 00:54:42,287
what the code actually looks

1558
00:54:42,287 --> 00:54:43,108
like that has been changed.

1559
00:54:44,770 --> 00:54:46,673
And now, in this case, I

1560
00:54:46,673 --> 00:54:48,876
can click on this blue plus sign.

1561
00:54:54,003 --> 00:54:55,685
And let's see.

1562
00:55:00,072 --> 00:55:00,733
That's interesting.

1563
00:55:00,733 --> 00:55:02,375
It doesn't show it to me right now.

1564
00:55:02,375 --> 00:55:02,976
That's strange.

1565
00:55:04,638 --> 00:55:05,499
Let me try a different one.

1566
00:55:06,300 --> 00:55:07,442
That should not be the case.

1567
00:55:10,274 --> 00:55:10,975
It's changed.

1568
00:55:12,277 --> 00:55:13,619
I click on the sign.

1569
00:55:13,619 --> 00:55:14,179
Ah, and here it is.

1570
00:55:15,661 --> 00:55:16,523
Actually, I don't know why

1571
00:55:16,523 --> 00:55:17,985
it didn't show previously.

1572
00:55:17,985 --> 00:55:19,527
Does anyone else know who's in the call?

1573
00:55:26,837 --> 00:55:27,518
I guess that's a no.

1574
00:55:28,319 --> 00:55:29,861
But what we need is this

1575
00:55:29,861 --> 00:55:31,203
Add a Suggestion tab.

1576
00:55:31,203 --> 00:55:31,743
So I click on it.

1577
00:55:33,045 --> 00:55:36,009
And now it displays this one line.

1578
00:55:37,071 --> 00:55:38,032
And then here's suggestions.

1579
00:55:38,032 --> 00:55:40,143
So if I make changes here, let's say

1580
00:55:40,143 --> 00:55:41,024
Okay, what is that actually?

1581
00:55:41,024 --> 00:55:42,846
That's 500,000 avocados might

1582
00:55:42,846 --> 00:55:44,748
be slightly too many.

1583
00:55:44,748 --> 00:55:46,831
So let's reduce it to 50,000.

1584
00:55:46,831 --> 00:55:47,511
I believe that's enough.

1585
00:55:48,312 --> 00:55:50,575
Then I can do up a single comment.

1586
00:56:00,806 --> 00:56:02,028
Now, if I go to

1587
00:56:02,028 --> 00:56:04,851
conversation, I scroll down.

1588
00:56:06,535 --> 00:56:09,298
And now it just suggests a change,

1589
00:56:09,298 --> 00:56:10,900
but also it does it twice

1590
00:56:10,900 --> 00:56:12,842
for some reason, I guess I misclicked.

1591
00:56:12,842 --> 00:56:14,264
But if I now click to

1592
00:56:14,264 --> 00:56:17,988
commit suggestion, I can make

1593
00:56:17,988 --> 00:56:19,209
this commit automatically.

1594
00:56:19,209 --> 00:56:20,090
So now I create an

1595
00:56:20,090 --> 00:56:22,253
additional commit without the person

1596
00:56:22,253 --> 00:56:24,956
having to actually do it themselves.

1597
00:56:24,956 --> 00:56:26,878
So that way we can suggest

1598
00:56:26,878 --> 00:56:28,319
changes to the code automatically

1599
00:56:29,200 --> 00:56:31,963
as a reviewer, and we can also merge it

1600
00:56:31,963 --> 00:56:33,125
if the person who creates

1601
00:56:33,125 --> 00:56:35,427
the pull request enables that, which

1602
00:56:35,427 --> 00:56:36,188
is done by default.

1603
00:56:37,062 --> 00:56:37,843
So this makes it much

1604
00:56:37,843 --> 00:56:39,044
faster to suggest changes to

1605
00:56:39,044 --> 00:56:42,989
the code than doing it back and forth.

1606
00:56:42,989 --> 00:56:44,371
If you're telling the person

1607
00:56:44,371 --> 00:56:45,412
who created the progress what to

1608
00:56:45,412 --> 00:56:47,034
do, then that person has to do it.

1609
00:56:47,034 --> 00:56:47,955
You can just create it right

1610
00:56:47,955 --> 00:56:49,017
away with this plus minus sign.

1611
00:56:50,598 --> 00:56:51,500
I am a bit surprised that

1612
00:56:51,500 --> 00:56:52,981
I didn't see it the first time I clicked on it.

1613
00:56:52,981 --> 00:56:53,943
So I'm not entirely sure

1614
00:56:53,943 --> 00:56:55,344
whether that's because I'm zoomed

1615
00:56:55,344 --> 00:56:56,145
in so far again.

1616
00:56:56,145 --> 00:57:00,150
[name], have you encountered this before?

1617
00:57:00,150 --> 00:57:02,253
I don't remember ever not seeing this.

1618
00:57:02,253 --> 00:57:02,493
Okay.

1619
00:57:03,995 --> 00:57:05,256
So this is strange, but

1620
00:57:05,256 --> 00:57:07,032
thank you for noticing.

1621
00:57:07,032 --> 00:57:08,393
We just, I'll try another one

1622
00:57:08,393 --> 00:57:10,215
just to see whether this

1623
00:57:10,215 --> 00:57:11,776
is a reoccurring theme.

1624
00:57:13,078 --> 00:57:14,679
So we see here different pull requests.

1625
00:57:14,679 --> 00:57:15,900
I click on fast changed

1626
00:57:15,900 --> 00:57:20,004
500 gram of chicken.

1627
00:57:20,004 --> 00:57:21,706
Okay, let's say we want to

1628
00:57:21,706 --> 00:57:22,406
make a change here.

1629
00:57:22,406 --> 00:57:23,648
And I say we want to have

1630
00:57:23,648 --> 00:57:26,971
700 grams, add a single comment.

1631
00:57:28,752 --> 00:57:31,195
And now it appears here.

1632
00:57:31,195 --> 00:57:32,916
So I can commit it directly here

1633
00:57:32,916 --> 00:57:33,937
if I want to create a

1634
00:57:33,937 --> 00:57:37,019
commit by add these changes to the,

1635
00:57:37,019 --> 00:57:37,520
request.

1636
00:57:38,902 --> 00:57:40,844
Or I can also do it in conversation.

1637
00:57:40,844 --> 00:57:41,906
It appears in both places.

1638
00:57:44,789 --> 00:57:46,231
And yeah, I can then commit if I want.

1639
00:57:47,053 --> 00:57:48,114
But I'll leave that now for

1640
00:57:48,114 --> 00:57:51,018
the person who created the pull request.

1641
00:57:51,018 --> 00:57:52,139
I hope that answers the question.

1642
00:57:57,166 --> 00:57:58,588
There are some other questions.

1643
00:58:01,960 --> 00:58:03,963
Yes, so pull requests, this

1644
00:58:03,963 --> 00:58:06,366
feature is also available on GitLab.

1645
00:58:06,366 --> 00:58:07,688
So for those of you who

1646
00:58:07,688 --> 00:58:08,589
are not familiar with GitLab,

1647
00:58:08,589 --> 00:58:09,791
GitLab is basically an alternative

1648
00:58:09,791 --> 00:58:10,592
platform to GitHub.

1649
00:58:12,074 --> 00:58:13,877
It is not owned by Microsoft,

1650
00:58:13,877 --> 00:58:15,079
but you can host your

1651
00:58:15,079 --> 00:58:16,501
own GitLab instance if you want.

1652
00:58:16,501 --> 00:58:18,924
So it's a kind of a free version.

1653
00:58:18,924 --> 00:58:20,526
But some of the functionalities

1654
00:58:20,526 --> 00:58:21,428
that GitHub provides are

1655
00:58:21,428 --> 00:58:23,350
not automatically enabled in GitLab.

1656
00:58:23,350 --> 00:58:24,051
But you can think of it

1657
00:58:24,051 --> 00:58:26,635
just as a different option instead of GitHub.

1658
00:58:28,066 --> 00:58:29,749
The strange or funny thing is

1659
00:58:29,749 --> 00:58:31,311
that GitLab calls pull

1660
00:58:31,311 --> 00:58:33,294
requests, merge requests, but

1661
00:58:33,294 --> 00:58:34,416
they're exactly the same thing.

1662
00:58:34,416 --> 00:58:37,400
They just have a different name.

1663
00:58:37,400 --> 00:58:38,261
So all the concepts that

1664
00:58:38,261 --> 00:58:40,264
you've learned today in the last two days,

1665
00:58:40,264 --> 00:58:41,246
they are also applicable if

1666
00:58:41,246 --> 00:58:42,628
you use a slightly different

1667
00:58:42,628 --> 00:58:43,950
stack in the future.

1668
00:58:43,950 --> 00:58:45,652
So like there's maybe the

1669
00:58:45,652 --> 00:58:46,754
names change, but in principle,

1670
00:58:46,754 --> 00:58:47,375
it's the same idea.

1671
00:58:48,517 --> 00:58:48,677
Okay.

1672
00:58:48,677 --> 00:58:50,019
I see we have two minutes over time.

1673
00:58:50,019 --> 00:58:52,082
So, um,

1674
00:58:53,362 --> 00:58:55,224
Let's go into the lunch break.

1675
00:58:55,224 --> 00:58:56,806
So here in central Europe,

1676
00:58:56,806 --> 00:58:59,069
that would be from right now

1677
00:58:59,069 --> 00:59:00,631
until 2 o'clock, so 14.00.

1678
00:59:02,654 --> 00:59:05,698
If you are in other parts of Europe

1679
00:59:05,698 --> 00:59:06,318
or somewhere else in the

1680
00:59:06,318 --> 00:59:07,660
world, then you can, I

1681
00:59:07,660 --> 00:59:09,622
guess, easily calculate when we are back.

1682
00:59:09,622 --> 00:59:11,004
So we are back in 57 minutes.

1683
00:59:12,226 --> 00:59:13,327
And we will then go for

1684
00:59:13,327 --> 00:59:17,032
the last part of the material today,

1685
00:59:17,032 --> 00:59:17,693
where we then go for

1686
00:59:17,693 --> 00:59:22,640
the third exercise that we'll focus on.

1687
00:59:22,640 --> 00:59:24,268
creating pull requests from

1688
00:59:24,268 --> 00:59:25,292
forked repositories.

1689
00:59:26,458 --> 00:59:27,442
So have a nice lunch break

1690
00:59:27,442 --> 00:59:29,472
and see you then in 57 minutes.

1691
00:59:29,472 --> 00:59:29,713
Bye.

1692
00:59:33,352 --> 00:59:34,654
Okay, welcome back, everyone.

1693
00:59:34,654 --> 00:59:36,477
I hope you have a nice lunch break.

1694
00:59:37,499 --> 00:59:38,801
We are now in the last

1695
00:59:38,801 --> 00:59:40,664
section of today's workshop.

1696
00:59:40,664 --> 00:59:42,186
So we will now discuss how

1697
00:59:42,186 --> 00:59:44,550
to work with repositories where

1698
00:59:44,550 --> 00:59:46,313
you don't have access to them

1699
00:59:46,313 --> 00:59:47,875
or write access to them.

1700
00:59:47,875 --> 00:59:48,897
But we will now show how

1701
00:59:48,897 --> 00:59:50,459
you can work with them.

1702
00:59:50,459 --> 00:59:51,581
You can even contribute to them,

1703
00:59:51,581 --> 00:59:52,503
even if you're not part

1704
00:59:52,503 --> 00:59:55,007
of the original organization that

1705
00:59:55,007 --> 00:59:56,188
created the repository.

1706
00:59:56,188 --> 00:59:57,531
It can be a complete outsider

1707
00:59:57,531 --> 00:59:58,592
and still pay for requests.

1708
00:59:58,592 --> 00:59:59,714
And we'll show you how to do that now.

1709
01:00:00,538 --> 01:00:03,342
And before we go to the last bit, however,

1710
01:00:03,342 --> 01:00:06,005
let me just quickly kind of show at

1711
01:00:06,005 --> 01:00:07,006
what stage we have now

1712
01:00:07,006 --> 01:00:09,770
the repository from the previous exercise.

1713
01:00:09,770 --> 01:00:10,611
So you can see there have been

1714
01:00:10,611 --> 01:00:11,812
a lot of new issues and

1715
01:00:11,812 --> 01:00:13,654
pull requests, which is really nice.

1716
01:00:13,654 --> 01:00:16,558
We can have a look here at the history.

1717
01:00:16,558 --> 01:00:19,302
I can see all the last commits

1718
01:00:19,302 --> 01:00:19,902
and you can see there's a

1719
01:00:19,902 --> 01:00:21,604
bunch of new pull requests

1720
01:00:21,604 --> 01:00:22,746
that have been merged.

1721
01:00:22,746 --> 01:00:23,587
Thank you all for doing that.

1722
01:00:24,728 --> 01:00:25,569
And one thing which is

1723
01:00:25,569 --> 01:00:26,551
quite interesting, we can go

1724
01:00:26,551 --> 01:00:27,972
here to the settings or here

1725
01:00:27,972 --> 01:00:30,055
on these three dots and then click on insights.

1726
01:00:31,537 --> 01:00:32,298
And then if you click on

1727
01:00:32,298 --> 01:00:34,340
network, it shows us all

1728
01:00:34,340 --> 01:00:36,241
the different branches that people

1729
01:00:36,241 --> 01:00:38,083
have been working on and

1730
01:00:38,083 --> 01:00:38,764
that have been merged.

1731
01:00:39,665 --> 01:00:42,247
So here, you can scroll

1732
01:00:42,247 --> 01:00:42,888
back to the beginning.

1733
01:00:47,992 --> 01:00:49,554
So here, September 9th, and

1734
01:00:49,554 --> 01:00:52,997
I originally created this repository

1735
01:00:52,997 --> 01:00:54,819
based on the templates that was shown earlier.

1736
01:00:54,819 --> 01:00:55,539
We can now see all

1737
01:00:55,539 --> 01:00:56,560
the different branches that I've

1738
01:00:56,560 --> 01:00:58,042
created, and we can see that

1739
01:00:58,042 --> 01:00:59,223
many of them have been merged.

1740
01:00:59,223 --> 01:01:00,464
So here, for instance,

1741
01:01:01,355 --> 01:01:03,637
merged pull request from this user.

1742
01:01:03,637 --> 01:01:04,838
And you can see here, some

1743
01:01:04,838 --> 01:01:06,319
of them have not been merged, just a little bit.

1744
01:01:09,803 --> 01:01:11,564
And this gives us a really good overview.

1745
01:01:11,564 --> 01:01:12,165
So if you have a very

1746
01:01:12,165 --> 01:01:13,706
complex structure of a repository,

1747
01:01:13,706 --> 01:01:15,188
then you can always use these

1748
01:01:15,188 --> 01:01:16,709
network graphs in order to

1749
01:01:16,709 --> 01:01:17,810
get a better overview of how

1750
01:01:17,810 --> 01:01:19,071
many branches are at the

1751
01:01:19,071 --> 01:01:20,152
moment, how many people are working

1752
01:01:20,152 --> 01:01:21,533
on it and so on.

1753
01:01:21,533 --> 01:01:24,036
And we already see here a new owner.

1754
01:01:24,036 --> 01:01:24,976
So that's kind of a hint

1755
01:01:24,976 --> 01:01:26,378
to the exercise we do now.

1756
01:01:26,378 --> 01:01:29,604
And that's now to fork

1757
01:01:29,604 --> 01:01:31,788
repositories and faithful requests

1758
01:01:31,788 --> 01:01:32,830
from four repositories to

1759
01:01:32,830 --> 01:01:33,731
the upstream repository.

1760
01:01:34,673 --> 01:01:37,919
So let us go back to the lecture material.

1761
01:01:37,919 --> 01:01:39,502
So we are now back here and

1762
01:01:39,502 --> 01:01:40,684
we are now in the last section.

1763
01:01:40,684 --> 01:01:42,848
So this is the, how

1764
01:01:42,848 --> 01:01:43,690
to contribute changes to

1765
01:01:43,690 --> 01:01:45,092
repositories that belong to other users.

1766
01:01:45,914 --> 01:01:46,475
Let's open that.

1767
01:01:50,802 --> 01:01:51,123
Okay.

1768
01:01:53,111 --> 01:01:54,313
So we will now introduce

1769
01:01:54,313 --> 01:01:55,515
the third exercise, and then

1770
01:01:55,515 --> 01:01:56,797
[name] will basically show the

1771
01:01:56,797 --> 01:01:58,679
most important steps before we then

1772
01:01:58,679 --> 01:02:01,103
let you do the exercise again.

1773
01:02:02,926 --> 01:02:04,288
So as I already hinted, we

1774
01:02:04,288 --> 01:02:05,169
are now in a situation where

1775
01:02:05,169 --> 01:02:06,351
we want to contribute changes

1776
01:02:06,351 --> 01:02:08,695
to a repository that belongs to someone else.

1777
01:02:08,695 --> 01:02:09,816
It doesn't have to be someone we know.

1778
01:02:09,816 --> 01:02:10,798
It could be also like

1779
01:02:10,798 --> 01:02:11,839
a large repository from

1780
01:02:11,839 --> 01:02:14,023
a different organization.

1781
01:02:14,023 --> 01:02:16,246
So let's use NumPy again as an example.

1782
01:02:16,246 --> 01:02:17,227
So let's say you have found

1783
01:02:17,227 --> 01:02:18,890
a bug in NumPy, and you also

1784
01:02:18,890 --> 01:02:20,499
happen to know how to fix it.

1785
01:02:20,499 --> 01:02:21,681
So again, NumPy is this

1786
01:02:21,681 --> 01:02:23,424
very famous Python library that

1787
01:02:23,424 --> 01:02:24,325
probably many of you use.

1788
01:02:25,767 --> 01:02:27,009
Then you wouldn't be in

1789
01:02:27,009 --> 01:02:29,153
the NumPy core team, most likely.

1790
01:02:29,153 --> 01:02:29,954
I would be very surprised

1791
01:02:29,954 --> 01:02:32,498
if all team members would take this course.

1792
01:02:35,202 --> 01:02:36,324
So probably what you would have

1793
01:02:36,324 --> 01:02:37,045
to do in order to make

1794
01:02:37,045 --> 01:02:38,207
contributions is to fork the

1795
01:02:38,207 --> 01:02:39,449
repository and then create a

1796
01:02:39,449 --> 01:02:40,250
pull request from there.

1797
01:02:43,695 --> 01:02:44,917
So before we start with

1798
01:02:44,917 --> 01:02:46,239
the exercise, I'll just quickly

1799
01:02:46,239 --> 01:02:48,005
start on the bookkeeping again.

1800
01:02:48,005 --> 01:02:50,769
we will now use a different repository.

1801
01:02:50,769 --> 01:02:54,234
So we will start with the same template.

1802
01:02:54,234 --> 01:02:56,237
And if you are now a group leader

1803
01:02:56,237 --> 01:02:59,642
who is working with a

1804
01:02:59,642 --> 01:03:01,245
small group of participants of

1805
01:03:01,245 --> 01:03:03,969
this course locally, you can

1806
01:03:03,969 --> 01:03:05,651
generate a new template.

1807
01:03:05,651 --> 01:03:06,693
And the difference to the

1808
01:03:06,693 --> 01:03:07,814
previous case is that you now

1809
01:03:07,814 --> 01:03:11,023
do not have to add any collaborators.

1810
01:03:11,023 --> 01:03:12,225
because now people will fork

1811
01:03:12,225 --> 01:03:14,508
it and will contribute that way.

1812
01:03:14,508 --> 01:03:16,932
So there's less to do for

1813
01:03:16,932 --> 01:03:21,198
the people who work in these groups.

1814
01:03:21,198 --> 01:03:21,839
And if you want to work

1815
01:03:21,839 --> 01:03:22,700
together with us, then it's

1816
01:03:22,700 --> 01:03:24,422
a similar story again.

1817
01:03:24,422 --> 01:03:25,744
We have two new repositories,

1818
01:03:25,744 --> 01:03:27,767
so we don't use the same ones as we did before.

1819
01:03:27,767 --> 01:03:28,508
And again, there are

1820
01:03:28,508 --> 01:03:31,312
two repositories, because one will

1821
01:03:31,312 --> 01:03:33,556
be the recorded one, and the

1822
01:03:33,556 --> 01:03:35,559
other one is the one which is not recorded.

1823
01:03:35,559 --> 01:03:36,400
And during the stream, we

1824
01:03:36,400 --> 01:03:38,141
will now again focus on the recorded one.

1825
01:03:38,141 --> 01:03:38,782
So if you don't want

1826
01:03:38,782 --> 01:03:40,324
that username appears on the screen,

1827
01:03:40,324 --> 01:03:41,206
which then later on might

1828
01:03:41,206 --> 01:03:42,447
be then published to YouTube and

1829
01:03:42,447 --> 01:03:44,631
so on, please use the first one.

1830
01:03:44,631 --> 01:03:45,552
If you don't mind, please

1831
01:03:45,552 --> 01:03:47,936
use the second one, because if

1832
01:03:47,936 --> 01:03:49,498
you can show during the live stream

1833
01:03:49,498 --> 01:03:50,880
that many people use this

1834
01:03:50,880 --> 01:03:52,483
repository, then I think it's a benefit.

1835
01:03:54,826 --> 01:03:55,167
OK.

1836
01:03:56,148 --> 01:03:56,889
So if you look at the

1837
01:03:56,889 --> 01:04:01,136
exercise itself, a lot of it

1838
01:04:01,136 --> 01:04:02,718
will be very familiar.

1839
01:04:02,718 --> 01:04:03,739
So you will be very familiar

1840
01:04:03,739 --> 01:04:07,385
with a lot of the steps here.

1841
01:04:07,385 --> 01:04:08,867
are just a few small changes

1842
01:04:08,867 --> 01:04:09,989
and the first one is that we

1843
01:04:09,989 --> 01:04:13,113
will now fork the repository and

1844
01:04:13,113 --> 01:04:14,015
then create a pull request

1845
01:04:14,015 --> 01:04:15,297
from the fork repository to

1846
01:04:15,297 --> 01:04:18,081
the upstream repository and during

1847
01:04:18,081 --> 01:04:18,922
that we will then also

1848
01:04:18,922 --> 01:04:20,504
learn how to synchronize their

1849
01:04:20,504 --> 01:04:26,213
repositories and also again mention

1850
01:04:26,213 --> 01:04:27,995
the issues in the original

1851
01:04:27,995 --> 01:04:30,099
repository so that they are connected

1852
01:04:30,099 --> 01:04:31,681
And also, then we will talk

1853
01:04:31,681 --> 01:04:32,863
a little bit more about the tests

1854
01:04:32,863 --> 01:04:33,784
that you've already encountered

1855
01:04:33,784 --> 01:04:35,327
so we didn't expect that you would.

1856
01:04:36,288 --> 01:04:37,330
So many of you will encounter

1857
01:04:37,330 --> 01:04:38,251
the tests in the first

1858
01:04:38,251 --> 01:04:39,873
exercise so we'll probably do

1859
01:04:39,873 --> 01:04:41,676
a little bit faster than we intended to,

1860
01:04:41,676 --> 01:04:42,838
but we will still mention it,

1861
01:04:42,838 --> 01:04:43,719
so if you have any questions

1862
01:04:43,719 --> 01:04:44,680
about that and just let us know

1863
01:04:44,680 --> 01:04:45,462
when we came up with that.

1864
01:04:46,944 --> 01:04:50,249
Again, the solutions are down

1865
01:04:50,249 --> 01:04:51,665
here, so if you have any.

1866
01:04:51,665 --> 01:04:52,927
If you're unsure about something,

1867
01:04:52,927 --> 01:04:55,330
then just have a look here for the documents.

1868
01:04:55,330 --> 01:04:56,252
This is not cheating.

1869
01:04:56,252 --> 01:04:58,535
It's just reading up on how to do things.

1870
01:04:58,535 --> 01:04:59,897
But we will also present it fast,

1871
01:04:59,897 --> 01:05:00,878
since I guess everyone's coming

1872
01:05:00,878 --> 01:05:01,600
back from lunch break.

1873
01:05:01,600 --> 01:05:04,884
And maybe to give you a slower start,

1874
01:05:04,884 --> 01:05:06,166
we will quickly show you

1875
01:05:06,166 --> 01:05:08,049
the most important steps first.

1876
01:05:08,049 --> 01:05:09,591
Before I give the microphone to [name],

1877
01:05:09,591 --> 01:05:10,252
let me just quickly see

1878
01:05:10,252 --> 01:05:11,073
whether there are any new

1879
01:05:12,315 --> 01:05:14,278
questions in the collaborative document.

1880
01:05:14,278 --> 01:05:14,699
Let's see.

1881
01:05:18,845 --> 01:05:20,067
Is there an echo?

1882
01:05:20,067 --> 01:05:20,407
OK.

1883
01:05:21,500 --> 01:05:22,662
I hope that's just you.

1884
01:05:25,285 --> 01:05:26,948
If I ask some of my

1885
01:05:26,948 --> 01:05:29,231
co-teachers, do you encounter that?

1886
01:05:30,993 --> 01:05:31,394
I hope not.

1887
01:05:32,535 --> 01:05:33,437
Well, I take that as a no.

1888
01:05:35,199 --> 01:05:37,402
Ah, how to fork with command line, okay.

1889
01:05:37,402 --> 01:05:38,303
Yeah, so that's a good question.

1890
01:05:40,166 --> 01:05:41,348
Forking is not done on

1891
01:05:41,348 --> 01:05:43,951
the command line since it's a mechanism

1892
01:05:43,951 --> 01:05:44,833
or it's a feature that is

1893
01:05:44,833 --> 01:05:45,874
done inside of GitHub or

1894
01:05:45,874 --> 01:05:49,935
GitLab or whatever platform you use.

1895
01:05:49,935 --> 01:05:50,896
If you go, maybe we can

1896
01:05:50,896 --> 01:05:53,580
go quickly back to the first lecture.

1897
01:05:53,580 --> 01:05:55,162
Sorry, that was not what I intended.

1898
01:05:55,162 --> 01:05:58,966
I wanted to show this one.

1899
01:05:58,966 --> 01:06:03,912
And you remember this figure here.

1900
01:06:05,134 --> 01:06:05,755
You see we have this

1901
01:06:05,755 --> 01:06:07,897
repository and then cloning would

1902
01:06:07,897 --> 01:06:08,979
be down to your laptop.

1903
01:06:08,979 --> 01:06:09,840
So then that would mean that

1904
01:06:09,840 --> 01:06:11,342
you copy the whole repository

1905
01:06:11,342 --> 01:06:12,803
down to your machine.

1906
01:06:12,803 --> 01:06:15,226
But forking is inside of the cloud.

1907
01:06:15,226 --> 01:06:16,568
So inside of GitHub in this case.

1908
01:06:18,190 --> 01:06:19,672
So we just copy the,

1909
01:06:21,440 --> 01:06:23,604
repository from the organization

1910
01:06:23,604 --> 01:06:26,008
that they're in to your private one.

1911
01:06:26,008 --> 01:06:27,189
I can maybe quickly demonstrate that.

1912
01:06:28,211 --> 01:06:29,233
So if I now go to

1913
01:06:29,233 --> 01:06:33,300
the organization, and let's now

1914
01:06:33,300 --> 01:06:34,461
take the forked one.

1915
01:06:34,461 --> 01:06:35,183
So we see here,

1916
01:06:35,984 --> 01:06:38,428
centralized workflow exercise recorded.

1917
01:06:41,673 --> 01:06:43,396
And now I see already two

1918
01:06:43,396 --> 01:06:46,942
people forked it, but I want to fork it myself.

1919
01:06:50,786 --> 01:06:52,629
Now, if I wouldn't have to zoom in

1920
01:06:52,629 --> 01:06:53,550
as closely as I am right

1921
01:06:53,550 --> 01:06:54,511
now for the stream, then it

1922
01:06:54,511 --> 01:06:55,453
would actually also tell me

1923
01:06:55,453 --> 01:06:57,195
fork, so it's easier to find.

1924
01:06:57,195 --> 01:06:58,157
But now I will click on

1925
01:06:58,157 --> 01:07:01,441
it, and then it will show

1926
01:07:01,441 --> 01:07:04,185
me the organization in which it will be stored.

1927
01:07:04,185 --> 01:07:04,986
So in this case, it's my

1928
01:07:04,986 --> 01:07:06,629
private one, but I can also choose other ones.

1929
01:07:06,629 --> 01:07:07,250
You can see here all

1930
01:07:07,250 --> 01:07:08,852
the organizations that I'm part of.

1931
01:07:08,852 --> 01:07:09,493
But in this case, I'll

1932
01:07:09,493 --> 01:07:10,995
just choose my private one.

1933
01:07:10,995 --> 01:07:12,217
And then here, the name I

1934
01:07:12,217 --> 01:07:13,499
can also change, but I can

1935
01:07:13,499 --> 01:07:14,380
also keep it the same.

1936
01:07:15,609 --> 01:07:16,570
And then I can choose whether

1937
01:07:16,570 --> 01:07:17,592
I only want to copy the main

1938
01:07:17,592 --> 01:07:19,595
branch or all of the branches that are existing.

1939
01:07:19,595 --> 01:07:20,296
And then I can create a

1940
01:07:20,296 --> 01:07:21,177
fork by clicking on this.

1941
01:07:22,860 --> 01:07:24,101
And that will take a little bit of time.

1942
01:07:24,943 --> 01:07:25,904
And it's now forking the

1943
01:07:25,904 --> 01:07:30,851
repository into my own GitHub account.

1944
01:07:30,851 --> 01:07:31,612
So now if you have

1945
01:07:31,612 --> 01:07:34,957
a look here, unfortunately, yeah.

1946
01:07:34,957 --> 01:07:37,000
So if I vlog this a

1947
01:07:37,000 --> 01:07:38,643
little bit, maybe it's showing it properly.

1948
01:07:38,643 --> 01:07:39,183
Let's see.

1949
01:07:39,183 --> 01:07:39,604
Yeah.

1950
01:07:39,604 --> 01:07:40,505
Then you can see now it

1951
01:07:40,505 --> 01:07:43,810
is in my personal GitHub organization.

1952
01:07:45,326 --> 01:07:47,729
Okay, so that was walking.

1953
01:07:47,729 --> 01:07:50,713
[name], may I ask you to then go

1954
01:07:50,713 --> 01:07:57,562
through the exercise and we will, sorry,

1955
01:07:57,562 --> 01:07:58,663
go through the exercise here

1956
01:07:58,663 --> 01:08:00,646
of the third part of the lecture today.

1957
01:08:03,109 --> 01:08:04,651
So may I give the screenshot to you?

1958
01:08:07,935 --> 01:08:08,115
Yep.

1959
01:08:11,820 --> 01:08:13,462
And waiting for it to switch.

1960
01:08:13,462 --> 01:08:15,164
Oh, sorry, there we go.

1961
01:08:16,528 --> 01:08:19,400
All right, so looking at this,

1962
01:08:20,780 --> 01:08:22,742
We're going to, what's going to

1963
01:08:22,742 --> 01:08:25,145
be new in this thing, first

1964
01:08:25,145 --> 01:08:25,665
of all, we're going to

1965
01:08:25,665 --> 01:08:27,547
fork the repository, create a

1966
01:08:27,547 --> 01:08:32,552
branch, making a change, and

1967
01:08:32,552 --> 01:08:33,934
of course, making pull requests.

1968
01:08:34,895 --> 01:08:39,580
And there, of course, are going to be,

1969
01:08:39,580 --> 01:08:41,682
but in this case, doing the forking

1970
01:08:41,682 --> 01:08:44,926
and getting pull requests back

1971
01:08:44,926 --> 01:08:50,011
to the main or the official repository.

1972
01:08:51,780 --> 01:08:54,422
We'll go up here and take a look at that.

1973
01:08:56,564 --> 01:08:58,926
So here is the official

1974
01:09:00,027 --> 01:09:03,911
forking workflow exercise repository here.

1975
01:09:03,911 --> 01:09:05,512
And as [name] showed, we're

1976
01:09:05,512 --> 01:09:07,274
just going to click here to fork that.

1977
01:09:09,756 --> 01:09:14,220
And I'm going to call it recipe book.

1978
01:09:16,942 --> 01:09:17,283
OK.

1979
01:09:17,283 --> 01:09:20,065
Oh, I already have one forked.

1980
01:09:21,783 --> 01:09:23,487
Okay, and we're just going to

1981
01:09:23,487 --> 01:09:25,291
copy the main branch because I

1982
01:09:25,291 --> 01:09:27,475
don't need to modify all those

1983
01:09:27,475 --> 01:09:28,658
and have all those other ones

1984
01:09:28,658 --> 01:09:29,620
so we'll create that fork.

1985
01:09:36,555 --> 01:09:39,452
Oh, I I sort of skipped over.

1986
01:09:39,452 --> 01:09:41,175
Yeah, well, so then that

1987
01:09:41,175 --> 01:09:43,559
prepares us for number one.

1988
01:09:43,559 --> 01:09:47,767
So going back to the

1989
01:09:48,949 --> 01:09:51,273
exercises here, let's go ahead

1990
01:09:51,273 --> 01:09:52,175
and create an issue.

1991
01:09:52,996 --> 01:09:54,639
Now, just to see what

1992
01:09:54,639 --> 01:09:56,964
issues might exist here, I'm going

1993
01:09:56,964 --> 01:09:58,025
to go look in desserts.

1994
01:09:59,408 --> 01:10:02,253
Or let's see.

1995
01:10:04,393 --> 01:10:06,395
Sure, desserts works.

1996
01:10:06,395 --> 01:10:07,276
Pumpkin pie.

1997
01:10:07,276 --> 01:10:09,319
And we have these nice

1998
01:10:09,319 --> 01:10:11,101
ingredients here and instructions.

1999
01:10:11,982 --> 01:10:14,425
And perhaps I want to make

2000
01:10:14,425 --> 01:10:19,912
this to have some optional ingredients such

2001
01:10:19,912 --> 01:10:24,016
as marshmallows on top or

2002
01:10:25,718 --> 01:10:27,080
chocolate chips or something to make

2003
01:10:27,080 --> 01:10:30,144
it a more interesting pumpkin pie.

2004
01:10:30,144 --> 01:10:34,143
So let's open an issue to do that.

2005
01:10:34,143 --> 01:10:35,826
So new issue.

2006
01:10:38,190 --> 01:10:46,423
Add optional ingredients to pumpkin pie.

2007
01:10:49,287 --> 01:10:50,870
We need some

2008
01:10:52,757 --> 01:10:59,350
additional ingredients to make the

2009
01:10:59,350 --> 01:11:01,154
pie more interesting.

2010
01:11:02,838 --> 01:11:05,483
Okay, so we'll go ahead and create that.

2011
01:11:09,378 --> 01:11:11,160
Okay, so this issue exists

2012
01:11:11,160 --> 01:11:12,302
and we're going to be able to

2013
01:11:12,302 --> 01:11:14,985
refer to it going forward.

2014
01:11:14,985 --> 01:11:16,968
So now coming over here, this

2015
01:11:16,968 --> 01:11:18,630
is our fork of my own

2016
01:11:19,431 --> 01:11:21,654
local repository here of that.

2017
01:11:21,654 --> 01:11:23,356
And it says here forked from,

2018
01:11:23,356 --> 01:11:25,699
so it knows where the original came from.

2019
01:11:26,601 --> 01:11:28,423
And so then step two is

2020
01:11:28,423 --> 01:11:30,385
going to be, of course, to create a branch.

2021
01:11:30,385 --> 01:11:31,066
So we can create a

2022
01:11:31,066 --> 01:11:37,715
branch, better pumpkin pie.

2023
01:11:39,011 --> 01:11:39,933
Rafal Dittwald, And we'll

2024
01:11:39,933 --> 01:11:43,319
create that French.

2025
01:11:43,319 --> 01:11:44,240
Rafal Dittwald, Okay, so then

2026
01:11:44,240 --> 01:11:46,204
we maybe mentioned yes i'm

2027
01:11:46,204 --> 01:11:48,227
sorry sorry could you maybe mention

2028
01:11:48,227 --> 01:11:49,129
why it's a good idea to

2029
01:11:49,129 --> 01:11:51,053
still create a new branch, because

2030
01:11:51,053 --> 01:11:52,114
we are in a different repository

2031
01:11:52,114 --> 01:11:53,577
now just use the main branch.

2032
01:11:54,738 --> 01:11:56,261
Well, we may want to

2033
01:11:56,261 --> 01:12:00,008
have multiple changes and we don't

2034
01:12:00,008 --> 01:12:02,272
want to have those all intermingled.

2035
01:12:03,394 --> 01:12:07,862
Also, if this is under review

2036
01:12:07,862 --> 01:12:10,167
and we come and add

2037
01:12:10,167 --> 01:12:13,713
more changes, then those changes

2038
01:12:13,713 --> 01:12:15,717
are included because we pull branch to branch.

2039
01:12:18,009 --> 01:12:18,850
So we don't

2040
01:12:18,850 --> 01:12:20,813
want to get things all combined.

2041
01:12:21,774 --> 01:12:23,236
So it's it's

2042
01:12:23,236 --> 01:12:25,338
it's best to have you

2043
01:12:25,338 --> 01:12:27,861
know compartmentalization keep a

2044
01:12:27,861 --> 01:12:29,864
separate branch for each separate

2045
01:12:29,864 --> 01:12:31,506
set of modifications that you're making.

2046
01:12:33,769 --> 01:12:34,290
- Okay.

2047
01:12:35,711 --> 01:12:36,372
- So we have

2048
01:12:36,372 --> 01:12:38,255
better pumpkin pie here and

2049
01:12:38,255 --> 01:12:39,636
now let's actually go and

2050
01:12:39,636 --> 01:12:44,202
make that happen desserts pumpkin pie.

2051
01:12:47,355 --> 01:12:49,537
- And so I

2052
01:12:49,537 --> 01:12:52,440
want some optional ingredients.

2053
01:12:59,208 --> 01:13:01,770
Chocolate chips

2054
01:13:01,770 --> 01:13:04,093
or marshmallows.

2055
01:13:05,875 --> 01:13:11,641
Okay, and we can throw in.

2056
01:13:13,612 --> 01:13:15,155
yeah okay so there,

2057
01:13:15,155 --> 01:13:17,098
there they are and we'll we'll

2058
01:13:17,098 --> 01:13:18,660
put in an instruction.

2059
01:13:18,660 --> 01:13:22,547
Add marshmallow

2060
01:13:22,547 --> 01:13:26,032
mellows on top, if included.

2061
01:13:26,032 --> 01:13:28,576
And now, this

2062
01:13:28,576 --> 01:13:29,859
is optional ingredients and then

2063
01:13:29,859 --> 01:13:30,680
we're going to put this and

2064
01:13:30,680 --> 01:13:32,583
call it required ingredients.

2065
01:13:33,862 --> 01:13:38,048
so that we can make use of

2066
01:13:38,048 --> 01:13:39,770
that in a future discussion.

2067
01:13:39,770 --> 01:13:40,731
Okay, so I'm going to go

2068
01:13:40,731 --> 01:13:42,153
ahead and commit changes there.

2069
01:13:42,153 --> 01:13:45,698
And I'm going to go ahead

2070
01:13:45,698 --> 01:13:47,240
and commit this directly to

2071
01:13:47,240 --> 01:13:48,682
my own branch because I'm doing it.

2072
01:13:50,965 --> 01:13:52,327
But I do like better

2073
01:13:52,327 --> 01:13:59,296
commit messages and optional ingredients.

2074
01:14:03,528 --> 01:14:05,230
Okay, so that's been committed.

2075
01:14:07,072 --> 01:14:08,274
All right, so now if we

2076
01:14:08,274 --> 01:14:12,299
go back to files here, not files,

2077
01:14:12,299 --> 01:14:14,602
go back to the main code location.

2078
01:14:15,884 --> 01:14:18,367
Okay, so we now have this

2079
01:14:18,367 --> 01:14:19,648
and you'll see here that

2080
01:14:19,648 --> 01:14:20,950
we have this indication where

2081
01:14:20,950 --> 01:14:21,891
it says this branch is now

2082
01:14:21,891 --> 01:14:25,456
one commit ahead of the repository

2083
01:14:25,456 --> 01:14:26,377
it was forked from.

2084
01:14:26,377 --> 01:14:29,020
And so we then have an

2085
01:14:29,020 --> 01:14:33,606
option to contribute this

2086
01:14:33,606 --> 01:14:35,509
particular branch that we've

2087
01:14:35,509 --> 01:14:39,333
constructed back to the original repository.

2088
01:14:41,536 --> 01:14:42,758
So let's look just looking

2089
01:14:42,758 --> 01:14:45,061
briefly at our list of steps.

2090
01:14:45,882 --> 01:14:48,605
We want to then, of course,

2091
01:14:50,610 --> 01:14:52,676
Make a pull request.

2092
01:14:54,802 --> 01:14:55,845
So we can do that here.

2093
01:14:57,569 --> 01:15:00,437
Open pull request.

2094
01:15:00,437 --> 01:15:03,005
And this is, well, sure.

2095
01:15:03,005 --> 01:15:06,374
Add optional agreements to pumpkin pie.

2096
01:15:08,447 --> 01:15:09,609
And here, if

2097
01:15:09,609 --> 01:15:10,910
we look back at our original

2098
01:15:10,910 --> 01:15:13,233
this was issue number four.

2099
01:15:14,515 --> 01:15:18,781
We need more ingredients.

2100
01:15:20,463 --> 01:15:24,688
In pumpkin I recipe.

2101
01:15:26,190 --> 01:15:27,853
Okay.

2102
01:15:27,853 --> 01:15:29,014
highlights the

2103
01:15:29,014 --> 01:15:29,695
branch names.

2104
01:15:30,502 --> 01:15:31,184
Yes.

2105
01:15:31,184 --> 01:15:32,026
Because that's the difference

2106
01:15:32,026 --> 01:15:32,587
to previously.

2107
01:15:34,311 --> 01:15:38,320
This addresses issue number four.

2108
01:15:38,320 --> 01:15:39,944
And there is the issue

2109
01:15:39,944 --> 01:15:40,906
that we're addressing.

2110
01:15:40,906 --> 01:15:41,187
Okay.

2111
01:15:42,049 --> 01:15:43,853
So here,

2112
01:15:44,778 --> 01:15:47,342
uh we were uh we forked

2113
01:15:47,342 --> 01:15:49,185
from a branch called main here um

2114
01:15:50,847 --> 01:15:54,873
but in our uh uh repository

2115
01:15:54,873 --> 01:15:59,300
we're um have this fork the

2116
01:15:59,300 --> 01:16:00,862
the branch is called better pumpkin pie

2117
01:16:01,723 --> 01:16:03,867
and so that's uh we're

2118
01:16:03,867 --> 01:16:05,890
committing it back into there uh

2119
01:16:05,890 --> 01:16:07,712
in in a different repository which

2120
01:16:07,712 --> 01:16:08,714
we can see the difference there

2121
01:16:08,714 --> 01:16:13,263
is that uh did you want additional comment okay

2122
01:16:13,263 --> 01:16:14,465
Yeah, so you can see

2123
01:16:14,465 --> 01:16:16,269
here the base repository and

2124
01:16:16,269 --> 01:16:18,032
the head repository is different,

2125
01:16:18,032 --> 01:16:19,636
but it's there to make sure

2126
01:16:19,636 --> 01:16:20,718
that we are forking into the

2127
01:16:20,718 --> 01:16:22,481
original one and not accidentally

2128
01:16:22,481 --> 01:16:24,645
into our own main branch.

2129
01:16:24,645 --> 01:16:24,806
Yeah.

2130
01:16:25,788 --> 01:16:26,810
So we wouldn't want it to

2131
01:16:26,810 --> 01:16:29,816
be this because that wouldn't be

2132
01:16:29,816 --> 01:16:30,597
much of a change.

2133
01:16:32,012 --> 01:16:33,814
Um, of course now having done

2134
01:16:33,814 --> 01:16:36,797
that, it, uh, just goes away.

2135
01:16:38,138 --> 01:16:42,803
So, um, let's do that again.

2136
01:16:42,803 --> 01:16:43,844
Um, okay.

2137
01:16:43,844 --> 01:16:44,425
Contribute.

2138
01:16:44,425 --> 01:16:51,392
Oh yes.

2139
01:16:51,392 --> 01:16:52,413
Okay.

2140
01:16:52,413 --> 01:16:54,014
Let's go to our better pumpkin pie.

2141
01:16:54,014 --> 01:16:54,535
There we are.

2142
01:16:55,516 --> 01:16:55,796
Okay.

2143
01:16:55,796 --> 01:16:56,877
Now it's one commit ahead.

2144
01:16:56,877 --> 01:16:59,660
We can contribute, um, open

2145
01:16:59,660 --> 01:17:00,601
the pull request.

2146
01:17:03,146 --> 01:17:04,748
Okay.

2147
01:17:07,031 --> 01:17:11,016
Add more ingredients to pumpkin pie.

2148
01:17:13,440 --> 01:17:18,026
This fixes issue number four.

2149
01:17:18,947 --> 01:17:20,188
Okay.

2150
01:17:20,188 --> 01:17:23,753
And so then we create that pull request.

2151
01:17:27,378 --> 01:17:28,259
and allow

2152
01:17:28,259 --> 01:17:30,303
as maintainers and for now we're

2153
01:17:30,303 --> 01:17:32,487
going to just do this like that okay.

2154
01:17:32,487 --> 01:17:34,450
And that creates

2155
01:17:34,450 --> 01:17:35,973
our pull request and it heads

2156
01:17:35,973 --> 01:17:39,438
off to to now now, you can see that this is.

2157
01:17:40,540 --> 01:17:43,626
In the exercises.

2158
01:17:43,626 --> 01:17:46,510
account under

2159
01:17:46,510 --> 01:17:47,492
the original.

2160
01:17:48,594 --> 01:17:50,918
repository and

2161
01:17:50,918 --> 01:17:53,302
it's now listed here in the pull requests.

2162
01:17:55,188 --> 01:17:59,454
Okay, [name], you wanna now review that?

2163
01:18:01,196 --> 01:18:02,758
Sure, let's do that together.

2164
01:18:04,160 --> 01:18:05,342
So I'm gonna wait until the

2165
01:18:06,303 --> 01:18:08,546
screen share is on my side again.

2166
01:18:12,091 --> 01:18:15,255
Okay, no, it's not right yet.

2167
01:18:15,255 --> 01:18:16,497
Yeah, that's yours.

2168
01:18:16,497 --> 01:18:17,959
Okay, okay.

2169
01:18:19,361 --> 01:18:21,364
Yeah, so we are back in the repository.

2170
01:18:22,505 --> 01:18:24,804
So we see here now the issue that

2171
01:18:24,804 --> 01:18:26,346
[name] has created.

2172
01:18:26,346 --> 01:18:27,127
Okay.

2173
01:18:27,127 --> 01:18:29,230
We need some additional ingredients

2174
01:18:29,230 --> 01:18:30,572
to make this part more interesting.

2175
01:18:30,572 --> 01:18:31,774
Sounds good.

2176
01:18:31,774 --> 01:18:35,379
And again, since [name] mentioned

2177
01:18:35,379 --> 01:18:39,105
the issue in this pull request,

2178
01:18:39,105 --> 01:18:40,827
it is already shown here that

2179
01:18:40,827 --> 01:18:41,688
we have this pull request,

2180
01:18:41,688 --> 01:18:43,171
which is addressing this issue.

2181
01:18:43,171 --> 01:18:43,852
Let's click on it.

2182
01:18:45,975 --> 01:18:46,616
Okay.

2183
01:18:46,616 --> 01:18:48,058
So same as before, we can

2184
01:18:48,058 --> 01:18:48,939
check now the name.

2185
01:18:49,980 --> 01:18:51,838
That seems to make sense.

2186
01:18:51,838 --> 01:18:54,301
We also see here from where

2187
01:18:54,301 --> 01:18:57,184
to where the pull request is

2188
01:18:57,184 --> 01:18:58,005
supposed to take place.

2189
01:18:58,005 --> 01:18:58,946
So we see here from

2190
01:18:58,946 --> 01:19:03,852
[name]'s forked repository into

2191
01:19:03,852 --> 01:19:06,415
the main branch of the

2192
01:19:06,415 --> 01:19:07,476
code refinery repository.

2193
01:19:07,476 --> 01:19:09,318
So that's what we want to have.

2194
01:19:09,318 --> 01:19:11,861
So let's look here further

2195
01:19:11,861 --> 01:19:13,904
down and see, okay, these tests,

2196
01:19:13,904 --> 01:19:15,546
they seem to fail.

2197
01:19:15,546 --> 01:19:16,407
So that's maybe something

2198
01:19:16,407 --> 01:19:16,867
we should address.

2199
01:19:18,809 --> 01:19:20,071
But before that, let's have a

2200
01:19:20,071 --> 01:19:21,052
look at the files itself.

2201
01:19:24,575 --> 01:19:27,759
Okay, so we see here there

2202
01:19:27,759 --> 01:19:29,121
are a few changes to this file.

2203
01:19:30,042 --> 01:19:31,585
We have optional ingredients.

2204
01:19:31,585 --> 01:19:33,988
So again, you can comment.

2205
01:19:42,600 --> 01:19:44,262
Developing ingredients.

2206
01:19:50,070 --> 01:19:50,971
So we can start to review.

2207
01:19:53,533 --> 01:19:55,155
Let's see, okay, we add

2208
01:19:55,155 --> 01:19:56,477
this, this looks also good.

2209
01:19:56,477 --> 01:19:57,878
And then here, okay, I might

2210
01:19:57,878 --> 01:19:58,779
spot what the problem is.

2211
01:20:00,782 --> 01:20:01,763
The problem is that our

2212
01:20:01,763 --> 01:20:04,006
test script requires there to

2213
01:20:04,006 --> 01:20:05,147
be an ingredient section and

2214
01:20:05,147 --> 01:20:06,189
not required ingredients.

2215
01:20:07,030 --> 01:20:07,991
So this is not something that

2216
01:20:07,991 --> 01:20:09,112
I can suggest to change.

2217
01:20:09,112 --> 01:20:11,375
And this time I will use

2218
01:20:11,375 --> 01:20:12,476
this plus minus sign again.

2219
01:20:12,476 --> 01:20:15,841
So I'll now make some suggestions.

2220
01:20:15,841 --> 01:20:17,002
So I'll suggest to remove

2221
01:20:17,002 --> 01:20:21,127
this required and add that as a new comment.

2222
01:20:22,659 --> 01:20:29,485
Okay, so now I can finish up the review.

2223
01:20:29,485 --> 01:20:30,246
So I can choose between

2224
01:20:30,246 --> 01:20:31,627
just commenting, I can approve it,

2225
01:20:31,627 --> 01:20:32,849
or I can request changes.

2226
01:20:32,849 --> 01:20:33,910
And since there is this one

2227
01:20:34,930 --> 01:20:37,913
change that I suggested, you could use that.

2228
01:20:37,913 --> 01:20:38,654
But I mean, in this case,

2229
01:20:38,654 --> 01:20:39,675
it's such a small one that I

2230
01:20:39,675 --> 01:20:40,456
might just do it myself.

2231
01:20:41,717 --> 01:20:43,779
Right, so I will approve this pull request.

2232
01:20:43,779 --> 01:20:44,800
Let's click on Submit Review.

2233
01:20:48,583 --> 01:20:50,805
Let's go to here, the overview

2234
01:20:50,805 --> 01:20:51,586
of the pull request.

2235
01:20:52,848 --> 01:20:54,530
So we see here the comment that I made,

2236
01:20:54,530 --> 01:20:55,351
and then we also see

2237
01:20:55,351 --> 01:20:56,953
here the suggestions that I made.

2238
01:20:56,953 --> 01:20:58,495
So I can now click

2239
01:20:58,495 --> 01:21:01,058
on commit suggestions, and I

2240
01:21:01,058 --> 01:21:02,300
can basically create a new

2241
01:21:02,300 --> 01:21:03,602
commit with the suggestions that

2242
01:21:03,602 --> 01:21:04,082
I made earlier.

2243
01:21:04,963 --> 01:21:06,005
So let's just maybe use

2244
01:21:06,005 --> 01:21:09,529
a more meaningful commit message than this.

2245
01:21:09,529 --> 01:21:16,338
Let's say fix subtitle, or what is this?

2246
01:21:16,338 --> 01:21:19,902
This title or section title.

2247
01:21:21,772 --> 01:21:27,399
to make it compatible with tests.

2248
01:21:29,923 --> 01:21:30,804
Hopefully that's fair enough.

2249
01:21:34,769 --> 01:21:35,570
And if I do this again,

2250
01:21:35,570 --> 01:21:37,573
let's see what the tests are passing this time.

2251
01:21:40,617 --> 01:21:41,918
So we see that they're running.

2252
01:21:41,918 --> 01:21:43,140
So we can click on this and

2253
01:21:43,140 --> 01:21:44,101
it will show us the details.

2254
01:21:45,683 --> 01:21:47,606
So we see the different steps in this test.

2255
01:21:47,606 --> 01:21:48,607
So it's setting up the job.

2256
01:21:49,447 --> 01:21:51,850
So setting a Python, installing PyTest,

2257
01:21:51,850 --> 01:21:52,751
which is the library that we

2258
01:21:52,751 --> 01:21:53,832
use for doing these tests.

2259
01:21:55,934 --> 01:21:57,276
And then we see, okay,

2260
01:21:57,276 --> 01:21:58,497
everything seems to work.

2261
01:21:58,497 --> 01:21:59,038
Nice.

2262
01:21:59,038 --> 01:21:59,678
The checks agree.

2263
01:22:00,880 --> 01:22:02,101
It's ready to be merged.

2264
01:22:02,101 --> 01:22:04,924
So let's go back to the pull request.

2265
01:22:08,328 --> 01:22:09,249
So we have to go back

2266
01:22:09,249 --> 01:22:10,671
to, sorry, not from action set,

2267
01:22:10,671 --> 01:22:12,152
click on pull request, of course.

2268
01:22:12,152 --> 01:22:13,013
Go to this pull request.

2269
01:22:13,995 --> 01:22:15,276
And now it can be merged.

2270
01:22:15,276 --> 01:22:16,197
So now I can merge it.

2271
01:22:25,830 --> 01:22:26,251
Okay.

2272
01:22:27,633 --> 01:22:28,554
[name], do you want to show

2273
01:22:28,554 --> 01:22:29,315
how it looks now on your

2274
01:22:29,315 --> 01:22:31,057
end, in the fork repository?

2275
01:22:31,899 --> 01:22:34,222
Sure.

2276
01:22:34,222 --> 01:22:36,826
So I'll give the screenshot back to you.

2277
01:22:36,826 --> 01:22:37,527
Maybe just one thing.

2278
01:22:37,527 --> 01:22:39,109
I'll just show you the history.

2279
01:22:39,109 --> 01:22:42,133
So the last thing in the

2280
01:22:42,133 --> 01:22:45,358
history of the main repository now

2281
01:22:45,358 --> 01:22:46,640
is I can see here that

2282
01:22:46,640 --> 01:22:47,701
I managed this pull request.

2283
01:22:48,783 --> 01:22:49,043
Okay.

2284
01:22:49,043 --> 01:22:50,345
But now there's a next

2285
01:22:50,345 --> 01:22:52,028
step in the exercise, [name], which

2286
01:22:52,028 --> 01:22:53,069
you have to do on your side.

2287
01:22:54,129 --> 01:22:56,213
synchronizing the two repositories?

2288
01:22:57,316 --> 01:22:58,679
Yeah.

2289
01:22:58,679 --> 01:22:59,059
Okay.

2290
01:22:59,059 --> 01:23:02,446
So as it says here, after

2291
01:23:02,446 --> 01:23:03,529
a few pull requests are

2292
01:23:03,529 --> 01:23:06,094
merged, your update your fork with changes.

2293
01:23:06,094 --> 01:23:08,680
So let's see what that's all about.

2294
01:23:08,680 --> 01:23:12,287
So here we are at main

2295
01:23:12,287 --> 01:23:14,251
here in my own repository.

2296
01:23:14,251 --> 01:23:14,632
There's

2297
01:23:14,632 --> 01:23:17,559
My account, this is the

2298
01:23:17,559 --> 01:23:18,823
repository that I named it.

2299
01:23:18,823 --> 01:23:19,925
And this is where it's from.

2300
01:23:20,727 --> 01:23:22,211
And we have this little information here.

2301
01:23:22,211 --> 01:23:23,655
This branch is three commits

2302
01:23:23,655 --> 01:23:26,722
behind this particular, I mean,

2303
01:23:26,722 --> 01:23:30,191
the original branch, the original, yeah.

2304
01:23:30,191 --> 01:23:33,197
repository and branch.

2305
01:23:33,197 --> 01:23:34,219
And so then we have the

2306
01:23:34,219 --> 01:23:36,764
option to update this branch

2307
01:23:36,764 --> 01:23:39,009
and pull the changes from it

2308
01:23:39,009 --> 01:23:43,979
into our local fork of the repository.

2309
01:23:44,841 --> 01:23:46,043
So we can click there and

2310
01:23:46,043 --> 01:23:47,947
then click update branch.

2311
01:23:51,082 --> 01:23:52,424
And then they come and now

2312
01:23:52,424 --> 01:23:55,188
it's all is there.

2313
01:23:55,188 --> 01:23:58,033
And so we have here the commits there.

2314
01:23:58,033 --> 01:23:59,876
We have the additional optional,

2315
01:23:59,876 --> 01:24:02,780
fix the section title and the

2316
01:24:02,780 --> 01:24:04,483
merge of the request.

2317
01:24:05,365 --> 01:24:06,707
So that has it there.

2318
01:24:06,707 --> 01:24:07,588
And if we wanted to just

2319
01:24:07,588 --> 01:24:08,990
see what that looks like, we

2320
01:24:08,990 --> 01:24:15,821
can go to the, oops, the forks.

2321
01:24:15,821 --> 01:24:16,282
Which was.

2322
01:24:18,145 --> 01:24:18,365
Right.

2323
01:24:20,468 --> 01:24:21,570
I think maybe.

2324
01:24:23,333 --> 01:24:23,513
Yes.

2325
01:24:27,560 --> 01:24:28,762
And I'm just going to move this.

2326
01:24:28,762 --> 01:24:29,723
And so there, we can see

2327
01:24:29,723 --> 01:24:36,133
how we have this fork and

2328
01:24:36,133 --> 01:24:37,956
that we've merged it back in,

2329
01:24:37,956 --> 01:24:41,742
into our main repository.

2330
01:24:41,742 --> 01:24:42,824
So there it is.

2331
01:24:44,525 --> 01:24:45,386
So this is something you

2332
01:24:45,386 --> 01:24:47,789
have to do yourself

2333
01:24:47,789 --> 01:24:49,410
because synchronization between

2334
01:24:49,410 --> 01:24:50,512
four repositories does not

2335
01:24:50,512 --> 01:24:51,373
happen automatically.

2336
01:24:52,314 --> 01:24:54,496
It's easy to do, to update it

2337
01:24:54,496 --> 01:24:55,978
as you have just seen now,

2338
01:24:55,978 --> 01:24:56,879
but you should keep in mind

2339
01:24:56,879 --> 01:24:57,640
that this is not something

2340
01:24:57,640 --> 01:24:58,621
that is done automatically.

2341
01:25:00,663 --> 01:25:01,844
So if you want to make

2342
01:25:01,844 --> 01:25:02,685
sure that you are not working

2343
01:25:02,685 --> 01:25:04,047
on an outdated one, regularly

2344
01:25:04,047 --> 01:25:05,408
check whether you can synchronize it.

2345
01:25:07,291 --> 01:25:09,153
Okay, I think we have

2346
01:25:09,153 --> 01:25:12,576
now 25 minutes planned again.

2347
01:25:12,576 --> 01:25:13,958
So I will share my screen again.

2348
01:25:21,785 --> 01:25:23,047
Okay, so if you go down

2349
01:25:23,047 --> 01:25:25,632
here, we have 25 minutes.

2350
01:25:25,632 --> 01:25:26,514
So that would mean that

2351
01:25:26,514 --> 01:25:31,243
the exercise will end by 10 to the full hour.

2352
01:25:31,243 --> 01:25:33,347
And then we have a 10 minute break.

2353
01:25:33,347 --> 01:25:34,810
So in 25 minutes, I will

2354
01:25:34,810 --> 01:25:37,535
just announce that the break will start.

2355
01:25:37,535 --> 01:25:39,018
And then in 35 minutes, we

2356
01:25:39,018 --> 01:25:40,581
are back to discuss any

2357
01:25:40,581 --> 01:25:42,786
remaining questions and wrap up

2358
01:25:42,786 --> 01:25:43,507
what we've learned today.

2359
01:25:45,377 --> 01:25:47,407
So having said that, good

2360
01:25:47,407 --> 01:25:49,075
luck with the last exercise and

2361
01:25:49,075 --> 01:25:51,508
see you in 25 minutes.

2362
01:25:51,508 --> 01:25:51,809
Bye.

2363
01:25:54,799 --> 01:25:56,461
Okay, we're back online.

2364
01:25:56,461 --> 01:25:56,982
Welcome back.

2365
01:25:58,564 --> 01:25:59,345
I see that a lot of

2366
01:25:59,345 --> 01:26:00,287
pull requests have already been

2367
01:26:00,287 --> 01:26:01,068
created and managed.

2368
01:26:01,068 --> 01:26:01,669
Thank you for that.

2369
01:26:03,852 --> 01:26:04,893
There was one question which

2370
01:26:04,893 --> 01:26:06,135
I quickly wanted to address since

2371
01:26:06,135 --> 01:26:07,437
I think it's not something

2372
01:26:07,437 --> 01:26:09,760
we have mentioned and can be quite confusing.

2373
01:26:09,760 --> 01:26:11,282
And that's this question here.

2374
01:26:11,282 --> 01:26:12,724
How do you create a folder on GitHub?

2375
01:26:13,526 --> 01:26:14,387
So let me just go to

2376
01:26:14,387 --> 01:26:15,248
one of the repositories.

2377
01:26:16,069 --> 01:26:19,174
This is maybe a bit counterintuitive,

2378
01:26:19,174 --> 01:26:21,417
but in GitHub, it doesn't

2379
01:26:21,417 --> 01:26:24,178
track any folders, only files.

2380
01:26:24,178 --> 01:26:25,079
So, but you can trick

2381
01:26:25,079 --> 01:26:26,781
it into creating folders by

2382
01:26:26,781 --> 01:26:28,884
creating a file inside of that folder.

2383
01:26:28,884 --> 01:26:29,745
So I just quickly want to

2384
01:26:29,745 --> 01:26:30,426
show how to do that.

2385
01:26:31,467 --> 01:26:32,168
If you're in your GitHub

2386
01:26:32,168 --> 01:26:33,230
repository like this one, you

2387
01:26:33,230 --> 01:26:34,611
can click here on plus and

2388
01:26:34,611 --> 01:26:35,473
then create new file.

2389
01:26:37,335 --> 01:26:38,737
And then you can choose the file name here.

2390
01:26:38,737 --> 01:26:44,945
And by making a directory, we can do

2391
01:26:44,945 --> 01:26:46,707
that by choosing the directory

2392
01:26:46,707 --> 01:26:49,150
name, let's say fish with this.

2393
01:26:49,150 --> 01:26:51,904
And then we do slash.

2394
01:26:51,904 --> 01:26:53,326
And now we've created a directory,

2395
01:26:53,326 --> 01:26:54,347
and now we've created a file

2396
01:26:54,347 --> 01:26:56,089
inside of the directory.

2397
01:26:56,089 --> 01:26:57,110
So we can have, I don't

2398
01:27:01,736 --> 01:27:04,038
know, let's see, I don't know, .

2399
01:27:13,970 --> 01:27:15,952
So if I do it like this,

2400
01:27:15,952 --> 01:27:18,956
and I commit the changes, which I

2401
01:27:18,956 --> 01:27:20,117
now do, by the way, in my

2402
01:27:20,117 --> 01:27:22,465
own repository, so I'm not

2403
01:27:22,465 --> 01:27:23,987
I'm not screwing up the central one.

2404
01:27:24,968 --> 01:27:27,171
If I commit this, cool, but

2405
01:27:27,171 --> 01:27:30,274
I was thinking of a nice commit message.

2406
01:27:30,274 --> 01:27:31,296
Yeah, okay, I'm happy with that.

2407
01:27:35,541 --> 01:27:36,983
If I now go to the code,

2408
01:27:36,983 --> 01:27:40,126
and now I see there is an additional directory,

2409
01:27:40,126 --> 01:27:41,268
and inside of this directory,

2410
01:27:41,268 --> 01:27:42,469
I have now the file that I created.

2411
01:27:43,370 --> 01:27:45,077
So this might not be really

2412
01:27:45,077 --> 01:27:46,258
intuitive, at least.

2413
01:27:47,099 --> 01:27:48,200
I run into this problem also

2414
01:27:48,200 --> 01:27:49,402
myself a few times where I

2415
01:27:49,402 --> 01:27:50,923
was confused about not being

2416
01:27:50,923 --> 01:27:51,904
able to add directories.

2417
01:27:51,904 --> 01:27:53,126
So hopefully this answers the question.

2418
01:27:54,447 --> 01:27:55,388
Let's see whether there are

2419
01:27:55,388 --> 01:27:56,189
any other questions.

2420
01:27:57,150 --> 01:27:57,951
Yeah, so should you make

2421
01:27:57,951 --> 01:28:00,193
a draft pull request or a pull request?

2422
01:28:00,193 --> 01:28:02,395
This is something we addressed

2423
01:28:02,395 --> 01:28:04,318
earlier, but I think it's good to repeat it.

2424
01:28:04,318 --> 01:28:07,181
So you would create a draft pull request

2425
01:28:07,181 --> 01:28:08,942
if you have some changes that

2426
01:28:08,942 --> 01:28:12,685
are not done yet, but that you want to

2427
01:28:12,685 --> 01:28:13,546
get feedback on.

2428
01:28:13,546 --> 01:28:14,287
So it can already show

2429
01:28:14,287 --> 01:28:15,209
other people, look, this is

2430
01:28:15,209 --> 01:28:15,890
what I'm working on.

2431
01:28:15,890 --> 01:28:17,372
This is the structure of the

2432
01:28:17,372 --> 01:28:18,213
code that I envisioned.

2433
01:28:18,213 --> 01:28:21,338
These are the topics that I want to tackle.

2434
01:28:21,338 --> 01:28:21,999
And then you can already

2435
01:28:21,999 --> 01:28:23,121
get feedback before you actually

2436
01:28:23,121 --> 01:28:24,363
have to implement every single bit.

2437
01:28:25,284 --> 01:28:26,566
But if you have a really clear idea of

2438
01:28:26,566 --> 01:28:27,447
what you want to do, and

2439
01:28:27,447 --> 01:28:28,970
you already have everything with

2440
01:28:28,970 --> 01:28:29,851
mouse, then you would try to

2441
01:28:29,851 --> 01:28:30,872
no local requests because then

2442
01:28:30,872 --> 01:28:31,453
it can be crashed.

2443
01:28:33,496 --> 01:28:33,837
Okay.

2444
01:28:35,079 --> 01:28:35,940
We said that we would have

2445
01:28:35,940 --> 01:28:36,921
a 10 minute break now.

2446
01:28:36,921 --> 01:28:38,604
So that would be the last break.

2447
01:28:38,604 --> 01:28:42,182
So we have it now.

2448
01:28:42,182 --> 01:28:43,926
1452 in Central Europe.

2449
01:28:43,926 --> 01:28:45,250
So let's say we meet at

2450
01:28:45,250 --> 01:28:47,696
two past the full hour for

2451
01:28:47,696 --> 01:28:49,841
the last Q&A session and to wrap up

2452
01:28:49,841 --> 01:28:50,703
what we've learned today and

2453
01:28:50,703 --> 01:28:52,307
give you an outlook on the

2454
01:28:52,307 --> 01:28:53,470
lectures that will follow up in

2455
01:28:53,470 --> 01:28:54,332
the next couple of weeks in

2456
01:28:54,332 --> 01:28:56,478
the Codify Me seminar.

2457
01:28:56,478 --> 01:28:59,000
So with that said, see you all at two past.

2458
01:29:02,480 --> 01:29:04,863
Okay, welcome back everyone to

2459
01:29:04,863 --> 01:29:07,226
the last part of today's

2460
01:29:07,226 --> 01:29:09,909
seminar, of today's lectures.

2461
01:29:10,810 --> 01:29:13,012
I see there was actually quite

2462
01:29:13,012 --> 01:29:15,155
a few good questions here in the document.

2463
01:29:15,155 --> 01:29:16,176
Most of them are already answered,

2464
01:29:16,176 --> 01:29:16,957
but the last one I would

2465
01:29:16,957 --> 01:29:19,720
like to discuss here on stream as well.

2466
01:29:20,922 --> 01:29:22,103
So the question is, when

2467
01:29:22,103 --> 01:29:24,085
we have modified our own fork,

2468
01:29:25,187 --> 01:29:25,867
and in the meantime, the

2469
01:29:25,867 --> 01:29:27,289
original repository has moved on.

2470
01:29:29,716 --> 01:29:31,057
how do we deal with these situations?

2471
01:29:31,057 --> 01:29:32,879
Like when do we sync and

2472
01:29:32,879 --> 01:29:35,061
how do we make sure that, or

2473
01:29:35,061 --> 01:29:37,283
what is the best approach in this situation?

2474
01:29:40,086 --> 01:29:42,388
So this is hinting one concept

2475
01:29:42,388 --> 01:29:43,309
that we have not discussed

2476
01:29:43,309 --> 01:29:44,270
today, but yesterday, and

2477
01:29:44,270 --> 01:29:45,291
that's merge conflicts.

2478
01:29:46,111 --> 01:29:48,834
So if the changes that you have made

2479
01:29:48,834 --> 01:29:49,955
and the changes which have

2480
01:29:49,955 --> 01:29:51,937
happened on the upstream repository,

2481
01:29:51,937 --> 01:29:54,319
if they don't address the same

2482
01:29:54,319 --> 01:29:55,961
files or the same lines in

2483
01:29:55,961 --> 01:29:57,482
the same file, then this is

2484
01:29:57,482 --> 01:29:58,808
not a problem really.

2485
01:29:58,808 --> 01:30:00,070
But of course you can

2486
01:30:00,070 --> 01:30:01,531
run into merge conflicts.

2487
01:30:01,531 --> 01:30:02,292
So let's say like you

2488
01:30:02,292 --> 01:30:04,875
are working on changing a recipe.

2489
01:30:04,875 --> 01:30:06,357
Let's say this baked salmon recipe

2490
01:30:06,357 --> 01:30:07,358
that I made previously, like

2491
01:30:07,358 --> 01:30:10,041
in the instructions I added a certain tool.

2492
01:30:10,041 --> 01:30:10,742
And then in the meantime,

2493
01:30:10,742 --> 01:30:12,745
someone else has done something similar

2494
01:30:12,745 --> 01:30:14,487
and the other one has been merged

2495
01:30:14,487 --> 01:30:15,228
and there will be a

2496
01:30:15,228 --> 01:30:17,030
merge conflict which then needs to be resolved.

2497
01:30:17,030 --> 01:30:17,831
And then you need actually

2498
01:30:17,831 --> 01:30:19,993
one person during the review

2499
01:30:19,993 --> 01:30:24,799
then deciding which, which,

2500
01:30:25,707 --> 01:30:27,089
commits to or like which

2501
01:30:27,089 --> 01:30:30,094
changed to actually then commit to the branch.

2502
01:30:30,094 --> 01:30:31,757
So merge conflicts can still occur,

2503
01:30:31,757 --> 01:30:32,859
even if you use pull requests

2504
01:30:32,859 --> 01:30:33,319
and if you work

2505
01:30:33,319 --> 01:30:35,864
between different repositories, that's

2506
01:30:35,864 --> 01:30:37,206
not something you can magically escape from.

2507
01:30:38,528 --> 01:30:39,630
So I think, yeah, so thank

2508
01:30:39,630 --> 01:30:40,491
you very much for this question.

2509
01:30:40,491 --> 01:30:42,414
I think it kind of pinpointed, well,

2510
01:30:42,414 --> 01:30:44,357
like it's good that you asked

2511
01:30:44,357 --> 01:30:45,820
because it's reminded me

2512
01:30:45,820 --> 01:30:47,963
of mentioning merge conflicts once again.

2513
01:30:49,446 --> 01:30:52,859
In general, I would try to always think

2514
01:30:52,859 --> 01:30:54,601
branch that I work on as frequently

2515
01:30:54,601 --> 01:30:55,542
as possible with the upstream

2516
01:30:55,542 --> 01:30:56,544
branch to make sure that

2517
01:30:56,544 --> 01:30:58,206
they don't diverge too far.

2518
01:30:59,207 --> 01:31:04,073
Because if you get kind of,

2519
01:31:04,073 --> 01:31:04,934
if you end up working with

2520
01:31:04,934 --> 01:31:06,135
an outdated version of the

2521
01:31:06,135 --> 01:31:08,138
curves, then your changes are

2522
01:31:08,959 --> 01:31:09,940
probably not going to be very

2523
01:31:09,940 --> 01:31:17,089
welcome in the original repository.

2524
01:31:17,089 --> 01:31:17,409
Okay.

2525
01:31:19,933 --> 01:31:21,154
So let's wrap up.

2526
01:31:21,154 --> 01:31:21,955
Let's go to the

2527
01:31:22,812 --> 01:31:26,677
summary section of the lecture material.

2528
01:31:27,559 --> 01:31:28,420
So we've learned now how

2529
01:31:28,420 --> 01:31:29,962
we can approach other people's repositories.

2530
01:31:31,204 --> 01:31:32,706
And we have here this nice summary,

2531
01:31:32,706 --> 01:31:33,908
which tells you what to do

2532
01:31:33,908 --> 01:31:34,929
depending on the size of the

2533
01:31:34,929 --> 01:31:35,931
project or the changes that

2534
01:31:35,931 --> 01:31:37,413
you want to propose.

2535
01:31:37,413 --> 01:31:38,314
So if it's just a very

2536
01:31:38,314 --> 01:31:41,999
small one, then the go-to suggestion

2537
01:31:41,999 --> 01:31:44,723
would be to clone the repository,

2538
01:31:44,723 --> 01:31:46,866
create a new branch, push your

2539
01:31:46,866 --> 01:31:49,350
changes to the repository, and

2540
01:31:49,350 --> 01:31:50,271
then create a pull request.

2541
01:31:52,276 --> 01:31:54,478
If you work on the largest system,

2542
01:31:54,478 --> 01:31:56,140
or sorry, a larger project

2543
01:31:56,140 --> 01:31:57,461
with more people or with someone

2544
01:31:57,461 --> 01:31:58,943
that you don't know as well,

2545
01:31:58,943 --> 01:32:00,044
let's say you want to reach

2546
01:32:00,044 --> 01:32:03,507
out to the maintainers of the Python library,

2547
01:32:03,507 --> 01:32:04,809
or it could be Julia library, whatever,

2548
01:32:06,090 --> 01:32:07,411
you might want to actually

2549
01:32:07,411 --> 01:32:10,414
discuss it first via an issue

2550
01:32:10,414 --> 01:32:11,756
or a draft pull request, whether

2551
01:32:11,756 --> 01:32:13,478
what you intend to do makes

2552
01:32:13,478 --> 01:32:14,419
sense to them and whether

2553
01:32:14,419 --> 01:32:15,940
that's something, or whether that's

2554
01:32:15,940 --> 01:32:19,083
a direction they want the project to go in.

2555
01:32:19,083 --> 01:32:19,804
So in this case, you will

2556
01:32:19,804 --> 01:32:21,726
also create a issue first,

2557
01:32:22,735 --> 01:32:23,776
But you describe the problem,

2558
01:32:23,776 --> 01:32:26,579
so always over-describe, how would

2559
01:32:26,579 --> 01:32:28,641
you say, like over-explain what the issue is.

2560
01:32:28,641 --> 01:32:29,742
Like you're not talking to

2561
01:32:29,742 --> 01:32:30,764
people in person, you're doing

2562
01:32:30,764 --> 01:32:32,145
everything by text.

2563
01:32:32,145 --> 01:32:34,928
So you be very specific

2564
01:32:34,928 --> 01:32:35,829
and be very concrete.

2565
01:32:37,210 --> 01:32:39,293
And then in the best case, like wait

2566
01:32:39,293 --> 01:32:41,495
for feedback before you start

2567
01:32:41,495 --> 01:32:43,817
writing 5,000 lines of code to make sure

2568
01:32:43,817 --> 01:32:45,519
that your contributions are

2569
01:32:45,519 --> 01:32:50,204
actually welcomed by the contributors

2570
01:32:50,204 --> 01:32:51,966
or by the maintainers of the project.

2571
01:32:52,942 --> 01:32:54,504
And then if you have received feedback

2572
01:32:54,504 --> 01:32:55,766
and if they give the green

2573
01:32:55,766 --> 01:32:56,908
lights to go on and work

2574
01:32:56,908 --> 01:32:58,330
on this project, then you can

2575
01:32:58,330 --> 01:32:59,833
put in the hours and actually

2576
01:32:59,833 --> 01:33:01,014
write the code that you want to contribute.

2577
01:33:03,939 --> 01:33:06,142
And also by creating this

2578
01:33:06,142 --> 01:33:08,005
issue, you also indicate that

2579
01:33:08,005 --> 01:33:09,508
this is something that you work

2580
01:33:09,508 --> 01:33:10,850
on to make sure that not

2581
01:33:10,850 --> 01:33:12,252
other people have the same, find

2582
01:33:12,252 --> 01:33:13,073
out the same problem.

2583
01:33:13,073 --> 01:33:14,095
And then you have three,

2584
01:33:14,095 --> 01:33:15,156
four people working on the

2585
01:33:15,156 --> 01:33:16,318
same, fixing the same issue if

2586
01:33:16,318 --> 01:33:17,340
only one would be required.

2587
01:33:20,324 --> 01:33:20,805
Okay.

2588
01:33:24,532 --> 01:33:26,915
Yeah, similar story if you have an idea

2589
01:33:26,915 --> 01:33:27,736
for a new feature in a

2590
01:33:27,736 --> 01:33:29,257
codebase and you want to suggest that.

2591
01:33:31,240 --> 01:33:32,401
Let's see, I mean, we've

2592
01:33:32,401 --> 01:33:33,562
already spoken about all these things.

2593
01:33:33,562 --> 01:33:35,164
So in principle, we are done

2594
01:33:35,164 --> 01:33:37,607
with most of, or basically all

2595
01:33:37,607 --> 01:33:38,608
of the lectures for today.

2596
01:33:39,409 --> 01:33:40,230
Let me just click to see

2597
01:33:40,230 --> 01:33:41,151
in the document if there are

2598
01:33:41,151 --> 01:33:42,613
any questions that came up.

2599
01:33:45,336 --> 01:33:46,477
No, there's a longer answer.

2600
01:33:48,399 --> 01:33:51,182
If there are no questions, then

2601
01:33:51,182 --> 01:33:53,425
I think we can wrap up

2602
01:33:54,788 --> 01:33:55,709
lecture for today.

2603
01:33:55,709 --> 01:33:59,274
And in which case I will

2604
01:33:59,274 --> 01:34:01,097
then give the words to [name]

2605
01:34:02,960 --> 01:34:04,301
to give an outline on the

2606
01:34:04,301 --> 01:34:06,304
upcoming lectures of the Code

2607
01:34:06,304 --> 01:34:07,947
of Pioneering workshop now.

2608
01:34:07,947 --> 01:34:08,788
But before I do that, I

2609
01:34:08,788 --> 01:34:10,190
just want to thank everyone who's involved.

2610
01:34:11,331 --> 01:34:13,575
You only see people in front of the camera.

2611
01:34:13,575 --> 01:34:15,838
So that's me and [name] and [name].

2612
01:34:15,838 --> 01:34:16,599
So thank you all for

2613
01:34:17,420 --> 01:34:18,562
volunteering to work on this.

2614
01:34:18,562 --> 01:34:21,286
It's always a pleasure to work with you.

2615
01:34:21,286 --> 01:34:21,926
But there are also many

2616
01:34:21,926 --> 01:34:22,848
more people behind the camera

2617
01:34:22,848 --> 01:34:24,320
which have not been

2618
01:34:24,320 --> 01:34:26,222
directly seen, which I also want to thank.

2619
01:34:26,222 --> 01:34:27,703
So [name], [name], [name], and

2620
01:34:27,703 --> 01:34:28,965
all the others who have worked on this.

2621
01:34:29,846 --> 01:34:31,187
It's quite a find we wouldn't work

2622
01:34:31,187 --> 01:34:32,688
if there wouldn't be that

2623
01:34:32,688 --> 01:34:35,051
many people putting in so

2624
01:34:35,051 --> 01:34:37,573
much effort and volunteer to work on this.

2625
01:34:37,573 --> 01:34:38,855
So thank you all for doing that.

2626
01:34:38,855 --> 01:34:40,056
And also thank you for

2627
01:34:40,056 --> 01:34:40,697
coming to the course.

2628
01:34:40,697 --> 01:34:42,378
And I hope that the

2629
01:34:42,378 --> 01:34:43,439
concepts that you've learned today

2630
01:34:43,439 --> 01:34:44,480
will help you in your

2631
01:34:44,480 --> 01:34:46,522
future academic careers and make

2632
01:34:46,522 --> 01:34:47,924
your life and your everyday

2633
01:34:47,924 --> 01:34:48,985
life as a researcher easier.

2634
01:34:50,226 --> 01:34:53,009
So with that said, [name], may

2635
01:34:53,009 --> 01:34:54,745
I give the word to you?

2636
01:34:54,745 --> 01:34:56,867
Thank you so much, [name] and [name].

2637
01:34:57,869 --> 01:35:01,313
I hope all the participants felt

2638
01:35:01,313 --> 01:35:02,934
how important this day was and

2639
01:35:02,934 --> 01:35:04,977
how fun it is to

2640
01:35:04,977 --> 01:35:07,139
collaborate with other people and

2641
01:35:07,139 --> 01:35:09,902
or improve somebody else's repository.

2642
01:35:11,084 --> 01:35:13,587
So if you, and we can

2643
01:35:13,587 --> 01:35:15,168
also switch here to the notes

2644
01:35:15,168 --> 01:35:18,272
document so that we can see it.

2645
01:35:19,670 --> 01:35:20,972
in the at the bottom of

2646
01:35:20,972 --> 01:35:22,054
the notes document you can

2647
01:35:22,054 --> 01:35:23,215
keep on asking questions of

2648
01:35:23,215 --> 01:35:26,921
course that's the feedback for today

2649
01:35:28,183 --> 01:35:29,825
and the news box is

2650
01:35:29,825 --> 01:35:31,307
of course the interesting one

2651
01:35:32,349 --> 01:35:34,031
today we cover everything as is

2652
01:35:34,031 --> 01:35:36,395
in the schedule and please

2653
01:35:36,395 --> 01:35:37,837
feel free to continue to

2654
01:35:37,837 --> 01:35:40,641
explore the github interface this

2655
01:35:40,641 --> 01:35:42,364
is actually a great opportunity

2656
01:35:42,364 --> 01:35:43,345
because you know

2657
01:35:43,345 --> 01:35:45,027
Even if you do mistakes, even

2658
01:35:45,027 --> 01:35:46,929
if you, I don't know, break

2659
01:35:46,929 --> 01:35:50,493
one of these exercise repositories,

2660
01:35:50,493 --> 01:35:51,654
that's the purpose of it.

2661
01:35:51,654 --> 01:35:53,276
So you can play with the buttons

2662
01:35:53,276 --> 01:35:54,757
and any other features that we

2663
01:35:54,757 --> 01:35:55,878
did not have time to cover.

2664
01:35:57,340 --> 01:35:59,402
For next week, for the part

2665
01:35:59,402 --> 01:36:03,126
two of Code Refinery, so back until last year,

2666
01:36:03,126 --> 01:36:04,408
until last springtime, we used

2667
01:36:04,408 --> 01:36:06,650
to have it again as a second week.

2668
01:36:06,650 --> 01:36:08,452
but now from the feedback

2669
01:36:08,452 --> 01:36:09,633
from previous year we decided to

2670
01:36:09,633 --> 01:36:10,654
change it a little bit and

2671
01:36:10,654 --> 01:36:12,696
instead of having a second week

2672
01:36:12,696 --> 01:36:14,017
and that's it we're gonna

2673
01:36:14,017 --> 01:36:17,141
have single episodes every Wednesday

2674
01:36:17,141 --> 01:36:18,802
for the next six weeks

2675
01:36:19,943 --> 01:36:22,146
there will be shorter episodes of two

2676
01:36:22,146 --> 01:36:24,268
and a half hours each and

2677
01:36:24,268 --> 01:36:25,469
they will still cover the

2678
01:36:25,469 --> 01:36:27,671
usual Code Refinery workshop materials

2679
01:36:28,812 --> 01:36:29,753
but the idea is more

2680
01:36:29,753 --> 01:36:32,156
that they are self-contained episodes

2681
01:36:32,156 --> 01:36:34,358
so that if there's something

2682
01:36:34,358 --> 01:36:36,502
that is truly interesting you

2683
01:36:36,502 --> 01:36:38,165
can also share it with your colleagues

2684
01:36:38,165 --> 01:36:40,489
who maybe are happy just to join

2685
01:36:40,489 --> 01:36:42,833
for that for that workshop let's say

2686
01:36:42,833 --> 01:36:43,654
that you're planning to

2687
01:36:43,654 --> 01:36:45,558
write documentation together and you

2688
01:36:45,558 --> 01:36:46,820
want all your colleagues to

2689
01:36:46,820 --> 01:36:48,803
watch the documentation episode and

2690
01:36:48,803 --> 01:36:50,967
so on so feel free to browse

2691
01:36:50,967 --> 01:36:53,872
the topics for the future days

2692
01:36:53,872 --> 01:36:57,258
the next one will be next wednesday

2693
01:36:57,258 --> 01:36:59,841
at 12 o'clock oslo stockholm

2694
01:36:59,841 --> 01:37:02,483
rome time zone and that's

2695
01:37:02,483 --> 01:37:06,087
the main workshop about reproducibility

2696
01:37:06,087 --> 01:37:08,109
and we will cover everything

2697
01:37:08,109 --> 01:37:10,571
from the reproducibility crisis

2698
01:37:10,571 --> 01:37:15,296
to data management out organized folders

2699
01:37:15,296 --> 01:37:16,777
and also considering the

2700
01:37:16,777 --> 01:37:18,899
whole computer because sometimes

2701
01:37:18,899 --> 01:37:20,420
when you change computer things

2702
01:37:20,420 --> 01:37:22,683
are not reproducible anymore and

2703
01:37:22,683 --> 01:37:25,085
so we will introduce concepts like

2704
01:37:25,085 --> 01:37:28,553
containers and environments and

2705
01:37:28,553 --> 01:37:29,863
things like that.

2706
01:37:30,788 --> 01:37:32,651
Right, so we're actually a

2707
01:37:32,651 --> 01:37:34,273
little bit early, meaning that

2708
01:37:34,273 --> 01:37:36,957
we will still have a few minutes.

2709
01:37:36,957 --> 01:37:40,682
So if there's questions, please,

2710
01:37:40,682 --> 01:37:42,405
you can keep on sending them.

2711
01:37:42,405 --> 01:37:43,126
Maybe I can ask a

2712
01:37:43,126 --> 01:37:45,289
question to our instructors here.

2713
01:37:46,170 --> 01:37:48,874
Do you often contribute to

2714
01:37:48,874 --> 01:37:50,737
other people, people that you don't know?

2715
01:37:50,737 --> 01:37:52,660
Do you contribute to

2716
01:37:52,660 --> 01:37:56,886
their repositories, like with pull requests,

2717
01:37:56,886 --> 01:37:57,627
with the techniques that

2718
01:37:57,627 --> 01:37:59,209
you've shown today, [name]?

2719
01:38:01,130 --> 01:38:03,216
Not frequently, but I have

2720
01:38:04,259 --> 01:38:05,844
created sample requests to

2721
01:38:05,844 --> 01:38:07,048
the documentation of some

2722
01:38:07,048 --> 01:38:08,171
programming languages and so on.

2723
01:38:08,171 --> 01:38:10,017
There were some smaller fixes here

2724
01:38:10,017 --> 01:38:10,739
and there, but I saw that

2725
01:38:10,739 --> 01:38:11,622
there was a small typo

2726
01:38:11,622 --> 01:38:13,507
or something which clearly was wrong.

2727
01:38:14,410 --> 01:38:15,072
Yeah, definitely.

2728
01:38:19,827 --> 01:38:20,889
Which project was there?

2729
01:38:20,889 --> 01:38:22,313
Was it some library?

2730
01:38:23,415 --> 01:38:24,417
Plasma Pi.

2731
01:38:24,417 --> 01:38:26,582
So in plasma physics, that

2732
01:38:26,582 --> 01:38:28,947
is the biggest Python package that,

2733
01:38:28,947 --> 01:38:30,972
as far as I know, exists.

2734
01:38:30,972 --> 01:38:31,974
And I contributed some of

2735
01:38:31,974 --> 01:38:33,738
the routines through my postdoc

2736
01:38:33,738 --> 01:38:35,061
that we developed in our research group.

2737
01:38:35,061 --> 01:38:36,985
So that's more people than

2738
01:38:36,985 --> 01:38:38,909
just our research group have access to.

2739
01:38:38,909 --> 01:38:39,908
I see, I see.

2740
01:38:39,908 --> 01:38:41,530
Yeah, definitely fixing typos

2741
01:38:41,530 --> 01:38:42,311
and small things.

2742
01:38:42,311 --> 01:38:44,233
It's something that now all of you

2743
01:38:44,233 --> 01:38:45,234
who are watching can

2744
01:38:45,234 --> 01:38:47,316
actually immediately start doing.

2745
01:38:47,316 --> 01:38:48,377
I've been also doing that.

2746
01:38:48,377 --> 01:38:50,579
And in the end, you might

2747
01:38:50,579 --> 01:38:53,162
read a nice documentation or even books

2748
01:38:53,162 --> 01:38:54,764
because with Git, you can

2749
01:38:54,764 --> 01:38:57,326
also create books and you find

2750
01:38:57,326 --> 01:38:59,949
a typo or there's a way to improve something.

2751
01:38:59,949 --> 01:39:01,110
And it's very easy with

2752
01:39:01,110 --> 01:39:02,912
forking and pull request.

2753
01:39:02,912 --> 01:39:03,933
What about you, [name]?

2754
01:39:03,933 --> 01:39:06,256
Have you contributed to

2755
01:39:06,256 --> 01:39:08,647
some strangers repository?

2756
01:39:08,647 --> 01:39:13,213
uh yes um i come i've sent

2757
01:39:13,213 --> 01:39:15,937
some uh fixes to some code that

2758
01:39:15,937 --> 01:39:17,258
was in a git repository

2759
01:39:17,258 --> 01:39:19,581
associated with some published papers

2760
01:39:19,581 --> 01:39:23,567
as well as for some code

2761
01:39:23,567 --> 01:39:26,130
that was used in our clinics

2762
01:39:27,752 --> 01:39:32,258
in their some of their utilities cool

2763
01:39:33,352 --> 01:39:36,095
great so hopefully you know

2764
01:39:36,095 --> 01:39:38,057
this motivates all of you who

2765
01:39:38,057 --> 01:39:40,500
are watching to go out find

2766
01:39:40,500 --> 01:39:43,002
little errors typos there's a

2767
01:39:43,002 --> 01:39:44,744
specific type of label what is

2768
01:39:44,744 --> 01:39:46,566
the label easy first issue

2769
01:39:46,566 --> 01:39:47,687
or something like that i

2770
01:39:47,687 --> 01:39:52,072
never remember yes yeah so that

2771
01:39:53,093 --> 01:39:54,614
you can you know take

2772
01:39:54,614 --> 01:39:55,996
a challenge and contribute to

2773
01:39:55,996 --> 01:39:58,619
open source software right is

2774
01:39:58,619 --> 01:40:01,722
there anything to lift up from the notes

2775
01:40:05,262 --> 01:40:07,085
yeah somebody's asking this general

2776
01:40:07,085 --> 01:40:08,428
in the general questions will

2777
01:40:08,428 --> 01:40:10,011
there be exercises or just

2778
01:40:10,011 --> 01:40:12,375
lectures in the next weeks and

2779
01:40:12,375 --> 01:40:13,658
actually this is the main reason

2780
01:40:13,658 --> 01:40:17,124
of the change because in the previous way

2781
01:40:17,124 --> 01:40:19,669
that we did it there were only lectures

2782
01:40:19,669 --> 01:40:20,971
and the exercises were just

2783
01:40:20,971 --> 01:40:23,436
demos but now with having two

2784
01:40:23,436 --> 01:40:24,538
and a half hours for each

2785
01:40:24,538 --> 01:40:27,183
episodes we will have time for exercises

2786
01:40:27,183 --> 01:40:29,925
Which also means that now

2787
01:40:29,925 --> 01:40:32,648
the exercises will use Python.

2788
01:40:32,648 --> 01:40:34,089
It doesn't mean that you need

2789
01:40:34,089 --> 01:40:35,551
to know how to use Python.

2790
01:40:37,953 --> 01:40:39,714
But the goal is just to

2791
01:40:39,714 --> 01:40:43,938
show, for example, how to run some scripts.

2792
01:40:43,938 --> 01:40:46,100
Like, for example, in the next day,

2793
01:40:46,100 --> 01:40:47,721
next Wednesday, we will look

2794
01:40:47,721 --> 01:40:49,964
at a tool called SnakeMake, which

2795
01:40:49,964 --> 01:40:51,625
is a tool for pipelines.

2796
01:40:52,526 --> 01:40:53,967
And then it will run,

2797
01:40:53,967 --> 01:40:57,170
SnakeMake will call some Python scripts.

2798
01:40:57,170 --> 01:40:59,452
and basically long story short

2799
01:40:59,452 --> 01:41:02,335
I'm trying to tell you that we need

2800
01:41:02,335 --> 01:41:04,357
or you need to install conda

2801
01:41:04,357 --> 01:41:05,458
and the conda environment that

2802
01:41:05,458 --> 01:41:06,739
we have defined because then

2803
01:41:06,739 --> 01:41:08,421
through conda it takes care of

2804
01:41:08,421 --> 01:41:10,543
all the python dependencies that you need

2805
01:41:11,744 --> 01:41:13,605
and so please before next Wednesday

2806
01:41:13,605 --> 01:41:14,346
if you plan to do the

2807
01:41:14,346 --> 01:41:16,148
exercises with us here on the

2808
01:41:16,148 --> 01:41:18,230
stream try to have conda on

2809
01:41:18,230 --> 01:41:19,331
your computer if you have

2810
01:41:19,331 --> 01:41:21,433
troubles installing conda just send

2811
01:41:21,433 --> 01:41:22,434
us an email and we can

2812
01:41:22,434 --> 01:41:27,038
arrange even more zoom sessions for hands-on

2813
01:41:27,038 --> 01:41:30,783
installations and someone's asking

2814
01:41:30,783 --> 01:41:32,185
for the requirements link and

2815
01:41:32,185 --> 01:41:37,473
we will post it yeah the i would say

2816
01:41:37,473 --> 01:41:39,055
that in general the language

2817
01:41:39,055 --> 01:41:42,139
agnostic we try to be as general

2818
01:41:42,139 --> 01:41:43,722
as possible then if the examples

2819
01:41:43,722 --> 01:41:45,184
in the end are for python

2820
01:41:45,184 --> 01:41:47,086
and conda conda is actually

2821
01:41:47,086 --> 01:41:48,809
quite a flexible tool itself

2822
01:41:48,809 --> 01:41:51,372
you can manage other environments

2823
01:41:51,372 --> 01:41:53,195
not just python environments

2824
01:41:53,195 --> 01:41:55,517
But of course, some other languages like R,

2825
01:41:55,517 --> 01:41:57,900
for example, also have other

2826
01:41:57,900 --> 01:42:01,444
tools for managing R environments.

2827
01:42:01,444 --> 01:42:02,945
But I'm a bit spoiling the fun here.

2828
01:42:02,945 --> 01:42:03,706
I'm really talking about

2829
01:42:03,706 --> 01:42:05,788
environments without defining environments.

2830
01:42:05,788 --> 01:42:08,191
So, you know, let's resume

2831
01:42:08,191 --> 01:42:10,614
this question next Wednesday.

2832
01:42:14,017 --> 01:42:14,318
Right.

2833
01:42:15,819 --> 01:42:19,783
So I guess we covered everything.

2834
01:42:21,225 --> 01:42:22,206
I don't see any.

2835
01:42:23,519 --> 01:42:24,763
and answer questions.

2836
01:42:24,763 --> 01:42:29,176
Did I forgot anything, [name]?

2837
01:42:31,082 --> 01:42:38,200
I think we've covered everything.

2838
01:42:38,200 --> 01:42:40,443
fine to end a bit ahead of time.

2839
01:42:40,443 --> 01:42:43,206
Yeah, people can get Well, it's Thursday.

2840
01:42:43,206 --> 01:42:45,709
So don't quite start the

2841
01:42:45,709 --> 01:42:47,912
weekend yet unless you have a good reason to.

2842
01:42:47,912 --> 01:42:50,815
But the mode is already towards Friday.

2843
01:42:50,815 --> 01:42:51,856
So yeah.

2844
01:42:52,998 --> 01:42:54,259
And it was a long day.

2845
01:42:54,259 --> 01:42:55,741
And thank you for following

2846
01:42:55,741 --> 01:42:57,503
us and for doing the exercises.

2847
01:42:57,503 --> 01:43:00,086
So what were you saying?

2848
01:43:00,086 --> 01:43:02,169
I do have any questions,

2849
01:43:02,169 --> 01:43:03,671
please feel free to add them

2850
01:43:03,671 --> 01:43:06,466
in the notes and then we can still

2851
01:43:06,466 --> 01:43:08,389
And so to answer any

2852
01:43:08,389 --> 01:43:09,523
further questions today.

2853
01:43:11,562 --> 01:43:12,943
All right, so thanks again

2854
01:43:12,943 --> 01:43:15,686
to our instructors of today, [name]

2855
01:43:15,686 --> 01:43:17,267
and [name], and thank you,

2856
01:43:17,267 --> 01:43:20,750
[name], for the broadcasting and the help.

2857
01:43:20,750 --> 01:43:22,051
And thank you everyone in

2858
01:43:22,051 --> 01:43:25,014
those in-person rooms, managing, learners,

2859
01:43:25,935 --> 01:43:29,418
and whatever, what's the

2860
01:43:29,418 --> 01:43:32,000
word, enthusiastic people about

2861
01:43:32,000 --> 01:43:33,321
Git and version control.

2862
01:43:34,122 --> 01:43:35,743
We can close this Git part

2863
01:43:35,743 --> 01:43:37,364
of the Code Refinery workshop, and

2864
01:43:37,364 --> 01:43:41,448
I will see you in six days.

2865
01:43:41,448 --> 01:43:42,892
Have a good weekend.

2866
01:43:44,176 --> 01:43:44,397
Bye.

