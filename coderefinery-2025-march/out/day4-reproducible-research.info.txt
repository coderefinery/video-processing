4.1 Reproducible Research - CodeRefinery 2025 Mar

If you can't get your code to do the same thing again, is it really science?  Or more practically, are you able to do your work?  Reproducibilty is a big deal, but we don't always learn how to do it.  In this lesson, we cover the basics, how to organize projects, record computational steps with Snakemake or other workflow managers, how to record environments with conda (and containers a bit), and sharing code and data (FAIR).

https://coderefinery.github.io/reproducible-research/

03:49 § Introduction: how the workshop all connects
10:16 § Motivation
22:17 § Organizing your projects
33:28 § Recording computational steps
56:21 § Recording dependencies
1:21:05 § Recording environments
1:42:50 § Where to go from here?

-----

This is part of the CodeRefinery 2025 March workshop.  The videos are available to everyone, but may be most useful to the people who attended the workshop and want to review later.  Day 1-2: git (individual) Day 3: git (collaborative) Day 4: reproducible research and social coding.  Day 5: documentation and Jupyter. Day 6: testing and modular code development.

Playlist: https://www.youtube.com/playlist?list=PLpLblYHCzJACpOmIzO8TywjtfYD7_d93H

Workshop webpage: https://coderefinery.github.io/2025-03-25-workshop/

CodeRefinery: https://coderefinery.org/